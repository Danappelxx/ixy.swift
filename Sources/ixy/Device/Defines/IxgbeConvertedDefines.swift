/*
as swift package manager does not support mixed sources (e.g swift/c), this RegEx-transformed
define-file is necessary
*/

let IXGBE_INTEL_VENDOR_ID: UInt32 = 0x8086
let IXGBE_DEV_ID_82598: UInt32 = 0x10B6
let IXGBE_DEV_ID_82598_BX: UInt32 = 0x1508
let IXGBE_DEV_ID_82598AF_DUAL_PORT: UInt32 = 0x10C6
let IXGBE_DEV_ID_82598AF_SINGLE_PORT: UInt32 = 0x10C7
let IXGBE_DEV_ID_82598AT: UInt32 = 0x10C8
let IXGBE_DEV_ID_82598AT2: UInt32 = 0x150B
let IXGBE_DEV_ID_82598EB_SFP_LOM: UInt32 = 0x10DB
let IXGBE_DEV_ID_82598EB_CX4: UInt32 = 0x10DD
let IXGBE_DEV_ID_82598_CX4_DUAL_PORT: UInt32 = 0x10EC
let IXGBE_DEV_ID_82598_DA_DUAL_PORT: UInt32 = 0x10F1
let IXGBE_DEV_ID_82598_SR_DUAL_PORT_EM: UInt32 = 0x10E1
let IXGBE_DEV_ID_82598EB_XF_LR: UInt32 = 0x10F4
let IXGBE_DEV_ID_82599_KX4: UInt32 = 0x10F7
let IXGBE_DEV_ID_82599_KX4_MEZZ: UInt32 = 0x1514
let IXGBE_DEV_ID_82599_KR: UInt32 = 0x1517
let IXGBE_DEV_ID_82599_COMBO_BACKPLANE: UInt32 = 0x10F8
let IXGBE_SUBDEV_ID_82599_KX4_KR_MEZZ: UInt32 = 0x000C
let IXGBE_DEV_ID_82599_CX4: UInt32 = 0x10F9
let IXGBE_DEV_ID_82599_SFP: UInt32 = 0x10FB
let IXGBE_SUBDEV_ID_82599_SFP: UInt32 = 0x11A9
let IXGBE_SUBDEV_ID_82599_SFP_WOL0: UInt32 = 0x1071
let IXGBE_SUBDEV_ID_82599_RNDC: UInt32 = 0x1F72
let IXGBE_SUBDEV_ID_82599_560FLR: UInt32 = 0x17D0
let IXGBE_SUBDEV_ID_82599_ECNA_DP: UInt32 = 0x0470
let IXGBE_SUBDEV_ID_82599_SP_560FLR: UInt32 = 0x211B
let IXGBE_SUBDEV_ID_82599_LOM_SNAP6: UInt32 = 0x2159
let IXGBE_SUBDEV_ID_82599_SFP_1OCP: UInt32 = 0x000D
let IXGBE_SUBDEV_ID_82599_SFP_2OCP: UInt32 = 0x0008
let IXGBE_SUBDEV_ID_82599_SFP_LOM_OEM1: UInt32 = 0x8976
let IXGBE_SUBDEV_ID_82599_SFP_LOM_OEM2: UInt32 = 0x06EE
let IXGBE_DEV_ID_82599_BACKPLANE_FCOE: UInt32 = 0x152A
let IXGBE_DEV_ID_82599_SFP_FCOE: UInt32 = 0x1529
let IXGBE_DEV_ID_82599_SFP_EM: UInt32 = 0x1507
let IXGBE_DEV_ID_82599_SFP_SF2: UInt32 = 0x154D
let IXGBE_DEV_ID_82599_SFP_SF_QP: UInt32 = 0x154A
let IXGBE_DEV_ID_82599_QSFP_SF_QP: UInt32 = 0x1558
let IXGBE_DEV_ID_82599EN_SFP: UInt32 = 0x1557
let IXGBE_SUBDEV_ID_82599EN_SFP_OCP1: UInt32 = 0x0001
let IXGBE_DEV_ID_82599_XAUI_LOM: UInt32 = 0x10FC
let IXGBE_DEV_ID_82599_T3_LOM: UInt32 = 0x151C
let IXGBE_DEV_ID_82599_VF: UInt32 = 0x10ED
let IXGBE_DEV_ID_82599_VF_HV: UInt32 = 0x152E
let IXGBE_DEV_ID_82599_LS: UInt32 = 0x154F
let IXGBE_DEV_ID_X540T: UInt32 = 0x1528
let IXGBE_DEV_ID_X540_VF: UInt32 = 0x1515
let IXGBE_DEV_ID_X540_VF_HV: UInt32 = 0x1530
let IXGBE_DEV_ID_X540T1: UInt32 = 0x1560
let IXGBE_DEV_ID_X550T: UInt32 = 0x1563
let IXGBE_DEV_ID_X550T1: UInt32 = 0x15D1
let IXGBE_DEV_ID_X550EM_A_KR: UInt32 = 0x15C2
let IXGBE_DEV_ID_X550EM_A_KR_L: UInt32 = 0x15C3
let IXGBE_DEV_ID_X550EM_A_SFP_N: UInt32 = 0x15C4
let IXGBE_DEV_ID_X550EM_A_SGMII: UInt32 = 0x15C6
let IXGBE_DEV_ID_X550EM_A_SGMII_L: UInt32 = 0x15C7
let IXGBE_DEV_ID_X550EM_A_10G_T: UInt32 = 0x15C8
let IXGBE_DEV_ID_X550EM_A_QSFP: UInt32 = 0x15CA
let IXGBE_DEV_ID_X550EM_A_QSFP_N: UInt32 = 0x15CC
let IXGBE_DEV_ID_X550EM_A_SFP: UInt32 = 0x15CE
let IXGBE_DEV_ID_X550EM_A_1G_T: UInt32 = 0x15E4
let IXGBE_DEV_ID_X550EM_A_1G_T_L: UInt32 = 0x15E5
let IXGBE_DEV_ID_X550EM_X_KX4: UInt32 = 0x15AA
let IXGBE_DEV_ID_X550EM_X_KR: UInt32 = 0x15AB
let IXGBE_DEV_ID_X550EM_X_SFP: UInt32 = 0x15AC
let IXGBE_DEV_ID_X550EM_X_10G_T: UInt32 = 0x15AD
let IXGBE_DEV_ID_X550EM_X_1G_T: UInt32 = 0x15AE
let IXGBE_DEV_ID_X550EM_X_XFI: UInt32 = 0x15B0
let IXGBE_DEV_ID_X550_VF_HV: UInt32 = 0x1564
let IXGBE_DEV_ID_X550_VF: UInt32 = 0x1565
let IXGBE_DEV_ID_X550EM_A_VF: UInt32 = 0x15C5
let IXGBE_DEV_ID_X550EM_A_VF_HV: UInt32 = 0x15B4
let IXGBE_DEV_ID_X550EM_X_VF: UInt32 = 0x15A8
let IXGBE_DEV_ID_X550EM_X_VF_HV: UInt32 = 0x15A9
let IXGBE_CTRL: UInt32 = 0x00000
let IXGBE_STATUS: UInt32 = 0x00008
let IXGBE_CTRL_EXT: UInt32 = 0x00018
let IXGBE_ESDP: UInt32 = 0x00020
let IXGBE_EODSDP: UInt32 = 0x00028
let IXGBE_I2CCTL_82599: UInt32 = 0x00028
let IXGBE_I2CCTL: UInt32 = IXGBE_I2CCTL_82599
let IXGBE_I2CCTL_X540: UInt32 = IXGBE_I2CCTL_82599
let IXGBE_I2CCTL_X550: UInt32 = 0x15F5C
let IXGBE_I2CCTL_X550EM_x: UInt32 = IXGBE_I2CCTL_X550
let IXGBE_I2CCTL_X550EM_a: UInt32 = IXGBE_I2CCTL_X550
let IXGBE_PHY_GPIO: UInt32 = 0x00028
let IXGBE_MAC_GPIO: UInt32 = 0x00030
let IXGBE_PHYINT_STATUS0: UInt32 = 0x00100
let IXGBE_PHYINT_STATUS1: UInt32 = 0x00104
let IXGBE_PHYINT_STATUS2: UInt32 = 0x00108
let IXGBE_LEDCTL: UInt32 = 0x00200
let IXGBE_FRTIMER: UInt32 = 0x00048
let IXGBE_TCPTIMER: UInt32 = 0x0004C
let IXGBE_CORESPARE: UInt32 = 0x00600
let IXGBE_EXVET: UInt32 = 0x05078
let IXGBE_EEC: UInt32 = 0x10010
let IXGBE_EEC_X540: UInt32 = IXGBE_EEC
let IXGBE_EEC_X550: UInt32 = IXGBE_EEC
let IXGBE_EEC_X550EM_x: UInt32 = IXGBE_EEC
let IXGBE_EEC_X550EM_a: UInt32 = 0x15FF8
let IXGBE_EERD: UInt32 = 0x10014
let IXGBE_EEWR: UInt32 = 0x10018
let IXGBE_FLA: UInt32 = 0x1001C
let IXGBE_FLA_X540: UInt32 = IXGBE_FLA
let IXGBE_FLA_X550: UInt32 = IXGBE_FLA
let IXGBE_FLA_X550EM_x: UInt32 = IXGBE_FLA
let IXGBE_FLA_X550EM_a: UInt32 = 0x15F68
let IXGBE_EEMNGCTL: UInt32 = 0x10110
let IXGBE_EEMNGDATA: UInt32 = 0x10114
let IXGBE_FLMNGCTL: UInt32 = 0x10118
let IXGBE_FLMNGDATA: UInt32 = 0x1011C
let IXGBE_FLMNGCNT: UInt32 = 0x10120
let IXGBE_FLOP: UInt32 = 0x1013C
let IXGBE_GRC: UInt32 = 0x10200
let IXGBE_GRC_X540: UInt32 = IXGBE_GRC
let IXGBE_GRC_X550: UInt32 = IXGBE_GRC
let IXGBE_GRC_X550EM_x: UInt32 = IXGBE_GRC
let IXGBE_GRC_X550EM_a: UInt32 = 0x15F64
let IXGBE_SRAMREL: UInt32 = 0x10210
let IXGBE_SRAMREL_X540: UInt32 = IXGBE_SRAMREL
let IXGBE_SRAMREL_X550: UInt32 = IXGBE_SRAMREL
let IXGBE_SRAMREL_X550EM_x: UInt32 = IXGBE_SRAMREL
let IXGBE_SRAMREL_X550EM_a: UInt32 = 0x15F6C
let IXGBE_PHYDBG: UInt32 = 0x10218
let IXGBE_GRC_MNG: UInt32 = 0x00000001 /* Manageability Enable */
let IXGBE_GRC_APME: UInt32 = 0x00000002 /* APM enabled in EEPROM */
let IXGBE_VPDDIAG0: UInt32 = 0x10204
let IXGBE_VPDDIAG1: UInt32 = 0x10208
let IXGBE_I2C_CLK_IN: UInt32 = 0x00000001
let IXGBE_I2C_CLK_IN_X540: UInt32 = IXGBE_I2C_CLK_IN
let IXGBE_I2C_CLK_IN_X550: UInt32 = 0x00004000
let IXGBE_I2C_CLK_IN_X550EM_x: UInt32 = IXGBE_I2C_CLK_IN_X550
let IXGBE_I2C_CLK_IN_X550EM_a: UInt32 = IXGBE_I2C_CLK_IN_X550
let IXGBE_I2C_CLK_OUT: UInt32 = 0x00000002
let IXGBE_I2C_CLK_OUT_X540: UInt32 = IXGBE_I2C_CLK_OUT
let IXGBE_I2C_CLK_OUT_X550: UInt32 = 0x00000200
let IXGBE_I2C_CLK_OUT_X550EM_x: UInt32 = IXGBE_I2C_CLK_OUT_X550
let IXGBE_I2C_CLK_OUT_X550EM_a: UInt32 = IXGBE_I2C_CLK_OUT_X550
let IXGBE_I2C_DATA_IN: UInt32 = 0x00000004
let IXGBE_I2C_DATA_IN_X540: UInt32 = IXGBE_I2C_DATA_IN
let IXGBE_I2C_DATA_IN_X550: UInt32 = 0x00001000
let IXGBE_I2C_DATA_IN_X550EM_x: UInt32 = IXGBE_I2C_DATA_IN_X550
let IXGBE_I2C_DATA_IN_X550EM_a: UInt32 = IXGBE_I2C_DATA_IN_X550
let IXGBE_I2C_DATA_OUT: UInt32 = 0x00000008
let IXGBE_I2C_DATA_OUT_X540: UInt32 = IXGBE_I2C_DATA_OUT
let IXGBE_I2C_DATA_OUT_X550: UInt32 = 0x00000400
let IXGBE_I2C_DATA_OUT_X550EM_x: UInt32 = IXGBE_I2C_DATA_OUT_X550
let IXGBE_I2C_DATA_OUT_X550EM_a: UInt32 = IXGBE_I2C_DATA_OUT_X550
let IXGBE_I2C_DATA_OE_N_EN: UInt32 = 0
let IXGBE_I2C_DATA_OE_N_EN_X540: UInt32 = IXGBE_I2C_DATA_OE_N_EN
let IXGBE_I2C_DATA_OE_N_EN_X550: UInt32 = 0x00000800
let IXGBE_I2C_DATA_OE_N_EN_X550EM_x: UInt32 = IXGBE_I2C_DATA_OE_N_EN_X550
let IXGBE_I2C_DATA_OE_N_EN_X550EM_a: UInt32 = IXGBE_I2C_DATA_OE_N_EN_X550
let IXGBE_I2C_BB_EN: UInt32 = 0
let IXGBE_I2C_BB_EN_X540: UInt32 = IXGBE_I2C_BB_EN
let IXGBE_I2C_BB_EN_X550: UInt32 = 0x00000100
let IXGBE_I2C_BB_EN_X550EM_x: UInt32 = IXGBE_I2C_BB_EN_X550
let IXGBE_I2C_BB_EN_X550EM_a: UInt32 = IXGBE_I2C_BB_EN_X550
let IXGBE_I2C_CLK_OE_N_EN: UInt32 = 0
let IXGBE_I2C_CLK_OE_N_EN_X540: UInt32 = IXGBE_I2C_CLK_OE_N_EN
let IXGBE_I2C_CLK_OE_N_EN_X550: UInt32 = 0x00002000
let IXGBE_I2C_CLK_OE_N_EN_X550EM_x: UInt32 = IXGBE_I2C_CLK_OE_N_EN_X550
let IXGBE_I2C_CLK_OE_N_EN_X550EM_a: UInt32 = IXGBE_I2C_CLK_OE_N_EN_X550
let IXGBE_I2C_CLOCK_STRETCHING_TIMEOUT: UInt32 = 500
let IXGBE_I2C_THERMAL_SENSOR_ADDR: UInt32 = 0xF8
let IXGBE_EMC_INTERNAL_DATA: UInt32 = 0x00
let IXGBE_EMC_INTERNAL_THERM_LIMIT: UInt32 = 0x20
let IXGBE_EMC_DIODE1_DATA: UInt32 = 0x01
let IXGBE_EMC_DIODE1_THERM_LIMIT: UInt32 = 0x19
let IXGBE_EMC_DIODE2_DATA: UInt32 = 0x23
let IXGBE_EMC_DIODE2_THERM_LIMIT: UInt32 = 0x1A
let IXGBE_MAX_SENSORS: UInt32 = 3
let IXGBE_EICR: UInt32 = 0x00800
let IXGBE_EICS: UInt32 = 0x00808
let IXGBE_EIMS: UInt32 = 0x00880
let IXGBE_EIMC: UInt32 = 0x00888
let IXGBE_EIAC: UInt32 = 0x00810
let IXGBE_EIAM: UInt32 = 0x00890
let IXGBE_MAX_INT_RATE: UInt32 = 488281
let IXGBE_MIN_INT_RATE: UInt32 = 956
let IXGBE_MAX_EITR: UInt32 = 0x00000FF8
let IXGBE_MIN_EITR: UInt32 = 8
let IXGBE_EITR_ITR_INT_MASK: UInt32 = 0x00000FF8
let IXGBE_EITR_LLI_MOD: UInt32 = 0x00008000
let IXGBE_EITR_CNT_WDIS: UInt32 = 0x80000000
let IXGBE_IVAR_MISC: UInt32 = 0x00A00 /* misc MSI-X interrupt causes */
let IXGBE_EITRSEL: UInt32 = 0x00894
let IXGBE_MSIXT: UInt32 = 0x00000 /* MSI-X Table. 0x0000 - 0x01C */
let IXGBE_MSIXPBA: UInt32 = 0x02000 /* MSI-X Pending bit array */
let IXGBE_GPIE: UInt32 = 0x00898
let IXGBE_FCADBUL: UInt32 = 0x03210
let IXGBE_FCADBUH: UInt32 = 0x03214
let IXGBE_FCAMACL: UInt32 = 0x04328
let IXGBE_FCAMACH: UInt32 = 0x0432C
let IXGBE_PFCTOP: UInt32 = 0x03008
let IXGBE_FCRTV: UInt32 = 0x032A0
let IXGBE_FCCFG: UInt32 = 0x03D00
let IXGBE_TFCS: UInt32 = 0x0CE00
let IXGBE_RSCDBU: UInt32 = 0x03028
let IXGBE_RDDCC: UInt32 = 0x02F20
let IXGBE_RXMEMWRAP: UInt32 = 0x03190
let IXGBE_STARCTRL: UInt32 = 0x03024
let IXGBE_RDRXCTL: UInt32 = 0x02F00
let IXGBE_RXCTRL: UInt32 = 0x03000
let IXGBE_DROPEN: UInt32 = 0x03D04
let IXGBE_RXPBSIZE_SHIFT: UInt32 = 10
let IXGBE_RXPBSIZE_MASK: UInt32 = 0x000FFC00
let IXGBE_RXCSUM: UInt32 = 0x05000
let IXGBE_RFCTL: UInt32 = 0x05008
let IXGBE_DRECCCTL: UInt32 = 0x02F08
let IXGBE_DRECCCTL_DISABLE: UInt32 = 0
let IXGBE_DRECCCTL2: UInt32 = 0x02F8C
let IXGBE_FCTRL: UInt32 = 0x05080
let IXGBE_VLNCTRL: UInt32 = 0x05088
let IXGBE_MCSTCTRL: UInt32 = 0x05090
let IXGBE_MRQC: UInt32 = 0x05818
let IXGBE_SYNQF: UInt32 = 0x0EC30 /* SYN Packet Queue Filter */
let IXGBE_RQTC: UInt32 = 0x0EC70
let IXGBE_MTQC: UInt32 = 0x08120
let IXGBE_PFFLPL: UInt32 = 0x050B0
let IXGBE_PFFLPH: UInt32 = 0x050B4
let IXGBE_VT_CTL: UInt32 = 0x051B0
let IXGBE_QDE: UInt32 = 0x2F04
let IXGBE_LVMMC_RX: UInt32 = 0x2FA8
let IXGBE_LVMMC_TX: UInt32 = 0x8108
let IXGBE_LMVM_RX: UInt32 = 0x2FA4
let IXGBE_LMVM_TX: UInt32 = 0x8124
let IXGBE_RXFECCERR0: UInt32 = 0x051B8
let IXGBE_LLITHRESH: UInt32 = 0x0EC90
let IXGBE_IMIRVP: UInt32 = 0x05AC0
let IXGBE_VMD_CTL: UInt32 = 0x0581C
let IXGBE_FDIRCTRL: UInt32 = 0x0EE00
let IXGBE_FDIRHKEY: UInt32 = 0x0EE68
let IXGBE_FDIRSKEY: UInt32 = 0x0EE6C
let IXGBE_FDIRDIP4M: UInt32 = 0x0EE3C
let IXGBE_FDIRSIP4M: UInt32 = 0x0EE40
let IXGBE_FDIRTCPM: UInt32 = 0x0EE44
let IXGBE_FDIRUDPM: UInt32 = 0x0EE48
let IXGBE_FDIRSCTPM: UInt32 = 0x0EE78
let IXGBE_FDIRIP6M: UInt32 = 0x0EE74
let IXGBE_FDIRM: UInt32 = 0x0EE70
let IXGBE_FDIRFREE: UInt32 = 0x0EE38
let IXGBE_FDIRLEN: UInt32 = 0x0EE4C
let IXGBE_FDIRUSTAT: UInt32 = 0x0EE50
let IXGBE_FDIRFSTAT: UInt32 = 0x0EE54
let IXGBE_FDIRMATCH: UInt32 = 0x0EE58
let IXGBE_FDIRMISS: UInt32 = 0x0EE5C
let IXGBE_FDIRIPSA: UInt32 = 0x0EE18
let IXGBE_FDIRIPDA: UInt32 = 0x0EE1C
let IXGBE_FDIRPORT: UInt32 = 0x0EE20
let IXGBE_FDIRVLAN: UInt32 = 0x0EE24
let IXGBE_FDIRHASH: UInt32 = 0x0EE28
let IXGBE_FDIRCMD: UInt32 = 0x0EE2C
let IXGBE_DTXCTL: UInt32 = 0x07E00
let IXGBE_DMATXCTL: UInt32 = 0x04A80
let IXGBE_PFDTXGSWC: UInt32 = 0x08220
let IXGBE_DTXMXSZRQ: UInt32 = 0x08100
let IXGBE_DTXTCPFLGL: UInt32 = 0x04A88
let IXGBE_DTXTCPFLGH: UInt32 = 0x04A8C
let IXGBE_LBDRPEN: UInt32 = 0x0CA00
let IXGBE_DMATXCTL_TE: UInt32 = 0x1 /* Transmit Enable */
let IXGBE_DMATXCTL_NS: UInt32 = 0x2 /* No Snoop LSO hdr buffer */
let IXGBE_DMATXCTL_GDV: UInt32 = 0x8 /* Global Double VLAN */
let IXGBE_DMATXCTL_MDP_EN: UInt32 = 0x20 /* Bit 5 */
let IXGBE_DMATXCTL_MBINTEN: UInt32 = 0x40 /* Bit 6 */
let IXGBE_DMATXCTL_VT_SHIFT: UInt32 = 16  /* VLAN EtherType */
let IXGBE_PFDTXGSWC_VT_LBEN: UInt32 = 0x1 /* Local L2 VT switch enable */
let IXGBE_SPOOF_MACAS_MASK: UInt32 = 0xFF
let IXGBE_SPOOF_VLANAS_MASK: UInt32 = 0xFF00
let IXGBE_SPOOF_VLANAS_SHIFT: UInt32 = 8
let IXGBE_SPOOF_ETHERTYPEAS: UInt32 = 0xFF000000
let IXGBE_SPOOF_ETHERTYPEAS_SHIFT: UInt32 = 16
let IXGBE_PFVFSPOOF_REG_COUNT: UInt32 = 8
let IXGBE_TIPG: UInt32 = 0x0CB00
let IXGBE_MNGTXMAP: UInt32 = 0x0CD10
let IXGBE_TIPG_FIBER_DEFAULT: UInt32 = 3
let IXGBE_TXPBSIZE_SHIFT: UInt32 = 10
let IXGBE_WUC: UInt32 = 0x05800
let IXGBE_WUFC: UInt32 = 0x05808
let IXGBE_WUS: UInt32 = 0x05810
let IXGBE_IPAV: UInt32 = 0x05838
let IXGBE_IP4AT: UInt32 = 0x05840 /* IPv4 table 0x5840-0x5858 */
let IXGBE_IP6AT: UInt32 = 0x05880 /* IPv6 table 0x5880-0x588F */
let IXGBE_WUPL: UInt32 = 0x05900
let IXGBE_WUPM: UInt32 = 0x05A00 /* wake up pkt memory 0x5A00-0x5A7C */
let IXGBE_PROXYS: UInt32 = 0x05F60 /* Proxying Status Register */
let IXGBE_PROXYFC: UInt32 = 0x05F64 /* Proxying Filter Control Register */
let IXGBE_VXLANCTRL: UInt32 = 0x0000507C /* Rx filter VXLAN UDPPORT Register */
let IXGBE_VXLANCTRL_VXLAN_UDPPORT_MASK: UInt32 = 0x0000ffff /* VXLAN port */
let IXGBE_VXLANCTRL_GENEVE_UDPPORT_MASK: UInt32 = 0xffff0000 /* GENEVE port */
let IXGBE_VXLANCTRL_ALL_UDPPORT_MASK: UInt32 = 0xffffffff /* GENEVE/VXLAN */
let IXGBE_VXLANCTRL_GENEVE_UDPPORT_SHIFT: UInt32 = 16
let IXGBE_FLEXIBLE_FILTER_COUNT_MAX: UInt32 = 4
let IXGBE_FLEXIBLE_FILTER_COUNT_MAX_6: UInt32 = 6
let IXGBE_FLEXIBLE_FILTER_COUNT_MAX_8: UInt32 = 8
let IXGBE_EXT_FLEXIBLE_FILTER_COUNT_MAX: UInt32 = 2
let IXGBE_FLEXIBLE_FILTER_SIZE_MAX: UInt32 = 128
let IXGBE_FHFT_LENGTH_OFFSET: UInt32 = 0xFC  /* Length byte in FHFT */
let IXGBE_FHFT_LENGTH_MASK: UInt32 = 0x0FF /* Length in lower byte */
let IXGBE_WUC_PME_EN: UInt32 = 0x00000002 /* PME Enable */
let IXGBE_WUC_PME_STATUS: UInt32 = 0x00000004 /* PME Status */
let IXGBE_WUC_WKEN: UInt32 = 0x00000010 /* Enable PE_WAKE_N pin assertion  */
let IXGBE_WUFC_LNKC: UInt32 = 0x00000001 /* Link Status Change Wakeup Enable */
let IXGBE_WUFC_MAG: UInt32 = 0x00000002 /* Magic Packet Wakeup Enable */
let IXGBE_WUFC_EX: UInt32 = 0x00000004 /* Directed Exact Wakeup Enable */
let IXGBE_WUFC_MC: UInt32 = 0x00000008 /* Directed Multicast Wakeup Enable */
let IXGBE_WUFC_BC: UInt32 = 0x00000010 /* Broadcast Wakeup Enable */
let IXGBE_WUFC_ARP: UInt32 = 0x00000020 /* ARP Request Packet Wakeup Enable */
let IXGBE_WUFC_IPV4: UInt32 = 0x00000040 /* Directed IPv4 Packet Wakeup Enable */
let IXGBE_WUFC_IPV6: UInt32 = 0x00000080 /* Directed IPv6 Packet Wakeup Enable */
let IXGBE_WUFC_MNG: UInt32 = 0x00000100 /* Directed Mgmt Packet Wakeup Enable */
let IXGBE_WUFC_IGNORE_TCO: UInt32 = 0x00008000 /* Ignore WakeOn TCO packets */
let IXGBE_WUFC_FLX0: UInt32 = 0x00010000 /* Flexible Filter 0 Enable */
let IXGBE_WUFC_FLX1: UInt32 = 0x00020000 /* Flexible Filter 1 Enable */
let IXGBE_WUFC_FLX2: UInt32 = 0x00040000 /* Flexible Filter 2 Enable */
let IXGBE_WUFC_FLX3: UInt32 = 0x00080000 /* Flexible Filter 3 Enable */
let IXGBE_WUFC_FLX4: UInt32 = 0x00100000 /* Flexible Filter 4 Enable */
let IXGBE_WUFC_FLX5: UInt32 = 0x00200000 /* Flexible Filter 5 Enable */
let IXGBE_WUFC_FLX_FILTERS: UInt32 = 0x000F0000 /* Mask for 4 flex filters */
let IXGBE_WUFC_FLX_FILTERS_6: UInt32 = 0x003F0000 /* Mask for 6 flex filters */
let IXGBE_WUFC_FLX_FILTERS_8: UInt32 = 0x00FF0000 /* Mask for 8 flex filters */
let IXGBE_WUFC_FW_RST_WK: UInt32 = 0x80000000 /* Ena wake on FW reset assertion */
let IXGBE_WUFC_EXT_FLX_FILTERS: UInt32 = 0x00300000
let IXGBE_WUFC_ALL_FILTERS: UInt32 = 0x000F00FF /* Mask all 4 flex filters */
let IXGBE_WUFC_ALL_FILTERS_6: UInt32 = 0x003F00FF /* Mask all 6 flex filters */
let IXGBE_WUFC_ALL_FILTERS_8: UInt32 = 0x00FF00FF /* Mask all 8 flex filters */
let IXGBE_WUFC_FLX_OFFSET: UInt32 = 16 /* Offset to the Flexible Filters bits */
let IXGBE_WUS_LNKC: UInt32 = IXGBE_WUFC_LNKC
let IXGBE_WUS_MAG: UInt32 = IXGBE_WUFC_MAG
let IXGBE_WUS_EX: UInt32 = IXGBE_WUFC_EX
let IXGBE_WUS_MC: UInt32 = IXGBE_WUFC_MC
let IXGBE_WUS_BC: UInt32 = IXGBE_WUFC_BC
let IXGBE_WUS_ARP: UInt32 = IXGBE_WUFC_ARP
let IXGBE_WUS_IPV4: UInt32 = IXGBE_WUFC_IPV4
let IXGBE_WUS_IPV6: UInt32 = IXGBE_WUFC_IPV6
let IXGBE_WUS_MNG: UInt32 = IXGBE_WUFC_MNG
let IXGBE_WUS_FLX0: UInt32 = IXGBE_WUFC_FLX0
let IXGBE_WUS_FLX1: UInt32 = IXGBE_WUFC_FLX1
let IXGBE_WUS_FLX2: UInt32 = IXGBE_WUFC_FLX2
let IXGBE_WUS_FLX3: UInt32 = IXGBE_WUFC_FLX3
let IXGBE_WUS_FLX4: UInt32 = IXGBE_WUFC_FLX4
let IXGBE_WUS_FLX5: UInt32 = IXGBE_WUFC_FLX5
let IXGBE_WUS_FLX_FILTERS: UInt32 = IXGBE_WUFC_FLX_FILTERS
let IXGBE_WUS_FW_RST_WK: UInt32 = IXGBE_WUFC_FW_RST_WK
let IXGBE_PROXYS_EX: UInt32 = 0x00000004 /* Exact packet received */
let IXGBE_PROXYS_ARP_DIR: UInt32 = 0x00000020 /* ARP w/filter match received */
let IXGBE_PROXYS_NS: UInt32 = 0x00000200 /* IPV6 NS received */
let IXGBE_PROXYS_NS_DIR: UInt32 = 0x00000400 /* IPV6 NS w/DA match received */
let IXGBE_PROXYS_ARP: UInt32 = 0x00000800 /* ARP request packet received */
let IXGBE_PROXYS_MLD: UInt32 = 0x00001000 /* IPv6 MLD packet received */
let IXGBE_PROXYFC_ENABLE: UInt32 = 0x00000001 /* Port Proxying Enable */
let IXGBE_PROXYFC_EX: UInt32 = 0x00000004 /* Directed Exact Proxy Enable */
let IXGBE_PROXYFC_ARP_DIR: UInt32 = 0x00000020 /* Directed ARP Proxy Enable */
let IXGBE_PROXYFC_NS: UInt32 = 0x00000200 /* IPv6 Neighbor Solicitation */
let IXGBE_PROXYFC_ARP: UInt32 = 0x00000800 /* ARP Request Proxy Enable */
let IXGBE_PROXYFC_MLD: UInt32 = 0x00000800 /* IPv6 MLD Proxy Enable */
let IXGBE_PROXYFC_NO_TCO: UInt32 = 0x00008000 /* Ignore TCO packets */
let IXGBE_WUPL_LENGTH_MASK: UInt32 = 0xFFFF
let IXGBE_DCB_MAX_TRAFFIC_CLASS: UInt32 = 8
let IXGBE_RMCS: UInt32 = 0x03D00
let IXGBE_DPMCS: UInt32 = 0x07F40
let IXGBE_PDPMCS: UInt32 = 0x0CD00
let IXGBE_RUPPBMR: UInt32 = 0x050A0
let IXGBE_DMACRXT_10G: UInt32 = 0x55
let IXGBE_DMACRXT_1G: UInt32 = 0x09
let IXGBE_DMACRXT_100M: UInt32 = 0x01
let IXGBE_DMCMNGTH: UInt32 = 0x15F20 /* Management Threshold */
let IXGBE_DMACR: UInt32 = 0x02400 /* Control register */
let IXGBE_DMCTLX: UInt32 = 0x02404 /* Time to Lx request */
let IXGBE_DMCMNGTH_DMCMNGTH_MASK: UInt32 = 0x000FFFF0 /* Mng Threshold mask */
let IXGBE_DMCMNGTH_DMCMNGTH_SHIFT: UInt32 = 4 /* Management Threshold shift */
let IXGBE_DMACR_DMACWT_MASK: UInt32 = 0x0000FFFF /* Watchdog Timer mask */
let IXGBE_DMACR_HIGH_PRI_TC_MASK: UInt32 = 0x00FF0000
let IXGBE_DMACR_HIGH_PRI_TC_SHIFT: UInt32 = 16
let IXGBE_DMACR_EN_MNG_IND: UInt32 = 0x10000000 /* Enable Mng Indications */
let IXGBE_DMACR_LX_COAL_IND: UInt32 = 0x40000000 /* Lx Coalescing indicate */
let IXGBE_DMACR_DMAC_EN: UInt32 = 0x80000000 /* DMA Coalescing Enable */
let IXGBE_DMCTH_DMACRXT_MASK: UInt32 = 0x000001FF /* Receive Threshold mask */
let IXGBE_DMCTLX_TTLX_MASK: UInt32 = 0x00000FFF /* Time to Lx request mask */
let IXGBE_EEER: UInt32 = 0x043A0 /* EEE register */
let IXGBE_EEE_STAT: UInt32 = 0x04398 /* EEE Status */
let IXGBE_EEE_SU: UInt32 = 0x04380 /* EEE Set up */
let IXGBE_EEE_SU_TEEE_DLY_SHIFT: UInt32 = 26
let IXGBE_TLPIC: UInt32 = 0x041F4 /* EEE Tx LPI count */
let IXGBE_RLPIC: UInt32 = 0x041F8 /* EEE Rx LPI count */
let IXGBE_EEER_TX_LPI_EN: UInt32 = 0x00010000 /* Enable EEE LPI TX path */
let IXGBE_EEER_RX_LPI_EN: UInt32 = 0x00020000 /* Enable EEE LPI RX path */
let IXGBE_EEE_STAT_NEG: UInt32 = 0x20000000 /* EEE support neg on link */
let IXGBE_EEE_RX_LPI_STATUS: UInt32 = 0x40000000 /* RX Link in LPI status */
let IXGBE_EEE_TX_LPI_STATUS: UInt32 = 0x80000000 /* TX Link in LPI status */
let IXGBE_SECTXCTRL: UInt32 = 0x08800
let IXGBE_SECTXSTAT: UInt32 = 0x08804
let IXGBE_SECTXBUFFAF: UInt32 = 0x08808
let IXGBE_SECTXMINIFG: UInt32 = 0x08810
let IXGBE_SECRXCTRL: UInt32 = 0x08D00
let IXGBE_SECRXSTAT: UInt32 = 0x08D04
let IXGBE_SECTXCTRL_SECTX_DIS: UInt32 = 0x00000001
let IXGBE_SECTXCTRL_TX_DIS: UInt32 = 0x00000002
let IXGBE_SECTXCTRL_STORE_FORWARD: UInt32 = 0x00000004
let IXGBE_SECTXSTAT_SECTX_RDY: UInt32 = 0x00000001
let IXGBE_SECTXSTAT_ECC_TXERR: UInt32 = 0x00000002
let IXGBE_SECRXCTRL_SECRX_DIS: UInt32 = 0x00000001
let IXGBE_SECRXCTRL_RX_DIS: UInt32 = 0x00000002
let IXGBE_SECRXSTAT_SECRX_RDY: UInt32 = 0x00000001
let IXGBE_SECRXSTAT_ECC_RXERR: UInt32 = 0x00000002
let IXGBE_LSECTXCAP: UInt32 = 0x08A00
let IXGBE_LSECRXCAP: UInt32 = 0x08F00
let IXGBE_LSECTXCTRL: UInt32 = 0x08A04
let IXGBE_LSECTXSCL: UInt32 = 0x08A08 /* SCI Low */
let IXGBE_LSECTXSCH: UInt32 = 0x08A0C /* SCI High */
let IXGBE_LSECTXSA: UInt32 = 0x08A10
let IXGBE_LSECTXPN0: UInt32 = 0x08A14
let IXGBE_LSECTXPN1: UInt32 = 0x08A18
let IXGBE_LSECRXCTRL: UInt32 = 0x08F04
let IXGBE_LSECRXSCL: UInt32 = 0x08F08
let IXGBE_LSECRXSCH: UInt32 = 0x08F0C
let IXGBE_LSECTXUT: UInt32 = 0x08A3C /* OutPktsUntagged */
let IXGBE_LSECTXPKTE: UInt32 = 0x08A40 /* OutPktsEncrypted */
let IXGBE_LSECTXPKTP: UInt32 = 0x08A44 /* OutPktsProtected */
let IXGBE_LSECTXOCTE: UInt32 = 0x08A48 /* OutOctetsEncrypted */
let IXGBE_LSECTXOCTP: UInt32 = 0x08A4C /* OutOctetsProtected */
let IXGBE_LSECRXUT: UInt32 = 0x08F40 /* InPktsUntagged/InPktsNoTag */
let IXGBE_LSECRXOCTD: UInt32 = 0x08F44 /* InOctetsDecrypted */
let IXGBE_LSECRXOCTV: UInt32 = 0x08F48 /* InOctetsValidated */
let IXGBE_LSECRXBAD: UInt32 = 0x08F4C /* InPktsBadTag */
let IXGBE_LSECRXNOSCI: UInt32 = 0x08F50 /* InPktsNoSci */
let IXGBE_LSECRXUNSCI: UInt32 = 0x08F54 /* InPktsUnknownSci */
let IXGBE_LSECRXUNCH: UInt32 = 0x08F58 /* InPktsUnchecked */
let IXGBE_LSECRXDELAY: UInt32 = 0x08F5C /* InPktsDelayed */
let IXGBE_LSECRXLATE: UInt32 = 0x08F60 /* InPktsLate */
let IXGBE_LSECRXUNSA: UInt32 = 0x08F7C /* InPktsUnusedSa */
let IXGBE_LSECRXNUSA: UInt32 = 0x08F80 /* InPktsNotUsingSa */
let IXGBE_LSECTXCAP_SUM_MASK: UInt32 = 0x00FF0000
let IXGBE_LSECTXCAP_SUM_SHIFT: UInt32 = 16
let IXGBE_LSECRXCAP_SUM_MASK: UInt32 = 0x00FF0000
let IXGBE_LSECRXCAP_SUM_SHIFT: UInt32 = 16
let IXGBE_LSECTXCTRL_EN_MASK: UInt32 = 0x00000003
let IXGBE_LSECTXCTRL_DISABLE: UInt32 = 0x0
let IXGBE_LSECTXCTRL_AUTH: UInt32 = 0x1
let IXGBE_LSECTXCTRL_AUTH_ENCRYPT: UInt32 = 0x2
let IXGBE_LSECTXCTRL_AISCI: UInt32 = 0x00000020
let IXGBE_LSECTXCTRL_PNTHRSH_MASK: UInt32 = 0xFFFFFF00
let IXGBE_LSECTXCTRL_RSV_MASK: UInt32 = 0x000000D8
let IXGBE_LSECRXCTRL_EN_MASK: UInt32 = 0x0000000C
let IXGBE_LSECRXCTRL_EN_SHIFT: UInt32 = 2
let IXGBE_LSECRXCTRL_DISABLE: UInt32 = 0x0
let IXGBE_LSECRXCTRL_CHECK: UInt32 = 0x1
let IXGBE_LSECRXCTRL_STRICT: UInt32 = 0x2
let IXGBE_LSECRXCTRL_DROP: UInt32 = 0x3
let IXGBE_LSECRXCTRL_PLSH: UInt32 = 0x00000040
let IXGBE_LSECRXCTRL_RP: UInt32 = 0x00000080
let IXGBE_LSECRXCTRL_RSV_MASK: UInt32 = 0xFFFFFF33
let IXGBE_IPSTXIDX: UInt32 = 0x08900
let IXGBE_IPSTXSALT: UInt32 = 0x08904
let IXGBE_IPSRXIDX: UInt32 = 0x08E00
let IXGBE_IPSRXSPI: UInt32 = 0x08E14
let IXGBE_IPSRXIPIDX: UInt32 = 0x08E18
let IXGBE_IPSRXSALT: UInt32 = 0x08E2C
let IXGBE_IPSRXMOD: UInt32 = 0x08E30
let IXGBE_SECTXCTRL_STORE_FORWARD_ENABLE: UInt32 = 0x4
let IXGBE_RTRPCS: UInt32 = 0x02430
let IXGBE_RTTDCS: UInt32 = 0x04900
let IXGBE_RTTDCS_ARBDIS: UInt32 = 0x00000040 /* DCB arbiter disable */
let IXGBE_RTTPCS: UInt32 = 0x0CD00
let IXGBE_RTRUP2TC: UInt32 = 0x03020
let IXGBE_RTTUP2TC: UInt32 = 0x0C800
let IXGBE_RTTDQSEL: UInt32 = 0x04904
let IXGBE_RTTDT1C: UInt32 = 0x04908
let IXGBE_RTTDT1S: UInt32 = 0x0490C
let IXGBE_RTTDTECC: UInt32 = 0x04990
let IXGBE_RTTDTECC_NO_BCN: UInt32 = 0x00000100
let IXGBE_RTTBCNRC: UInt32 = 0x04984
let IXGBE_RTTBCNRC_RS_ENA: UInt32 = 0x80000000
let IXGBE_RTTBCNRC_RF_DEC_MASK: UInt32 = 0x00003FFF
let IXGBE_RTTBCNRC_RF_INT_SHIFT: UInt32 = 14
let IXGBE_RTTBCNRM: UInt32 = 0x04980
let IXGBE_RTTBCNRS: UInt32 = 0x04988
let IXGBE_RTTBCNCR: UInt32 = 0x08B00
let IXGBE_RTTBCNACH: UInt32 = 0x08B04
let IXGBE_RTTBCNACL: UInt32 = 0x08B08
let IXGBE_RTTBCNTG: UInt32 = 0x04A90
let IXGBE_RTTBCNIDX: UInt32 = 0x08B0C
let IXGBE_RTTBCNCP: UInt32 = 0x08B10
let IXGBE_RTFRTIMER: UInt32 = 0x08B14
let IXGBE_RTTBCNRTT: UInt32 = 0x05150
let IXGBE_RTTBCNRD: UInt32 = 0x0498C
let IXGBE_FCPTRL: UInt32 = 0x02410 /* FC User Desc. PTR Low */
let IXGBE_FCPTRH: UInt32 = 0x02414 /* FC USer Desc. PTR High */
let IXGBE_FCBUFF: UInt32 = 0x02418 /* FC Buffer Control */
let IXGBE_FCDMARW: UInt32 = 0x02420 /* FC Receive DMA RW */
let IXGBE_FCBUFF_BUFFCNT: UInt32 = 0x0000ff00 /* Number of User Buffers */
let IXGBE_FCBUFF_OFFSET: UInt32 = 0xffff0000 /* User Buffer Offset */
let IXGBE_FCBUFF_BUFFSIZE_SHIFT: UInt32 = 3
let IXGBE_FCBUFF_BUFFCNT_SHIFT: UInt32 = 8
let IXGBE_FCBUFF_OFFSET_SHIFT: UInt32 = 16
let IXGBE_FCDMARW_FCOESEL: UInt32 = 0x000001ff  /* FC X_ID: 11 bits */
let IXGBE_FCDMARW_LASTSIZE: UInt32 = 0xffff0000  /* Last User Buffer Size */
let IXGBE_FCDMARW_LASTSIZE_SHIFT: UInt32 = 16
let IXGBE_TEOFF: UInt32 = 0x04A94 /* Tx FC EOF */
let IXGBE_TSOFF: UInt32 = 0x04A98 /* Tx FC SOF */
let IXGBE_REOFF: UInt32 = 0x05158 /* Rx FC EOF */
let IXGBE_RSOFF: UInt32 = 0x051F8 /* Rx FC SOF */
let IXGBE_FCD_ID: UInt32 = 0x05114 /* FCoE D_ID */
let IXGBE_FCSMAC: UInt32 = 0x0510C /* FCoE Source MAC */
let IXGBE_FCFLTRW_SMAC_HIGH_SHIFT: UInt32 = 16
let IXGBE_FCFLT: UInt32 = 0x05108 /* FC FLT Context */
let IXGBE_FCFLTRW: UInt32 = 0x05110 /* FC Filter RW Control */
let IXGBE_FCPARAM: UInt32 = 0x051d8 /* FC Offset Parameter */
let IXGBE_FCFLT_SEQID: UInt32 = 0x00ff0000 /* Sequence ID */
let IXGBE_FCFLT_SEQCNT: UInt32 = 0xff000000 /* Sequence Count */
let IXGBE_FCRXCTRL: UInt32 = 0x05100 /* FC Receive Control */
let IXGBE_FCRXCTRL_FCOEVER: UInt32 = 0x00000f00 /* FCoE Version: 4 bits */
let IXGBE_FCRXCTRL_FCOEVER_SHIFT: UInt32 = 8
let IXGBE_FCRECTL: UInt32 = 0x0ED00 /* FC Redirection Control */
let IXGBE_FCRETA0: UInt32 = 0x0ED10 /* FC Redirection Table 0 */
let IXGBE_FCRECTL_ENA: UInt32 = 0x1 /* FCoE Redir Table Enable */
let IXGBE_FCRETASEL_ENA: UInt32 = 0x2 /* FCoE FCRETASEL bit */
let IXGBE_FCRETA_SIZE: UInt32 = 8 /* Max entries in FCRETA */
let IXGBE_FCRETA_ENTRY_MASK: UInt32 = 0x0000007f /* 7 bits for the queue index */
let IXGBE_FCRETA_SIZE_X550: UInt32 = 32 /* Max entries in FCRETA */
let IXGBE_FCRETA_ENTRY_HIGH_MASK: UInt32 = 0x007F0000
let IXGBE_FCRETA_ENTRY_HIGH_SHIFT: UInt32 = 16
let IXGBE_CRCERRS: UInt32 = 0x04000
let IXGBE_ILLERRC: UInt32 = 0x04004
let IXGBE_ERRBC: UInt32 = 0x04008
let IXGBE_MSPDC: UInt32 = 0x04010
let IXGBE_MLFC: UInt32 = 0x04034
let IXGBE_MRFC: UInt32 = 0x04038
let IXGBE_RLEC: UInt32 = 0x04040
let IXGBE_LXONTXC: UInt32 = 0x03F60
let IXGBE_LXONRXC: UInt32 = 0x0CF60
let IXGBE_LXOFFTXC: UInt32 = 0x03F68
let IXGBE_LXOFFRXC: UInt32 = 0x0CF68
let IXGBE_LXONRXCNT: UInt32 = 0x041A4
let IXGBE_LXOFFRXCNT: UInt32 = 0x041A8
let IXGBE_PRC64: UInt32 = 0x0405C
let IXGBE_PRC127: UInt32 = 0x04060
let IXGBE_PRC255: UInt32 = 0x04064
let IXGBE_PRC511: UInt32 = 0x04068
let IXGBE_PRC1023: UInt32 = 0x0406C
let IXGBE_PRC1522: UInt32 = 0x04070
let IXGBE_GPRC: UInt32 = 0x04074
let IXGBE_BPRC: UInt32 = 0x04078
let IXGBE_MPRC: UInt32 = 0x0407C
let IXGBE_GPTC: UInt32 = 0x04080
let IXGBE_GORCL: UInt32 = 0x04088
let IXGBE_GORCH: UInt32 = 0x0408C
let IXGBE_GOTCL: UInt32 = 0x04090
let IXGBE_GOTCH: UInt32 = 0x04094
let IXGBE_RUC: UInt32 = 0x040A4
let IXGBE_RFC: UInt32 = 0x040A8
let IXGBE_ROC: UInt32 = 0x040AC
let IXGBE_RJC: UInt32 = 0x040B0
let IXGBE_MNGPRC: UInt32 = 0x040B4
let IXGBE_MNGPDC: UInt32 = 0x040B8
let IXGBE_MNGPTC: UInt32 = 0x0CF90
let IXGBE_TORL: UInt32 = 0x040C0
let IXGBE_TORH: UInt32 = 0x040C4
let IXGBE_TPR: UInt32 = 0x040D0
let IXGBE_TPT: UInt32 = 0x040D4
let IXGBE_PTC64: UInt32 = 0x040D8
let IXGBE_PTC127: UInt32 = 0x040DC
let IXGBE_PTC255: UInt32 = 0x040E0
let IXGBE_PTC511: UInt32 = 0x040E4
let IXGBE_PTC1023: UInt32 = 0x040E8
let IXGBE_PTC1522: UInt32 = 0x040EC
let IXGBE_MPTC: UInt32 = 0x040F0
let IXGBE_BPTC: UInt32 = 0x040F4
let IXGBE_XEC: UInt32 = 0x04120
let IXGBE_SSVPC: UInt32 = 0x08780
let IXGBE_FCCRC: UInt32 = 0x05118 /* Num of Good Eth CRC w/ Bad FC CRC */
let IXGBE_FCOERPDC: UInt32 = 0x0241C /* FCoE Rx Packets Dropped Count */
let IXGBE_FCLAST: UInt32 = 0x02424 /* FCoE Last Error Count */
let IXGBE_FCOEPRC: UInt32 = 0x02428 /* Number of FCoE Packets Received */
let IXGBE_FCOEDWRC: UInt32 = 0x0242C /* Number of FCoE DWords Received */
let IXGBE_FCOEPTC: UInt32 = 0x08784 /* Number of FCoE Packets Transmitted */
let IXGBE_FCOEDWTC: UInt32 = 0x08788 /* Number of FCoE DWords Transmitted */
let IXGBE_FCCRC_CNT_MASK: UInt32 = 0x0000FFFF /* CRC_CNT: bit 0 - 15 */
let IXGBE_FCLAST_CNT_MASK: UInt32 = 0x0000FFFF /* Last_CNT: bit 0 - 15 */
let IXGBE_O2BGPTC: UInt32 = 0x041C4
let IXGBE_O2BSPC: UInt32 = 0x087B0
let IXGBE_B2OSPC: UInt32 = 0x041C0
let IXGBE_B2OGPRC: UInt32 = 0x02F90
let IXGBE_BUPRC: UInt32 = 0x04180
let IXGBE_BMPRC: UInt32 = 0x04184
let IXGBE_BBPRC: UInt32 = 0x04188
let IXGBE_BUPTC: UInt32 = 0x0418C
let IXGBE_BMPTC: UInt32 = 0x04190
let IXGBE_BBPTC: UInt32 = 0x04194
let IXGBE_BCRCERRS: UInt32 = 0x04198
let IXGBE_BXONRXC: UInt32 = 0x0419C
let IXGBE_BXOFFRXC: UInt32 = 0x041E0
let IXGBE_BXONTXC: UInt32 = 0x041E4
let IXGBE_BXOFFTXC: UInt32 = 0x041E8
let IXGBE_MANC: UInt32 = 0x05820
let IXGBE_MFVAL: UInt32 = 0x05824
let IXGBE_MANC2H: UInt32 = 0x05860
let IXGBE_MIPAF: UInt32 = 0x058B0
let IXGBE_FTFT: UInt32 = 0x09400 /* 0x9400-0x97FC */
let IXGBE_LSWFW: UInt32 = 0x15F14
let IXGBE_BMCIPVAL: UInt32 = 0x05060
let IXGBE_BMCIP_IPADDR_TYPE: UInt32 = 0x00000001
let IXGBE_BMCIP_IPADDR_VALID: UInt32 = 0x00000002
let IXGBE_MANC_MPROXYE: UInt32 = 0x40000000 /* Management Proxy Enable */
let IXGBE_MANC_RCV_TCO_EN: UInt32 = 0x00020000 /* Rcv TCO packet enable */
let IXGBE_MANC_EN_BMC2OS: UInt32 = 0x10000000 /* Ena BMC2OS and OS2BMC traffic */
let IXGBE_MANC_EN_BMC2OS_SHIFT: UInt32 = 28
let IXGBE_FWSM_MODE_MASK: UInt32 = 0xE
let IXGBE_FWSM_TS_ENABLED: UInt32 = 0x1
let IXGBE_FWSM_FW_MODE_PT: UInt32 = 0x4
let IXGBE_HICR: UInt32 = 0x15F00
let IXGBE_FWSTS: UInt32 = 0x15F0C
let IXGBE_HSMC0R: UInt32 = 0x15F04
let IXGBE_HSMC1R: UInt32 = 0x15F08
let IXGBE_SWSR: UInt32 = 0x15F10
let IXGBE_HFDR: UInt32 = 0x15FE8
let IXGBE_FLEX_MNG: UInt32 = 0x15800 /* 0x15800 - 0x15EFC */
let IXGBE_HICR_EN: UInt32 = 0x01  /* Enable bit - RO */
let IXGBE_HICR_C: UInt32 = 0x02
let IXGBE_HICR_SV: UInt32 = 0x04  /* Status Validity */
let IXGBE_HICR_FW_RESET_ENABLE: UInt32 = 0x40
let IXGBE_HICR_FW_RESET: UInt32 = 0x80
let IXGBE_GCR: UInt32 = 0x11000
let IXGBE_GTV: UInt32 = 0x11004
let IXGBE_FUNCTAG: UInt32 = 0x11008
let IXGBE_GLT: UInt32 = 0x1100C
let IXGBE_PCIEPIPEADR: UInt32 = 0x11004
let IXGBE_PCIEPIPEDAT: UInt32 = 0x11008
let IXGBE_GSCL_1: UInt32 = 0x11010
let IXGBE_GSCL_2: UInt32 = 0x11014
let IXGBE_GSCL_1_X540: UInt32 = IXGBE_GSCL_1
let IXGBE_GSCL_2_X540: UInt32 = IXGBE_GSCL_2
let IXGBE_GSCL_3: UInt32 = 0x11018
let IXGBE_GSCL_4: UInt32 = 0x1101C
let IXGBE_GSCN_0: UInt32 = 0x11020
let IXGBE_GSCN_1: UInt32 = 0x11024
let IXGBE_GSCN_2: UInt32 = 0x11028
let IXGBE_GSCN_3: UInt32 = 0x1102C
let IXGBE_GSCN_0_X540: UInt32 = IXGBE_GSCN_0
let IXGBE_GSCN_1_X540: UInt32 = IXGBE_GSCN_1
let IXGBE_GSCN_2_X540: UInt32 = IXGBE_GSCN_2
let IXGBE_GSCN_3_X540: UInt32 = IXGBE_GSCN_3
let IXGBE_FACTPS: UInt32 = 0x10150
let IXGBE_FACTPS_X540: UInt32 = IXGBE_FACTPS
let IXGBE_GSCL_1_X550: UInt32 = 0x11800
let IXGBE_GSCL_2_X550: UInt32 = 0x11804
let IXGBE_GSCL_1_X550EM_x: UInt32 = IXGBE_GSCL_1_X550
let IXGBE_GSCL_2_X550EM_x: UInt32 = IXGBE_GSCL_2_X550
let IXGBE_GSCN_0_X550: UInt32 = 0x11820
let IXGBE_GSCN_1_X550: UInt32 = 0x11824
let IXGBE_GSCN_2_X550: UInt32 = 0x11828
let IXGBE_GSCN_3_X550: UInt32 = 0x1182C
let IXGBE_GSCN_0_X550EM_x: UInt32 = IXGBE_GSCN_0_X550
let IXGBE_GSCN_1_X550EM_x: UInt32 = IXGBE_GSCN_1_X550
let IXGBE_GSCN_2_X550EM_x: UInt32 = IXGBE_GSCN_2_X550
let IXGBE_GSCN_3_X550EM_x: UInt32 = IXGBE_GSCN_3_X550
let IXGBE_FACTPS_X550: UInt32 = IXGBE_FACTPS
let IXGBE_FACTPS_X550EM_x: UInt32 = IXGBE_FACTPS
let IXGBE_GSCL_1_X550EM_a: UInt32 = IXGBE_GSCL_1_X550
let IXGBE_GSCL_2_X550EM_a: UInt32 = IXGBE_GSCL_2_X550
let IXGBE_GSCN_0_X550EM_a: UInt32 = IXGBE_GSCN_0_X550
let IXGBE_GSCN_1_X550EM_a: UInt32 = IXGBE_GSCN_1_X550
let IXGBE_GSCN_2_X550EM_a: UInt32 = IXGBE_GSCN_2_X550
let IXGBE_GSCN_3_X550EM_a: UInt32 = IXGBE_GSCN_3_X550
let IXGBE_FACTPS_X550EM_a: UInt32 = 0x15FEC
let IXGBE_PCIEANACTL: UInt32 = 0x11040
let IXGBE_SWSM: UInt32 = 0x10140
let IXGBE_SWSM_X540: UInt32 = IXGBE_SWSM
let IXGBE_SWSM_X550: UInt32 = IXGBE_SWSM
let IXGBE_SWSM_X550EM_x: UInt32 = IXGBE_SWSM
let IXGBE_SWSM_X550EM_a: UInt32 = 0x15F70
let IXGBE_FWSM: UInt32 = 0x10148
let IXGBE_FWSM_X540: UInt32 = IXGBE_FWSM
let IXGBE_FWSM_X550: UInt32 = IXGBE_FWSM
let IXGBE_FWSM_X550EM_x: UInt32 = IXGBE_FWSM
let IXGBE_FWSM_X550EM_a: UInt32 = 0x15F74
let IXGBE_SWFW_SYNC: UInt32 = IXGBE_GSSR
let IXGBE_SWFW_SYNC_X540: UInt32 = IXGBE_SWFW_SYNC
let IXGBE_SWFW_SYNC_X550: UInt32 = IXGBE_SWFW_SYNC
let IXGBE_SWFW_SYNC_X550EM_x: UInt32 = IXGBE_SWFW_SYNC
let IXGBE_SWFW_SYNC_X550EM_a: UInt32 = 0x15F78
let IXGBE_GSSR: UInt32 = 0x10160
let IXGBE_MREVID: UInt32 = 0x11064
let IXGBE_DCA_ID: UInt32 = 0x11070
let IXGBE_DCA_CTRL: UInt32 = 0x11074
let IXGBE_GCR_EXT: UInt32 = 0x11050
let IXGBE_GSCL_5_82599: UInt32 = 0x11030
let IXGBE_GSCL_6_82599: UInt32 = 0x11034
let IXGBE_GSCL_7_82599: UInt32 = 0x11038
let IXGBE_GSCL_8_82599: UInt32 = 0x1103C
let IXGBE_GSCL_5_X540: UInt32 = IXGBE_GSCL_5_82599
let IXGBE_GSCL_6_X540: UInt32 = IXGBE_GSCL_6_82599
let IXGBE_GSCL_7_X540: UInt32 = IXGBE_GSCL_7_82599
let IXGBE_GSCL_8_X540: UInt32 = IXGBE_GSCL_8_82599
let IXGBE_PHYADR_82599: UInt32 = 0x11040
let IXGBE_PHYDAT_82599: UInt32 = 0x11044
let IXGBE_PHYCTL_82599: UInt32 = 0x11048
let IXGBE_PBACLR_82599: UInt32 = 0x11068
let IXGBE_CIAA: UInt32 = 0x11088
let IXGBE_CIAD: UInt32 = 0x1108C
let IXGBE_CIAA_82599: UInt32 = IXGBE_CIAA
let IXGBE_CIAD_82599: UInt32 = IXGBE_CIAD
let IXGBE_CIAA_X540: UInt32 = IXGBE_CIAA
let IXGBE_CIAD_X540: UInt32 = IXGBE_CIAD
let IXGBE_GSCL_5_X550: UInt32 = 0x11810
let IXGBE_GSCL_6_X550: UInt32 = 0x11814
let IXGBE_GSCL_7_X550: UInt32 = 0x11818
let IXGBE_GSCL_8_X550: UInt32 = 0x1181C
let IXGBE_GSCL_5_X550EM_x: UInt32 = IXGBE_GSCL_5_X550
let IXGBE_GSCL_6_X550EM_x: UInt32 = IXGBE_GSCL_6_X550
let IXGBE_GSCL_7_X550EM_x: UInt32 = IXGBE_GSCL_7_X550
let IXGBE_GSCL_8_X550EM_x: UInt32 = IXGBE_GSCL_8_X550
let IXGBE_CIAA_X550: UInt32 = 0x11508
let IXGBE_CIAD_X550: UInt32 = 0x11510
let IXGBE_CIAA_X550EM_x: UInt32 = IXGBE_CIAA_X550
let IXGBE_CIAD_X550EM_x: UInt32 = IXGBE_CIAD_X550
let IXGBE_GSCL_5_X550EM_a: UInt32 = IXGBE_GSCL_5_X550
let IXGBE_GSCL_6_X550EM_a: UInt32 = IXGBE_GSCL_6_X550
let IXGBE_GSCL_7_X550EM_a: UInt32 = IXGBE_GSCL_7_X550
let IXGBE_GSCL_8_X550EM_a: UInt32 = IXGBE_GSCL_8_X550
let IXGBE_CIAA_X550EM_a: UInt32 = IXGBE_CIAA_X550
let IXGBE_CIAD_X550EM_a: UInt32 = IXGBE_CIAD_X550
let IXGBE_PICAUSE: UInt32 = 0x110B0
let IXGBE_PIENA: UInt32 = 0x110B8
let IXGBE_CDQ_MBR_82599: UInt32 = 0x110B4
let IXGBE_PCIESPARE: UInt32 = 0x110BC
let IXGBE_MISC_REG_82599: UInt32 = 0x110F0
let IXGBE_ECC_CTRL_0_82599: UInt32 = 0x11100
let IXGBE_ECC_CTRL_1_82599: UInt32 = 0x11104
let IXGBE_ECC_STATUS_82599: UInt32 = 0x110E0
let IXGBE_BAR_CTRL_82599: UInt32 = 0x110F4
let IXGBE_GCR_CMPL_TMOUT_MASK: UInt32 = 0x0000F000
let IXGBE_GCR_CMPL_TMOUT_10ms: UInt32 = 0x00001000
let IXGBE_GCR_CMPL_TMOUT_RESEND: UInt32 = 0x00010000
let IXGBE_GCR_CAP_VER2: UInt32 = 0x00040000
let IXGBE_GCR_EXT_MSIX_EN: UInt32 = 0x80000000
let IXGBE_GCR_EXT_BUFFERS_CLEAR: UInt32 = 0x40000000
let IXGBE_GCR_EXT_VT_MODE_16: UInt32 = 0x00000001
let IXGBE_GCR_EXT_VT_MODE_32: UInt32 = 0x00000002
let IXGBE_GCR_EXT_VT_MODE_64: UInt32 = 0x00000003
let IXGBE_GCR_EXT_VT_MODE_MASK: UInt32 = 0x00000003
let IXGBE_TSYNCRXCTL: UInt32 = 0x05188 /* Rx Time Sync Control register - RW */
let IXGBE_TSYNCTXCTL: UInt32 = 0x08C00 /* Tx Time Sync Control register - RW */
let IXGBE_RXSTMPL: UInt32 = 0x051E8 /* Rx timestamp Low - RO */
let IXGBE_RXSTMPH: UInt32 = 0x051A4 /* Rx timestamp High - RO */
let IXGBE_RXSATRL: UInt32 = 0x051A0 /* Rx timestamp attribute low - RO */
let IXGBE_RXSATRH: UInt32 = 0x051A8 /* Rx timestamp attribute high - RO */
let IXGBE_RXMTRL: UInt32 = 0x05120 /* RX message type register low - RW */
let IXGBE_TXSTMPL: UInt32 = 0x08C04 /* Tx timestamp value Low - RO */
let IXGBE_TXSTMPH: UInt32 = 0x08C08 /* Tx timestamp value High - RO */
let IXGBE_SYSTIML: UInt32 = 0x08C0C /* System time register Low - RO */
let IXGBE_SYSTIMH: UInt32 = 0x08C10 /* System time register High - RO */
let IXGBE_SYSTIMR: UInt32 = 0x08C58 /* System time register Residue - RO */
let IXGBE_TIMINCA: UInt32 = 0x08C14 /* Increment attributes register - RW */
let IXGBE_TIMADJL: UInt32 = 0x08C18 /* Time Adjustment Offset register Low - RW */
let IXGBE_TIMADJH: UInt32 = 0x08C1C /* Time Adjustment Offset register High - RW */
let IXGBE_TSAUXC: UInt32 = 0x08C20 /* TimeSync Auxiliary Control register - RW */
let IXGBE_TRGTTIML0: UInt32 = 0x08C24 /* Target Time Register 0 Low - RW */
let IXGBE_TRGTTIMH0: UInt32 = 0x08C28 /* Target Time Register 0 High - RW */
let IXGBE_TRGTTIML1: UInt32 = 0x08C2C /* Target Time Register 1 Low - RW */
let IXGBE_TRGTTIMH1: UInt32 = 0x08C30 /* Target Time Register 1 High - RW */
let IXGBE_CLKTIML: UInt32 = 0x08C34 /* Clock Out Time Register Low - RW */
let IXGBE_CLKTIMH: UInt32 = 0x08C38 /* Clock Out Time Register High - RW */
let IXGBE_FREQOUT0: UInt32 = 0x08C34 /* Frequency Out 0 Control register - RW */
let IXGBE_FREQOUT1: UInt32 = 0x08C38 /* Frequency Out 1 Control register - RW */
let IXGBE_AUXSTMPL0: UInt32 = 0x08C3C /* Auxiliary Time Stamp 0 register Low - RO */
let IXGBE_AUXSTMPH0: UInt32 = 0x08C40 /* Auxiliary Time Stamp 0 register High - RO */
let IXGBE_AUXSTMPL1: UInt32 = 0x08C44 /* Auxiliary Time Stamp 1 register Low - RO */
let IXGBE_AUXSTMPH1: UInt32 = 0x08C48 /* Auxiliary Time Stamp 1 register High - RO */
let IXGBE_TSIM: UInt32 = 0x08C68 /* TimeSync Interrupt Mask Register - RW */
let IXGBE_TSICR: UInt32 = 0x08C60 /* TimeSync Interrupt Cause Register - WO */
let IXGBE_TSSDP: UInt32 = 0x0003C /* TimeSync SDP Configuration Register - RW */
let IXGBE_RDSTATCTL: UInt32 = 0x02C20
let IXGBE_RDHMPN: UInt32 = 0x02F08
let IXGBE_RDPROBE: UInt32 = 0x02F20
let IXGBE_RDMAM: UInt32 = 0x02F30
let IXGBE_RDMAD: UInt32 = 0x02F34
let IXGBE_TDHMPN: UInt32 = 0x07F08
let IXGBE_TDHMPN2: UInt32 = 0x082FC
let IXGBE_TXDESCIC: UInt32 = 0x082CC
let IXGBE_TDPROBE: UInt32 = 0x07F20
let IXGBE_TXBUFCTRL: UInt32 = 0x0C600
let IXGBE_TXBUFDATA0: UInt32 = 0x0C610
let IXGBE_TXBUFDATA1: UInt32 = 0x0C614
let IXGBE_TXBUFDATA2: UInt32 = 0x0C618
let IXGBE_TXBUFDATA3: UInt32 = 0x0C61C
let IXGBE_RXBUFCTRL: UInt32 = 0x03600
let IXGBE_RXBUFDATA0: UInt32 = 0x03610
let IXGBE_RXBUFDATA1: UInt32 = 0x03614
let IXGBE_RXBUFDATA2: UInt32 = 0x03618
let IXGBE_RXBUFDATA3: UInt32 = 0x0361C
let IXGBE_RFVAL: UInt32 = 0x050A4
let IXGBE_MDFTC1: UInt32 = 0x042B8
let IXGBE_MDFTC2: UInt32 = 0x042C0
let IXGBE_MDFTFIFO1: UInt32 = 0x042C4
let IXGBE_MDFTFIFO2: UInt32 = 0x042C8
let IXGBE_MDFTS: UInt32 = 0x042CC
let IXGBE_PCIEECCCTL: UInt32 = 0x1106C
let IXGBE_PCIEECCCTL0: UInt32 = 0x11100
let IXGBE_PCIEECCCTL1: UInt32 = 0x11104
let IXGBE_RXDBUECC: UInt32 = 0x03F70
let IXGBE_TXDBUECC: UInt32 = 0x0CF70
let IXGBE_RXDBUEST: UInt32 = 0x03F74
let IXGBE_TXDBUEST: UInt32 = 0x0CF74
let IXGBE_PBTXECC: UInt32 = 0x0C300
let IXGBE_PBRXECC: UInt32 = 0x03300
let IXGBE_GHECCR: UInt32 = 0x110B0
let IXGBE_PCS1GCFIG: UInt32 = 0x04200
let IXGBE_PCS1GLCTL: UInt32 = 0x04208
let IXGBE_PCS1GLSTA: UInt32 = 0x0420C
let IXGBE_PCS1GDBG0: UInt32 = 0x04210
let IXGBE_PCS1GDBG1: UInt32 = 0x04214
let IXGBE_PCS1GANA: UInt32 = 0x04218
let IXGBE_PCS1GANLP: UInt32 = 0x0421C
let IXGBE_PCS1GANNP: UInt32 = 0x04220
let IXGBE_PCS1GANLPNP: UInt32 = 0x04224
let IXGBE_HLREG0: UInt32 = 0x04240
let IXGBE_HLREG1: UInt32 = 0x04244
let IXGBE_PAP: UInt32 = 0x04248
let IXGBE_MACA: UInt32 = 0x0424C
let IXGBE_APAE: UInt32 = 0x04250
let IXGBE_ARD: UInt32 = 0x04254
let IXGBE_AIS: UInt32 = 0x04258
let IXGBE_MSCA: UInt32 = 0x0425C
let IXGBE_MSRWD: UInt32 = 0x04260
let IXGBE_MLADD: UInt32 = 0x04264
let IXGBE_MHADD: UInt32 = 0x04268
let IXGBE_MAXFRS: UInt32 = 0x04268
let IXGBE_TREG: UInt32 = 0x0426C
let IXGBE_PCSS1: UInt32 = 0x04288
let IXGBE_PCSS2: UInt32 = 0x0428C
let IXGBE_XPCSS: UInt32 = 0x04290
let IXGBE_MFLCN: UInt32 = 0x04294
let IXGBE_SERDESC: UInt32 = 0x04298
let IXGBE_MAC_SGMII_BUSY: UInt32 = 0x04298
let IXGBE_MACS: UInt32 = 0x0429C
let IXGBE_AUTOC: UInt32 = 0x042A0
let IXGBE_LINKS: UInt32 = 0x042A4
let IXGBE_LINKS2: UInt32 = 0x04324
let IXGBE_AUTOC2: UInt32 = 0x042A8
let IXGBE_AUTOC3: UInt32 = 0x042AC
let IXGBE_ANLP1: UInt32 = 0x042B0
let IXGBE_ANLP2: UInt32 = 0x042B4
let IXGBE_MACC: UInt32 = 0x04330
let IXGBE_ATLASCTL: UInt32 = 0x04800
let IXGBE_MMNGC: UInt32 = 0x042D0
let IXGBE_ANLPNP1: UInt32 = 0x042D4
let IXGBE_ANLPNP2: UInt32 = 0x042D8
let IXGBE_KRPCSFC: UInt32 = 0x042E0
let IXGBE_KRPCSS: UInt32 = 0x042E4
let IXGBE_FECS1: UInt32 = 0x042E8
let IXGBE_FECS2: UInt32 = 0x042EC
let IXGBE_SMADARCTL: UInt32 = 0x14F10
let IXGBE_MPVC: UInt32 = 0x04318
let IXGBE_SGMIIC: UInt32 = 0x04314
let IXGBE_RXNFGPC: UInt32 = 0x041B0
let IXGBE_RXNFGBCL: UInt32 = 0x041B4
let IXGBE_RXNFGBCH: UInt32 = 0x041B8
let IXGBE_RXDGPC: UInt32 = 0x02F50
let IXGBE_RXDGBCL: UInt32 = 0x02F54
let IXGBE_RXDGBCH: UInt32 = 0x02F58
let IXGBE_RXDDGPC: UInt32 = 0x02F5C
let IXGBE_RXDDGBCL: UInt32 = 0x02F60
let IXGBE_RXDDGBCH: UInt32 = 0x02F64
let IXGBE_RXLPBKGPC: UInt32 = 0x02F68
let IXGBE_RXLPBKGBCL: UInt32 = 0x02F6C
let IXGBE_RXLPBKGBCH: UInt32 = 0x02F70
let IXGBE_RXDLPBKGPC: UInt32 = 0x02F74
let IXGBE_RXDLPBKGBCL: UInt32 = 0x02F78
let IXGBE_RXDLPBKGBCH: UInt32 = 0x02F7C
let IXGBE_TXDGPC: UInt32 = 0x087A0
let IXGBE_TXDGBCL: UInt32 = 0x087A4
let IXGBE_TXDGBCH: UInt32 = 0x087A8
let IXGBE_RXDSTATCTRL: UInt32 = 0x02F40
let IXGBE_VALIDATE_LINK_READY_TIMEOUT: UInt32 = 50
let IXGBE_CORECTL: UInt32 = 0x014F00
let IXGBE_BARCTRL: UInt32 = 0x110F4
let IXGBE_BARCTRL_FLSIZE: UInt32 = 0x0700
let IXGBE_BARCTRL_FLSIZE_SHIFT: UInt32 = 8
let IXGBE_BARCTRL_CSRSIZE: UInt32 = 0x2000
let IXGBE_RSCCTL_RSCEN: UInt32 = 0x01
let IXGBE_RSCCTL_MAXDESC_1: UInt32 = 0x00
let IXGBE_RSCCTL_MAXDESC_4: UInt32 = 0x04
let IXGBE_RSCCTL_MAXDESC_8: UInt32 = 0x08
let IXGBE_RSCCTL_MAXDESC_16: UInt32 = 0x0C
let IXGBE_RSCCTL_TS_DIS: UInt32 = 0x02
let IXGBE_RSCDBU_RSCSMALDIS_MASK: UInt32 = 0x0000007F
let IXGBE_RSCDBU_RSCACKDIS: UInt32 = 0x00000080
let IXGBE_RDRXCTL_RDMTS_1_2: UInt32 = 0x00000000 /* Rx Desc Min THLD Size */
let IXGBE_RDRXCTL_CRCSTRIP: UInt32 = 0x00000002 /* CRC Strip */
let IXGBE_RDRXCTL_PSP: UInt32 = 0x00000004 /* Pad Small Packet */
let IXGBE_RDRXCTL_MVMEN: UInt32 = 0x00000020
let IXGBE_RDRXCTL_RSC_PUSH_DIS: UInt32 = 0x00000020
let IXGBE_RDRXCTL_DMAIDONE: UInt32 = 0x00000008 /* DMA init cycle done */
let IXGBE_RDRXCTL_RSC_PUSH: UInt32 = 0x00000080
let IXGBE_RDRXCTL_AGGDIS: UInt32 = 0x00010000 /* Aggregation disable */
let IXGBE_RDRXCTL_RSCFRSTSIZE: UInt32 = 0x003E0000 /* RSC First packet size */
let IXGBE_RDRXCTL_RSCLLIDIS: UInt32 = 0x00800000 /* Disable RSC compl on LLI*/
let IXGBE_RDRXCTL_RSCACKC: UInt32 = 0x02000000 /* must set 1 when RSC ena */
let IXGBE_RDRXCTL_FCOE_WRFIX: UInt32 = 0x04000000 /* must set 1 when RSC ena */
let IXGBE_RDRXCTL_MBINTEN: UInt32 = 0x10000000
let IXGBE_RDRXCTL_MDP_EN: UInt32 = 0x20000000
let IXGBE_PSRTYPE_RQPL_MASK: UInt32 = 0x7
let IXGBE_PSRTYPE_RQPL_SHIFT: UInt32 = 29
let IXGBE_CTRL_GIO_DIS: UInt32 = 0x00000004 /* Global IO Master Disable bit */
let IXGBE_CTRL_LNK_RST: UInt32 = 0x00000008 /* Link Reset. Resets everything. */
let IXGBE_CTRL_RST: UInt32 = 0x04000000 /* Reset (SW) */
let IXGBE_FACTPS_MNGCG: UInt32 = 0x20000000 /* Manageblility Clock Gated */
let IXGBE_FACTPS_LFS: UInt32 = 0x40000000 /* LAN Function Select */
let IXGBE_MHADD_MFS_MASK: UInt32 = 0xFFFF0000
let IXGBE_MHADD_MFS_SHIFT: UInt32 = 16
let IXGBE_CTRL_EXT_PFRSTD: UInt32 = 0x00004000 /* Physical Function Reset Done */
let IXGBE_CTRL_EXT_NS_DIS: UInt32 = 0x00010000 /* No Snoop disable */
let IXGBE_CTRL_EXT_RO_DIS: UInt32 = 0x00020000 /* Relaxed Ordering disable */
let IXGBE_CTRL_EXT_DRV_LOAD: UInt32 = 0x10000000 /* Driver loaded bit for FW */
let IXGBE_DCA_CTRL_DCA_ENABLE: UInt32 = 0x00000000 /* DCA Enable */
let IXGBE_DCA_CTRL_DCA_DISABLE: UInt32 = 0x00000001 /* DCA Disable */
let IXGBE_DCA_CTRL_DCA_MODE_CB1: UInt32 = 0x00 /* DCA Mode CB1 */
let IXGBE_DCA_CTRL_DCA_MODE_CB2: UInt32 = 0x02 /* DCA Mode CB2 */
let IXGBE_DCA_RXCTRL_CPUID_MASK: UInt32 = 0x0000001F /* Rx CPUID Mask */
let IXGBE_DCA_RXCTRL_CPUID_MASK_82599: UInt32 = 0xFF000000 /* Rx CPUID Mask */
let IXGBE_DCA_RXCTRL_CPUID_SHIFT_82599: UInt32 = 24 /* Rx CPUID Shift */
let IXGBE_DCA_TXCTRL_CPUID_MASK: UInt32 = 0x0000001F /* Tx CPUID Mask */
let IXGBE_DCA_TXCTRL_CPUID_MASK_82599: UInt32 = 0xFF000000 /* Tx CPUID Mask */
let IXGBE_DCA_TXCTRL_CPUID_SHIFT_82599: UInt32 = 24 /* Tx CPUID Shift */
let IXGBE_DCA_MAX_QUEUES_82598: UInt32 = 16 /* DCA regs only on 16 queues */
let IXGBE_MSCA_NP_ADDR_MASK: UInt32 = 0x0000FFFF /* MDI Addr (new prot) */
let IXGBE_MSCA_NP_ADDR_SHIFT: UInt32 = 0
let IXGBE_MSCA_DEV_TYPE_MASK: UInt32 = 0x001F0000 /* Dev Type (new prot) */
let IXGBE_MSCA_DEV_TYPE_SHIFT: UInt32 = 16 /* Register Address (old prot */
let IXGBE_MSCA_PHY_ADDR_MASK: UInt32 = 0x03E00000 /* PHY Address mask */
let IXGBE_MSCA_PHY_ADDR_SHIFT: UInt32 = 21 /* PHY Address shift*/
let IXGBE_MSCA_OP_CODE_MASK: UInt32 = 0x0C000000 /* OP CODE mask */
let IXGBE_MSCA_OP_CODE_SHIFT: UInt32 = 26 /* OP CODE shift */
let IXGBE_MSCA_ADDR_CYCLE: UInt32 = 0x00000000 /* OP CODE 00 (addr cycle) */
let IXGBE_MSCA_WRITE: UInt32 = 0x04000000 /* OP CODE 01 (wr) */
let IXGBE_MSCA_READ: UInt32 = 0x0C000000 /* OP CODE 11 (rd) */
let IXGBE_MSCA_READ_AUTOINC: UInt32 = 0x08000000 /* OP CODE 10 (rd auto inc)*/
let IXGBE_MSCA_ST_CODE_MASK: UInt32 = 0x30000000 /* ST Code mask */
let IXGBE_MSCA_ST_CODE_SHIFT: UInt32 = 28 /* ST Code shift */
let IXGBE_MSCA_NEW_PROTOCOL: UInt32 = 0x00000000 /* ST CODE 00 (new prot) */
let IXGBE_MSCA_OLD_PROTOCOL: UInt32 = 0x10000000 /* ST CODE 01 (old prot) */
let IXGBE_MSCA_MDI_COMMAND: UInt32 = 0x40000000 /* Initiate MDI command */
let IXGBE_MSCA_MDI_IN_PROG_EN: UInt32 = 0x80000000 /* MDI in progress ena */
let IXGBE_MSRWD_WRITE_DATA_MASK: UInt32 = 0x0000FFFF
let IXGBE_MSRWD_WRITE_DATA_SHIFT: UInt32 = 0
let IXGBE_MSRWD_READ_DATA_MASK: UInt32 = 0xFFFF0000
let IXGBE_MSRWD_READ_DATA_SHIFT: UInt32 = 16
let IXGBE_ATLAS_PDN_LPBK: UInt32 = 0x24
let IXGBE_ATLAS_PDN_10G: UInt32 = 0xB
let IXGBE_ATLAS_PDN_1G: UInt32 = 0xC
let IXGBE_ATLAS_PDN_AN: UInt32 = 0xD
let IXGBE_ATLASCTL_WRITE_CMD: UInt32 = 0x00010000
let IXGBE_ATLAS_PDN_TX_REG_EN: UInt32 = 0x10
let IXGBE_ATLAS_PDN_TX_10G_QL_ALL: UInt32 = 0xF0
let IXGBE_ATLAS_PDN_TX_1G_QL_ALL: UInt32 = 0xF0
let IXGBE_ATLAS_PDN_TX_AN_QL_ALL: UInt32 = 0xF0
let IXGBE_CORECTL_WRITE_CMD: UInt32 = 0x00010000
let IXGBE_MDIO_ZERO_DEV_TYPE: UInt32 = 0x0
let IXGBE_MDIO_PMA_PMD_DEV_TYPE: UInt32 = 0x1
let IXGBE_MDIO_PCS_DEV_TYPE: UInt32 = 0x3
let IXGBE_MDIO_PHY_XS_DEV_TYPE: UInt32 = 0x4
let IXGBE_MDIO_AUTO_NEG_DEV_TYPE: UInt32 = 0x7
let IXGBE_MDIO_VENDOR_SPECIFIC_1_DEV_TYPE: UInt32 = 0x1E   /* Device 30 */
let IXGBE_TWINAX_DEV: UInt32 = 1
let IXGBE_MDIO_COMMAND_TIMEOUT: UInt32 = 100 /* PHY Timeout for 1 GB mode */
let IXGBE_MDIO_VENDOR_SPECIFIC_1_CONTROL: UInt32 = 0x0 /* VS1 Ctrl Reg */
let IXGBE_MDIO_VENDOR_SPECIFIC_1_STATUS: UInt32 = 0x1 /* VS1 Status Reg */
let IXGBE_MDIO_VENDOR_SPECIFIC_1_LINK_STATUS: UInt32 = 0x0008 /* 1 = Link Up */
let IXGBE_MDIO_VENDOR_SPECIFIC_1_SPEED_STATUS: UInt32 = 0x0010 /* 0-10G, 1-1G */
let IXGBE_MDIO_VENDOR_SPECIFIC_1_10G_SPEED: UInt32 = 0x0018
let IXGBE_MDIO_VENDOR_SPECIFIC_1_1G_SPEED: UInt32 = 0x0010
let IXGBE_MDIO_AUTO_NEG_CONTROL: UInt32 = 0x0 /* AUTO_NEG Control Reg */
let IXGBE_MDIO_AUTO_NEG_STATUS: UInt32 = 0x1 /* AUTO_NEG Status Reg */
let IXGBE_MDIO_AUTO_NEG_VENDOR_STAT: UInt32 = 0xC800 /* AUTO_NEG Vendor Status Reg */
let IXGBE_MDIO_AUTO_NEG_VENDOR_TX_ALARM: UInt32 = 0xCC00 /* AUTO_NEG Vendor TX Reg */
let IXGBE_MDIO_AUTO_NEG_VENDOR_TX_ALARM2: UInt32 = 0xCC01 /* AUTO_NEG Vendor Tx Reg */
let IXGBE_MDIO_AUTO_NEG_VEN_LSC: UInt32 = 0x1 /* AUTO_NEG Vendor Tx LSC */
let IXGBE_MDIO_AUTO_NEG_ADVT: UInt32 = 0x10 /* AUTO_NEG Advt Reg */
let IXGBE_MDIO_AUTO_NEG_LP: UInt32 = 0x13 /* AUTO_NEG LP Status Reg */
let IXGBE_MDIO_AUTO_NEG_EEE_ADVT: UInt32 = 0x3C /* AUTO_NEG EEE Advt Reg */
let IXGBE_AUTO_NEG_10GBASE_EEE_ADVT: UInt32 = 0x8  /* AUTO NEG EEE 10GBaseT Advt */
let IXGBE_AUTO_NEG_1000BASE_EEE_ADVT: UInt32 = 0x4  /* AUTO NEG EEE 1000BaseT Advt */
let IXGBE_AUTO_NEG_100BASE_EEE_ADVT: UInt32 = 0x2  /* AUTO NEG EEE 100BaseT Advt */
let IXGBE_MDIO_PHY_XS_CONTROL: UInt32 = 0x0 /* PHY_XS Control Reg */
let IXGBE_MDIO_PHY_XS_RESET: UInt32 = 0x8000 /* PHY_XS Reset */
let IXGBE_MDIO_PHY_ID_HIGH: UInt32 = 0x2 /* PHY ID High Reg*/
let IXGBE_MDIO_PHY_ID_LOW: UInt32 = 0x3 /* PHY ID Low Reg*/
let IXGBE_MDIO_PHY_SPEED_ABILITY: UInt32 = 0x4 /* Speed Ability Reg */
let IXGBE_MDIO_PHY_SPEED_10G: UInt32 = 0x0001 /* 10G capable */
let IXGBE_MDIO_PHY_SPEED_1G: UInt32 = 0x0010 /* 1G capable */
let IXGBE_MDIO_PHY_SPEED_100M: UInt32 = 0x0020 /* 100M capable */
let IXGBE_MDIO_PHY_EXT_ABILITY: UInt32 = 0xB /* Ext Ability Reg */
let IXGBE_MDIO_PHY_10GBASET_ABILITY: UInt32 = 0x0004 /* 10GBaseT capable */
let IXGBE_MDIO_PHY_1000BASET_ABILITY: UInt32 = 0x0020 /* 1000BaseT capable */
let IXGBE_MDIO_PHY_100BASETX_ABILITY: UInt32 = 0x0080 /* 100BaseTX capable */
let IXGBE_MDIO_PHY_SET_LOW_POWER_MODE: UInt32 = 0x0800 /* Set low power mode */
let IXGBE_AUTO_NEG_LP_STATUS: UInt32 = 0xE820 /* AUTO NEG Rx LP Status Reg */
let IXGBE_AUTO_NEG_LP_1000BASE_CAP: UInt32 = 0x8000 /* AUTO NEG Rx LP 1000BaseT Cap */
let IXGBE_AUTO_NEG_LP_10GBASE_CAP: UInt32 = 0x0800 /* AUTO NEG Rx LP 10GBaseT Cap */
let IXGBE_AUTO_NEG_10GBASET_STAT: UInt32 = 0x0021 /* AUTO NEG 10G BaseT Stat */
let IXGBE_MDIO_TX_VENDOR_ALARMS_3: UInt32 = 0xCC02 /* Vendor Alarms 3 Reg */
let IXGBE_MDIO_TX_VENDOR_ALARMS_3_RST_MASK: UInt32 = 0x3 /* PHY Reset Complete Mask */
let IXGBE_MDIO_GLOBAL_RES_PR_10: UInt32 = 0xC479 /* Global Resv Provisioning 10 Reg */
let IXGBE_MDIO_POWER_UP_STALL: UInt32 = 0x8000 /* Power Up Stall */
let IXGBE_MDIO_GLOBAL_INT_CHIP_STD_MASK: UInt32 = 0xFF00 /* int std mask */
let IXGBE_MDIO_GLOBAL_CHIP_STD_INT_FLAG: UInt32 = 0xFC00 /* chip std int flag */
let IXGBE_MDIO_GLOBAL_INT_CHIP_VEN_MASK: UInt32 = 0xFF01 /* int chip-wide mask */
let IXGBE_MDIO_GLOBAL_INT_CHIP_VEN_FLAG: UInt32 = 0xFC01 /* int chip-wide mask */
let IXGBE_MDIO_GLOBAL_ALARM_1: UInt32 = 0xCC00 /* Global alarm 1 */
let IXGBE_MDIO_GLOBAL_ALM_1_DEV_FAULT: UInt32 = 0x0010 /* device fault */
let IXGBE_MDIO_GLOBAL_ALM_1_HI_TMP_FAIL: UInt32 = 0x4000 /* high temp failure */
let IXGBE_MDIO_GLOBAL_FAULT_MSG: UInt32 = 0xC850 /* Global Fault Message */
let IXGBE_MDIO_GLOBAL_FAULT_MSG_HI_TMP: UInt32 = 0x8007 /* high temp failure */
let IXGBE_MDIO_GLOBAL_INT_MASK: UInt32 = 0xD400 /* Global int mask */
let IXGBE_MDIO_GLOBAL_AN_VEN_ALM_INT_EN: UInt32 = 0x1000 /* autoneg vendor alarm int enable */
let IXGBE_MDIO_GLOBAL_ALARM_1_INT: UInt32 = 0x4 /* int in Global alarm 1 */
let IXGBE_MDIO_GLOBAL_VEN_ALM_INT_EN: UInt32 = 0x1 /* vendor alarm int enable */
let IXGBE_MDIO_GLOBAL_STD_ALM2_INT: UInt32 = 0x200 /* vendor alarm2 int mask */
let IXGBE_MDIO_GLOBAL_INT_HI_TEMP_EN: UInt32 = 0x4000 /* int high temp enable */
let IXGBE_MDIO_GLOBAL_INT_DEV_FAULT_EN: UInt32 = 0x0010 /* int dev fault enable */
let IXGBE_MDIO_PMA_PMD_CONTROL_ADDR: UInt32 = 0x0000 /* PMA/PMD Control Reg */
let IXGBE_MDIO_PMA_PMD_SDA_SCL_ADDR: UInt32 = 0xC30A /* PHY_XS SDA/SCL Addr Reg */
let IXGBE_MDIO_PMA_PMD_SDA_SCL_DATA: UInt32 = 0xC30B /* PHY_XS SDA/SCL Data Reg */
let IXGBE_MDIO_PMA_PMD_SDA_SCL_STAT: UInt32 = 0xC30C /* PHY_XS SDA/SCL Status Reg */
let IXGBE_MDIO_PMA_TX_VEN_LASI_INT_MASK: UInt32 = 0xD401 /* PHY TX Vendor LASI */
let IXGBE_MDIO_PMA_TX_VEN_LASI_INT_EN: UInt32 = 0x1 /* PHY TX Vendor LASI enable */
let IXGBE_MDIO_PMD_STD_TX_DISABLE_CNTR: UInt32 = 0x9 /* Standard Transmit Dis Reg */
let IXGBE_MDIO_PMD_GLOBAL_TX_DISABLE: UInt32 = 0x0001 /* PMD Global Transmit Dis */
let IXGBE_PCRC8ECL: UInt32 = 0x0E810 /* PCR CRC-8 Error Count Lo */
let IXGBE_PCRC8ECH: UInt32 = 0x0E811 /* PCR CRC-8 Error Count Hi */
let IXGBE_PCRC8ECH_MASK: UInt32 = 0x1F
let IXGBE_LDPCECL: UInt32 = 0x0E820 /* PCR Uncorrected Error Count Lo */
let IXGBE_LDPCECH: UInt32 = 0x0E821 /* PCR Uncorrected Error Count Hi */
let IXGBE_MDIO_PHY_LOW_POWER_MODE: UInt32 = 0x0800
let IXGBE_MDIO_XENPAK_LASI_STATUS: UInt32 = 0x9005 /* XENPAK LASI Status register*/
let IXGBE_XENPAK_LASI_LINK_STATUS_ALARM: UInt32 = 0x1 /* Link Status Alarm change */
let IXGBE_MDIO_AUTO_NEG_LINK_STATUS: UInt32 = 0x4 /* Indicates if link is up */
let IXGBE_MDIO_AUTO_NEG_VENDOR_STATUS_MASK: UInt32 = 0x7 /* Speed/Duplex Mask */
let IXGBE_MDIO_AUTO_NEG_VEN_STAT_SPEED_MASK: UInt32 = 0x6 /* Speed Mask */
let IXGBE_MDIO_AUTO_NEG_VENDOR_STATUS_10M_HALF: UInt32 = 0x0 /* 10Mb/s Half Duplex */
let IXGBE_MDIO_AUTO_NEG_VENDOR_STATUS_10M_FULL: UInt32 = 0x1 /* 10Mb/s Full Duplex */
let IXGBE_MDIO_AUTO_NEG_VENDOR_STATUS_100M_HALF: UInt32 = 0x2 /* 100Mb/s Half Duplex */
let IXGBE_MDIO_AUTO_NEG_VENDOR_STATUS_100M_FULL: UInt32 = 0x3 /* 100Mb/s Full Duplex */
let IXGBE_MDIO_AUTO_NEG_VENDOR_STATUS_1GB_HALF: UInt32 = 0x4 /* 1Gb/s Half Duplex */
let IXGBE_MDIO_AUTO_NEG_VENDOR_STATUS_1GB_FULL: UInt32 = 0x5 /* 1Gb/s Full Duplex */
let IXGBE_MDIO_AUTO_NEG_VENDOR_STATUS_10GB_HALF: UInt32 = 0x6 /* 10Gb/s Half Duplex */
let IXGBE_MDIO_AUTO_NEG_VENDOR_STATUS_10GB_FULL: UInt32 = 0x7 /* 10Gb/s Full Duplex */
let IXGBE_MDIO_AUTO_NEG_VENDOR_STATUS_1GB: UInt32 = 0x4 /* 1Gb/s */
let IXGBE_MDIO_AUTO_NEG_VENDOR_STATUS_10GB: UInt32 = 0x6 /* 10Gb/s */
let IXGBE_MII_10GBASE_T_AUTONEG_CTRL_REG: UInt32 = 0x20   /* 10G Control Reg */
let IXGBE_MII_AUTONEG_VENDOR_PROVISION_1_REG: UInt32 = 0xC400 /* 1G Provisioning 1 */
let IXGBE_MII_AUTONEG_XNP_TX_REG: UInt32 = 0x17   /* 1G XNP Transmit */
let IXGBE_MII_AUTONEG_ADVERTISE_REG: UInt32 = 0x10   /* 100M Advertisement */
let IXGBE_MII_10GBASE_T_ADVERTISE: UInt32 = 0x1000 /* full duplex, bit:12*/
let IXGBE_MII_1GBASE_T_ADVERTISE_XNP_TX: UInt32 = 0x4000 /* full duplex, bit:14*/
let IXGBE_MII_1GBASE_T_ADVERTISE: UInt32 = 0x8000 /* full duplex, bit:15*/
let IXGBE_MII_2_5GBASE_T_ADVERTISE: UInt32 = 0x0400
let IXGBE_MII_5GBASE_T_ADVERTISE: UInt32 = 0x0800
let IXGBE_MII_100BASE_T_ADVERTISE: UInt32 = 0x0100 /* full duplex, bit:8 */
let IXGBE_MII_100BASE_T_ADVERTISE_HALF: UInt32 = 0x0080 /* half duplex, bit:7 */
let IXGBE_MII_RESTART: UInt32 = 0x200
let IXGBE_MII_AUTONEG_COMPLETE: UInt32 = 0x20
let IXGBE_MII_AUTONEG_LINK_UP: UInt32 = 0x04
let IXGBE_MII_AUTONEG_REG: UInt32 = 0x0
let IXGBE_PHY_REVISION_MASK: UInt32 = 0xFFFFFFF0
let IXGBE_MAX_PHY_ADDR: UInt32 = 32
let IXGBE_M88E1500_E_PHY_ID: UInt32 = 0x01410DD0
let IXGBE_M88E1543_E_PHY_ID: UInt32 = 0x01410EA0
let IXGBE_PHY_INIT_OFFSET_NL: UInt32 = 0x002B
let IXGBE_PHY_INIT_END_NL: UInt32 = 0xFFFF
let IXGBE_CONTROL_MASK_NL: UInt32 = 0xF000
let IXGBE_DATA_MASK_NL: UInt32 = 0x0FFF
let IXGBE_CONTROL_SHIFT_NL: UInt32 = 12
let IXGBE_DELAY_NL: UInt32 = 0
let IXGBE_DATA_NL: UInt32 = 1
let IXGBE_CONTROL_NL: UInt32 = 0x000F
let IXGBE_CONTROL_EOL_NL: UInt32 = 0x0FFF
let IXGBE_CONTROL_SOL_NL: UInt32 = 0x0000
let IXGBE_SDP0_GPIEN: UInt32 = 0x00000001 /* SDP0 */
let IXGBE_SDP1_GPIEN: UInt32 = 0x00000002 /* SDP1 */
let IXGBE_SDP2_GPIEN: UInt32 = 0x00000004 /* SDP2 */
let IXGBE_SDP0_GPIEN_X540: UInt32 = 0x00000002 /* SDP0 on X540 and X550 */
let IXGBE_SDP1_GPIEN_X540: UInt32 = 0x00000004 /* SDP1 on X540 and X550 */
let IXGBE_SDP2_GPIEN_X540: UInt32 = 0x00000008 /* SDP2 on X540 and X550 */
let IXGBE_SDP0_GPIEN_X550: UInt32 = IXGBE_SDP0_GPIEN_X540
let IXGBE_SDP1_GPIEN_X550: UInt32 = IXGBE_SDP1_GPIEN_X540
let IXGBE_SDP2_GPIEN_X550: UInt32 = IXGBE_SDP2_GPIEN_X540
let IXGBE_SDP0_GPIEN_X550EM_x: UInt32 = IXGBE_SDP0_GPIEN_X540
let IXGBE_SDP1_GPIEN_X550EM_x: UInt32 = IXGBE_SDP1_GPIEN_X540
let IXGBE_SDP2_GPIEN_X550EM_x: UInt32 = IXGBE_SDP2_GPIEN_X540
let IXGBE_SDP0_GPIEN_X550EM_a: UInt32 = IXGBE_SDP0_GPIEN_X540
let IXGBE_SDP1_GPIEN_X550EM_a: UInt32 = IXGBE_SDP1_GPIEN_X540
let IXGBE_SDP2_GPIEN_X550EM_a: UInt32 = IXGBE_SDP2_GPIEN_X540
let IXGBE_GPIE_MSIX_MODE: UInt32 = 0x00000010 /* MSI-X mode */
let IXGBE_GPIE_OCD: UInt32 = 0x00000020 /* Other Clear Disable */
let IXGBE_GPIE_EIMEN: UInt32 = 0x00000040 /* Immediate Interrupt Enable */
let IXGBE_GPIE_EIAME: UInt32 = 0x40000000
let IXGBE_GPIE_PBA_SUPPORT: UInt32 = 0x80000000
let IXGBE_GPIE_RSC_DELAY_SHIFT: UInt32 = 11
let IXGBE_GPIE_VTMODE_MASK: UInt32 = 0x0000C000 /* VT Mode Mask */
let IXGBE_GPIE_VTMODE_16: UInt32 = 0x00004000 /* 16 VFs 8 queues per VF */
let IXGBE_GPIE_VTMODE_32: UInt32 = 0x00008000 /* 32 VFs 4 queues per VF */
let IXGBE_GPIE_VTMODE_64: UInt32 = 0x0000C000 /* 64 VFs 2 queues per VF */
let IXGBE_MAX_PACKET_BUFFERS: UInt32 = 8
let IXGBE_TXPBSIZE_20KB: UInt32 = 0x00005000 /* 20KB Packet Buffer */
let IXGBE_TXPBSIZE_40KB: UInt32 = 0x0000A000 /* 40KB Packet Buffer */
let IXGBE_RXPBSIZE_48KB: UInt32 = 0x0000C000 /* 48KB Packet Buffer */
let IXGBE_RXPBSIZE_64KB: UInt32 = 0x00010000 /* 64KB Packet Buffer */
let IXGBE_RXPBSIZE_80KB: UInt32 = 0x00014000 /* 80KB Packet Buffer */
let IXGBE_RXPBSIZE_128KB: UInt32 = 0x00020000 /* 128KB Packet Buffer */
let IXGBE_RXPBSIZE_MAX: UInt32 = 0x00080000 /* 512KB Packet Buffer */
let IXGBE_TXPBSIZE_MAX: UInt32 = 0x00028000 /* 160KB Packet Buffer */
let IXGBE_TXPKT_SIZE_MAX: UInt32 = 0xA /* Max Tx Packet size */
let IXGBE_MAX_PB: UInt32 = 8
let IXGBE_TFCS_TXOFF: UInt32 = 0x00000001
let IXGBE_TFCS_TXOFF0: UInt32 = 0x00000100
let IXGBE_TFCS_TXOFF1: UInt32 = 0x00000200
let IXGBE_TFCS_TXOFF2: UInt32 = 0x00000400
let IXGBE_TFCS_TXOFF3: UInt32 = 0x00000800
let IXGBE_TFCS_TXOFF4: UInt32 = 0x00001000
let IXGBE_TFCS_TXOFF5: UInt32 = 0x00002000
let IXGBE_TFCS_TXOFF6: UInt32 = 0x00004000
let IXGBE_TFCS_TXOFF7: UInt32 = 0x00008000
let IXGBE_TCPTIMER_KS: UInt32 = 0x00000100
let IXGBE_TCPTIMER_COUNT_ENABLE: UInt32 = 0x00000200
let IXGBE_TCPTIMER_COUNT_FINISH: UInt32 = 0x00000400
let IXGBE_TCPTIMER_LOOP: UInt32 = 0x00000800
let IXGBE_TCPTIMER_DURATION_MASK: UInt32 = 0x000000FF
let IXGBE_HLREG0_TXCRCEN: UInt32 = 0x00000001 /* bit  0 */
let IXGBE_HLREG0_RXCRCSTRP: UInt32 = 0x00000002 /* bit  1 */
let IXGBE_HLREG0_JUMBOEN: UInt32 = 0x00000004 /* bit  2 */
let IXGBE_HLREG0_TXPADEN: UInt32 = 0x00000400 /* bit 10 */
let IXGBE_HLREG0_TXPAUSEEN: UInt32 = 0x00001000 /* bit 12 */
let IXGBE_HLREG0_RXPAUSEEN: UInt32 = 0x00004000 /* bit 14 */
let IXGBE_HLREG0_LPBK: UInt32 = 0x00008000 /* bit 15 */
let IXGBE_HLREG0_MDCSPD: UInt32 = 0x00010000 /* bit 16 */
let IXGBE_HLREG0_CONTMDC: UInt32 = 0x00020000 /* bit 17 */
let IXGBE_HLREG0_CTRLFLTR: UInt32 = 0x00040000 /* bit 18 */
let IXGBE_HLREG0_PREPEND: UInt32 = 0x00F00000 /* bits 20-23 */
let IXGBE_HLREG0_PRIPAUSEEN: UInt32 = 0x01000000 /* bit 24 */
let IXGBE_HLREG0_RXPAUSERECDA: UInt32 = 0x06000000 /* bits 25-26 */
let IXGBE_HLREG0_RXLNGTHERREN: UInt32 = 0x08000000 /* bit 27 */
let IXGBE_HLREG0_RXPADSTRIPEN: UInt32 = 0x10000000 /* bit 28 */
let IXGBE_VMD_CTL_VMDQ_EN: UInt32 = 0x00000001
let IXGBE_VMD_CTL_VMDQ_FILTER: UInt32 = 0x00000002
let IXGBE_VT_CTL_DIS_DEFPL: UInt32 = 0x20000000 /* disable default pool */
let IXGBE_VT_CTL_REPLEN: UInt32 = 0x40000000 /* replication enabled */
let IXGBE_VT_CTL_VT_ENABLE: UInt32 = 0x00000001  /* Enable VT Mode */
let IXGBE_VT_CTL_POOL_SHIFT: UInt32 = 7
let IXGBE_VMOLR_UPE: UInt32 = 0x00400000 /* unicast promiscuous */
let IXGBE_VMOLR_VPE: UInt32 = 0x00800000 /* VLAN promiscuous */
let IXGBE_VMOLR_AUPE: UInt32 = 0x01000000 /* accept untagged packets */
let IXGBE_VMOLR_ROMPE: UInt32 = 0x02000000 /* accept packets in MTA tbl */
let IXGBE_VMOLR_ROPE: UInt32 = 0x04000000 /* accept packets in UC tbl */
let IXGBE_VMOLR_BAM: UInt32 = 0x08000000 /* accept broadcast packets */
let IXGBE_VMOLR_MPE: UInt32 = 0x10000000 /* multicast promiscuous */
let IXGBE_VFRE_ENABLE_ALL: UInt32 = 0xFFFFFFFF
let IXGBE_VF_INIT_TIMEOUT: UInt32 = 200 /* Number of retries to clear RSTI */
let IXGBE_RDHMPN_RDICADDR: UInt32 = 0x007FF800
let IXGBE_RDHMPN_RDICRDREQ: UInt32 = 0x00800000
let IXGBE_RDHMPN_RDICADDR_SHIFT: UInt32 = 11
let IXGBE_TDHMPN_TDICADDR: UInt32 = 0x003FF800
let IXGBE_TDHMPN_TDICRDREQ: UInt32 = 0x00800000
let IXGBE_TDHMPN_TDICADDR_SHIFT: UInt32 = 11
let IXGBE_RDMAM_MEM_SEL_SHIFT: UInt32 = 13
let IXGBE_RDMAM_DWORD_SHIFT: UInt32 = 9
let IXGBE_RDMAM_DESC_COMP_FIFO: UInt32 = 1
let IXGBE_RDMAM_DFC_CMD_FIFO: UInt32 = 2
let IXGBE_RDMAM_RSC_HEADER_ADDR: UInt32 = 3
let IXGBE_RDMAM_TCN_STATUS_RAM: UInt32 = 4
let IXGBE_RDMAM_WB_COLL_FIFO: UInt32 = 5
let IXGBE_RDMAM_QSC_CNT_RAM: UInt32 = 6
let IXGBE_RDMAM_QSC_FCOE_RAM: UInt32 = 7
let IXGBE_RDMAM_QSC_QUEUE_CNT: UInt32 = 8
let IXGBE_RDMAM_QSC_QUEUE_RAM: UInt32 = 0xA
let IXGBE_RDMAM_QSC_RSC_RAM: UInt32 = 0xB
let IXGBE_RDMAM_DESC_COM_FIFO_RANGE: UInt32 = 135
let IXGBE_RDMAM_DESC_COM_FIFO_COUNT: UInt32 = 4
let IXGBE_RDMAM_DFC_CMD_FIFO_RANGE: UInt32 = 48
let IXGBE_RDMAM_DFC_CMD_FIFO_COUNT: UInt32 = 7
let IXGBE_RDMAM_RSC_HEADER_ADDR_RANGE: UInt32 = 32
let IXGBE_RDMAM_RSC_HEADER_ADDR_COUNT: UInt32 = 4
let IXGBE_RDMAM_TCN_STATUS_RAM_RANGE: UInt32 = 256
let IXGBE_RDMAM_TCN_STATUS_RAM_COUNT: UInt32 = 9
let IXGBE_RDMAM_WB_COLL_FIFO_RANGE: UInt32 = 8
let IXGBE_RDMAM_WB_COLL_FIFO_COUNT: UInt32 = 4
let IXGBE_RDMAM_QSC_CNT_RAM_RANGE: UInt32 = 64
let IXGBE_RDMAM_QSC_CNT_RAM_COUNT: UInt32 = 4
let IXGBE_RDMAM_QSC_FCOE_RAM_RANGE: UInt32 = 512
let IXGBE_RDMAM_QSC_FCOE_RAM_COUNT: UInt32 = 5
let IXGBE_RDMAM_QSC_QUEUE_CNT_RANGE: UInt32 = 32
let IXGBE_RDMAM_QSC_QUEUE_CNT_COUNT: UInt32 = 4
let IXGBE_RDMAM_QSC_QUEUE_RAM_RANGE: UInt32 = 128
let IXGBE_RDMAM_QSC_QUEUE_RAM_COUNT: UInt32 = 8
let IXGBE_RDMAM_QSC_RSC_RAM_RANGE: UInt32 = 32
let IXGBE_RDMAM_QSC_RSC_RAM_COUNT: UInt32 = 8
let IXGBE_TXDESCIC_READY: UInt32 = 0x80000000
let IXGBE_RXCSUM_IPPCSE: UInt32 = 0x00001000 /* IP payload checksum enable */
let IXGBE_RXCSUM_PCSD: UInt32 = 0x00002000 /* packet checksum disabled */
let IXGBE_FCRTL_XONE: UInt32 = 0x80000000 /* XON enable */
let IXGBE_FCRTH_FCEN: UInt32 = 0x80000000 /* Packet buffer fc enable */
let IXGBE_PAP_TXPAUSECNT_MASK: UInt32 = 0x0000FFFF /* Pause counter mask */
let IXGBE_RMCS_RRM: UInt32 = 0x00000002 /* Rx Recycle Mode enable */
let IXGBE_RMCS_RAC: UInt32 = 0x00000004
let IXGBE_RMCS_DFP: UInt32 = IXGBE_RMCS_RAC
let IXGBE_RMCS_TFCE_802_3X: UInt32 = 0x00000008 /* Tx Priority FC ena */
let IXGBE_RMCS_TFCE_PRIORITY: UInt32 = 0x00000010 /* Tx Priority FC ena */
let IXGBE_RMCS_ARBDIS: UInt32 = 0x00000040 /* Arbitration disable bit */
let IXGBE_FCCFG_TFCE_802_3X: UInt32 = 0x00000008 /* Tx link FC enable */
let IXGBE_FCCFG_TFCE_PRIORITY: UInt32 = 0x00000010 /* Tx priority FC enable */
let IXGBE_EICR_RTX_QUEUE: UInt32 = 0x0000FFFF /* RTx Queue Interrupt */
let IXGBE_EICR_FLOW_DIR: UInt32 = 0x00010000 /* FDir Exception */
let IXGBE_EICR_RX_MISS: UInt32 = 0x00020000 /* Packet Buffer Overrun */
let IXGBE_EICR_PCI: UInt32 = 0x00040000 /* PCI Exception */
let IXGBE_EICR_MAILBOX: UInt32 = 0x00080000 /* VF to PF Mailbox Interrupt */
let IXGBE_EICR_LSC: UInt32 = 0x00100000 /* Link Status Change */
let IXGBE_EICR_LINKSEC: UInt32 = 0x00200000 /* PN Threshold */
let IXGBE_EICR_MNG: UInt32 = 0x00400000 /* Manageability Event Interrupt */
let IXGBE_EICR_TS: UInt32 = 0x00800000 /* Thermal Sensor Event */
let IXGBE_EICR_TIMESYNC: UInt32 = 0x01000000 /* Timesync Event */
let IXGBE_EICR_GPI_SDP0: UInt32 = 0x01000000 /* Gen Purpose Interrupt on SDP0 */
let IXGBE_EICR_GPI_SDP1: UInt32 = 0x02000000 /* Gen Purpose Interrupt on SDP1 */
let IXGBE_EICR_GPI_SDP2: UInt32 = 0x04000000 /* Gen Purpose Interrupt on SDP2 */
let IXGBE_EICR_ECC: UInt32 = 0x10000000 /* ECC Error */
let IXGBE_EICR_GPI_SDP0_X540: UInt32 = 0x02000000 /* Gen Purpose Interrupt on SDP0 */
let IXGBE_EICR_GPI_SDP1_X540: UInt32 = 0x04000000 /* Gen Purpose Interrupt on SDP1 */
let IXGBE_EICR_GPI_SDP2_X540: UInt32 = 0x08000000 /* Gen Purpose Interrupt on SDP2 */
let IXGBE_EICR_GPI_SDP0_X550: UInt32 = IXGBE_EICR_GPI_SDP0_X540
let IXGBE_EICR_GPI_SDP1_X550: UInt32 = IXGBE_EICR_GPI_SDP1_X540
let IXGBE_EICR_GPI_SDP2_X550: UInt32 = IXGBE_EICR_GPI_SDP2_X540
let IXGBE_EICR_GPI_SDP0_X550EM_x: UInt32 = IXGBE_EICR_GPI_SDP0_X540
let IXGBE_EICR_GPI_SDP1_X550EM_x: UInt32 = IXGBE_EICR_GPI_SDP1_X540
let IXGBE_EICR_GPI_SDP2_X550EM_x: UInt32 = IXGBE_EICR_GPI_SDP2_X540
let IXGBE_EICR_GPI_SDP0_X550EM_a: UInt32 = IXGBE_EICR_GPI_SDP0_X540
let IXGBE_EICR_GPI_SDP1_X550EM_a: UInt32 = IXGBE_EICR_GPI_SDP1_X540
let IXGBE_EICR_GPI_SDP2_X550EM_a: UInt32 = IXGBE_EICR_GPI_SDP2_X540
let IXGBE_EICR_PBUR: UInt32 = 0x10000000 /* Packet Buffer Handler Error */
let IXGBE_EICR_DHER: UInt32 = 0x20000000 /* Descriptor Handler Error */
let IXGBE_EICR_TCP_TIMER: UInt32 = 0x40000000 /* TCP Timer */
let IXGBE_EICR_OTHER: UInt32 = 0x80000000 /* Interrupt Cause Active */
let IXGBE_EICS_RTX_QUEUE: UInt32 = IXGBE_EICR_RTX_QUEUE /* RTx Queue Interrupt */
let IXGBE_EICS_FLOW_DIR: UInt32 = IXGBE_EICR_FLOW_DIR  /* FDir Exception */
let IXGBE_EICS_RX_MISS: UInt32 = IXGBE_EICR_RX_MISS   /* Pkt Buffer Overrun */
let IXGBE_EICS_PCI: UInt32 = IXGBE_EICR_PCI /* PCI Exception */
let IXGBE_EICS_MAILBOX: UInt32 = IXGBE_EICR_MAILBOX   /* VF to PF Mailbox Int */
let IXGBE_EICS_LSC: UInt32 = IXGBE_EICR_LSC /* Link Status Change */
let IXGBE_EICS_MNG: UInt32 = IXGBE_EICR_MNG /* MNG Event Interrupt */
let IXGBE_EICS_TIMESYNC: UInt32 = IXGBE_EICR_TIMESYNC /* Timesync Event */
let IXGBE_EICS_GPI_SDP0: UInt32 = IXGBE_EICR_GPI_SDP0 /* SDP0 Gen Purpose Int */
let IXGBE_EICS_GPI_SDP1: UInt32 = IXGBE_EICR_GPI_SDP1 /* SDP1 Gen Purpose Int */
let IXGBE_EICS_GPI_SDP2: UInt32 = IXGBE_EICR_GPI_SDP2 /* SDP2 Gen Purpose Int */
let IXGBE_EICS_ECC: UInt32 = IXGBE_EICR_ECC /* ECC Error */
let IXGBE_EICS_PBUR: UInt32 = IXGBE_EICR_PBUR /* Pkt Buf Handler Err */
let IXGBE_EICS_DHER: UInt32 = IXGBE_EICR_DHER /* Desc Handler Error */
let IXGBE_EICS_TCP_TIMER: UInt32 = IXGBE_EICR_TCP_TIMER /* TCP Timer */
let IXGBE_EICS_OTHER: UInt32 = IXGBE_EICR_OTHER /* INT Cause Active */
let IXGBE_EIMS_RTX_QUEUE: UInt32 = IXGBE_EICR_RTX_QUEUE /* RTx Queue Interrupt */
let IXGBE_EIMS_FLOW_DIR: UInt32 = IXGBE_EICR_FLOW_DIR /* FDir Exception */
let IXGBE_EIMS_RX_MISS: UInt32 = IXGBE_EICR_RX_MISS /* Packet Buffer Overrun */
let IXGBE_EIMS_PCI: UInt32 = IXGBE_EICR_PCI /* PCI Exception */
let IXGBE_EIMS_MAILBOX: UInt32 = IXGBE_EICR_MAILBOX   /* VF to PF Mailbox Int */
let IXGBE_EIMS_LSC: UInt32 = IXGBE_EICR_LSC /* Link Status Change */
let IXGBE_EIMS_MNG: UInt32 = IXGBE_EICR_MNG /* MNG Event Interrupt */
let IXGBE_EIMS_TS: UInt32 = IXGBE_EICR_TS /* Thermal Sensor Event */
let IXGBE_EIMS_TIMESYNC: UInt32 = IXGBE_EICR_TIMESYNC /* Timesync Event */
let IXGBE_EIMS_GPI_SDP0: UInt32 = IXGBE_EICR_GPI_SDP0 /* SDP0 Gen Purpose Int */
let IXGBE_EIMS_GPI_SDP1: UInt32 = IXGBE_EICR_GPI_SDP1 /* SDP1 Gen Purpose Int */
let IXGBE_EIMS_GPI_SDP2: UInt32 = IXGBE_EICR_GPI_SDP2 /* SDP2 Gen Purpose Int */
let IXGBE_EIMS_ECC: UInt32 = IXGBE_EICR_ECC /* ECC Error */
let IXGBE_EIMS_PBUR: UInt32 = IXGBE_EICR_PBUR /* Pkt Buf Handler Err */
let IXGBE_EIMS_DHER: UInt32 = IXGBE_EICR_DHER /* Descr Handler Error */
let IXGBE_EIMS_TCP_TIMER: UInt32 = IXGBE_EICR_TCP_TIMER /* TCP Timer */
let IXGBE_EIMS_OTHER: UInt32 = IXGBE_EICR_OTHER /* INT Cause Active */
let IXGBE_EIMC_RTX_QUEUE: UInt32 = IXGBE_EICR_RTX_QUEUE /* RTx Queue Interrupt */
let IXGBE_EIMC_FLOW_DIR: UInt32 = IXGBE_EICR_FLOW_DIR /* FDir Exception */
let IXGBE_EIMC_RX_MISS: UInt32 = IXGBE_EICR_RX_MISS /* Packet Buffer Overrun */
let IXGBE_EIMC_PCI: UInt32 = IXGBE_EICR_PCI /* PCI Exception */
let IXGBE_EIMC_MAILBOX: UInt32 = IXGBE_EICR_MAILBOX /* VF to PF Mailbox Int */
let IXGBE_EIMC_LSC: UInt32 = IXGBE_EICR_LSC /* Link Status Change */
let IXGBE_EIMC_MNG: UInt32 = IXGBE_EICR_MNG /* MNG Event Interrupt */
let IXGBE_EIMC_TIMESYNC: UInt32 = IXGBE_EICR_TIMESYNC /* Timesync Event */
let IXGBE_EIMC_GPI_SDP0: UInt32 = IXGBE_EICR_GPI_SDP0 /* SDP0 Gen Purpose Int */
let IXGBE_EIMC_GPI_SDP1: UInt32 = IXGBE_EICR_GPI_SDP1 /* SDP1 Gen Purpose Int */
let IXGBE_EIMC_GPI_SDP2: UInt32 = IXGBE_EICR_GPI_SDP2  /* SDP2 Gen Purpose Int */
let IXGBE_EIMC_ECC: UInt32 = IXGBE_EICR_ECC /* ECC Error */
let IXGBE_EIMC_PBUR: UInt32 = IXGBE_EICR_PBUR /* Pkt Buf Handler Err */
let IXGBE_EIMC_DHER: UInt32 = IXGBE_EICR_DHER /* Desc Handler Err */
let IXGBE_EIMC_TCP_TIMER: UInt32 = IXGBE_EICR_TCP_TIMER /* TCP Timer */
let IXGBE_EIMC_OTHER: UInt32 = IXGBE_EICR_OTHER /* INT Cause Active */
let IXGBE_IMIR_PORT_IM_EN: UInt32 = 0x00010000  /* TCP port enable */
let IXGBE_IMIR_PORT_BP: UInt32 = 0x00020000  /* TCP port check bypass */
let IXGBE_IMIREXT_SIZE_BP: UInt32 = 0x00001000  /* Packet size bypass */
let IXGBE_IMIREXT_CTRL_URG: UInt32 = 0x00002000  /* Check URG bit in header */
let IXGBE_IMIREXT_CTRL_ACK: UInt32 = 0x00004000  /* Check ACK bit in header */
let IXGBE_IMIREXT_CTRL_PSH: UInt32 = 0x00008000  /* Check PSH bit in header */
let IXGBE_IMIREXT_CTRL_RST: UInt32 = 0x00010000  /* Check RST bit in header */
let IXGBE_IMIREXT_CTRL_SYN: UInt32 = 0x00020000  /* Check SYN bit in header */
let IXGBE_IMIREXT_CTRL_FIN: UInt32 = 0x00040000  /* Check FIN bit in header */
let IXGBE_IMIREXT_CTRL_BP: UInt32 = 0x00080000  /* Bypass check of control bits */
let IXGBE_IMIR_SIZE_BP_82599: UInt32 = 0x00001000 /* Packet size bypass */
let IXGBE_IMIR_CTRL_URG_82599: UInt32 = 0x00002000 /* Check URG bit in header */
let IXGBE_IMIR_CTRL_ACK_82599: UInt32 = 0x00004000 /* Check ACK bit in header */
let IXGBE_IMIR_CTRL_PSH_82599: UInt32 = 0x00008000 /* Check PSH bit in header */
let IXGBE_IMIR_CTRL_RST_82599: UInt32 = 0x00010000 /* Check RST bit in header */
let IXGBE_IMIR_CTRL_SYN_82599: UInt32 = 0x00020000 /* Check SYN bit in header */
let IXGBE_IMIR_CTRL_FIN_82599: UInt32 = 0x00040000 /* Check FIN bit in header */
let IXGBE_IMIR_CTRL_BP_82599: UInt32 = 0x00080000 /* Bypass chk of ctrl bits */
let IXGBE_IMIR_LLI_EN_82599: UInt32 = 0x00100000 /* Enables low latency Int */
let IXGBE_IMIR_RX_QUEUE_MASK_82599: UInt32 = 0x0000007F /* Rx Queue Mask */
let IXGBE_IMIR_RX_QUEUE_SHIFT_82599: UInt32 = 21 /* Rx Queue Shift */
let IXGBE_IMIRVP_PRIORITY_MASK: UInt32 = 0x00000007 /* VLAN priority mask */
let IXGBE_IMIRVP_PRIORITY_EN: UInt32 = 0x00000008 /* VLAN priority enable */
let IXGBE_MAX_FTQF_FILTERS: UInt32 = 128
let IXGBE_FTQF_PROTOCOL_MASK: UInt32 = 0x00000003
let IXGBE_FTQF_PROTOCOL_TCP: UInt32 = 0x00000000
let IXGBE_FTQF_PROTOCOL_UDP: UInt32 = 0x00000001
let IXGBE_FTQF_PROTOCOL_SCTP: UInt32 = 2
let IXGBE_FTQF_PRIORITY_MASK: UInt32 = 0x00000007
let IXGBE_FTQF_PRIORITY_SHIFT: UInt32 = 2
let IXGBE_FTQF_POOL_MASK: UInt32 = 0x0000003F
let IXGBE_FTQF_POOL_SHIFT: UInt32 = 8
let IXGBE_FTQF_5TUPLE_MASK_MASK: UInt32 = 0x0000001F
let IXGBE_FTQF_5TUPLE_MASK_SHIFT: UInt32 = 25
let IXGBE_FTQF_SOURCE_ADDR_MASK: UInt32 = 0x1E
let IXGBE_FTQF_DEST_ADDR_MASK: UInt32 = 0x1D
let IXGBE_FTQF_SOURCE_PORT_MASK: UInt32 = 0x1B
let IXGBE_FTQF_DEST_PORT_MASK: UInt32 = 0x17
let IXGBE_FTQF_PROTOCOL_COMP_MASK: UInt32 = 0x0F
let IXGBE_FTQF_POOL_MASK_EN: UInt32 = 0x40000000
let IXGBE_FTQF_QUEUE_ENABLE: UInt32 = 0x80000000
let IXGBE_IRQ_CLEAR_MASK: UInt32 = 0xFFFFFFFF
let IXGBE_IVAR_REG_NUM: UInt32 = 25
let IXGBE_IVAR_REG_NUM_82599: UInt32 = 64
let IXGBE_IVAR_TXRX_ENTRY: UInt32 = 96
let IXGBE_IVAR_RX_ENTRY: UInt32 = 64
let IXGBE_IVAR_TX_ENTRY: UInt32 = 32
let IXGBE_IVAR_TCP_TIMER_INDEX: UInt32 = 96 /* 0 based index */
let IXGBE_IVAR_OTHER_CAUSES_INDEX: UInt32 = 97 /* 0 based index */
let IXGBE_IVAR_ALLOC_VAL: UInt32 = 0x80 /* Interrupt Allocation valid */
let IXGBE_MAX_ETQF_FILTERS: UInt32 = 8
let IXGBE_ETQF_FCOE: UInt32 = 0x08000000 /* bit 27 */
let IXGBE_ETQF_BCN: UInt32 = 0x10000000 /* bit 28 */
let IXGBE_ETQF_TX_ANTISPOOF: UInt32 = 0x20000000 /* bit 29 */
let IXGBE_ETQF_1588: UInt32 = 0x40000000 /* bit 30 */
let IXGBE_ETQF_FILTER_EN: UInt32 = 0x80000000 /* bit 31 */
let IXGBE_ETQF_POOL_SHIFT: UInt32 = 20
let IXGBE_ETQS_RX_QUEUE: UInt32 = 0x007F0000 /* bits 22:16 */
let IXGBE_ETQS_RX_QUEUE_SHIFT: UInt32 = 16
let IXGBE_ETQS_LLI: UInt32 = 0x20000000 /* bit 29 */
let IXGBE_ETQS_QUEUE_EN: UInt32 = 0x80000000 /* bit 31 */
let IXGBE_ETQF_FILTER_EAPOL: UInt32 = 0
let IXGBE_ETQF_FILTER_FCOE: UInt32 = 2
let IXGBE_ETQF_FILTER_1588: UInt32 = 3
let IXGBE_ETQF_FILTER_FIP: UInt32 = 4
let IXGBE_ETQF_FILTER_LLDP: UInt32 = 5
let IXGBE_ETQF_FILTER_LACP: UInt32 = 6
let IXGBE_ETQF_FILTER_FC: UInt32 = 7
let IXGBE_VLNCTRL_VET: UInt32 = 0x0000FFFF  /* bits 0-15 */
let IXGBE_VLNCTRL_CFI: UInt32 = 0x10000000  /* bit 28 */
let IXGBE_VLNCTRL_CFIEN: UInt32 = 0x20000000  /* bit 29 */
let IXGBE_VLNCTRL_VFE: UInt32 = 0x40000000  /* bit 30 */
let IXGBE_VLNCTRL_VME: UInt32 = 0x80000000  /* bit 31 */
let IXGBE_VLVF_VIEN: UInt32 = 0x80000000  /* filter is valid */
let IXGBE_VLVF_ENTRIES: UInt32 = 64
let IXGBE_VLVF_VLANID_MASK: UInt32 = 0x00000FFF
let IXGBE_VMVIR_VLANA_DEFAULT: UInt32 = 0x40000000 /* Always use default VLAN */
let IXGBE_VMVIR_VLANA_NEVER: UInt32 = 0x80000000 /* Never insert VLAN tag */
let IXGBE_ETHERNET_IEEE_VLAN_TYPE: UInt32 = 0x8100  /* 802.1q protocol */
let IXGBE_STATUS_LAN_ID: UInt32 = 0x0000000C /* LAN ID */
let IXGBE_STATUS_LAN_ID_SHIFT: UInt32 = 2 /* LAN ID Shift*/
let IXGBE_STATUS_GIO: UInt32 = 0x00080000 /* GIO Master Ena Status */
let IXGBE_STATUS_LAN_ID_0: UInt32 = 0x00000000 /* LAN ID 0 */
let IXGBE_STATUS_LAN_ID_1: UInt32 = 0x00000004 /* LAN ID 1 */
let IXGBE_ESDP_SDP0: UInt32 = 0x00000001 /* SDP0 Data Value */
let IXGBE_ESDP_SDP1: UInt32 = 0x00000002 /* SDP1 Data Value */
let IXGBE_ESDP_SDP2: UInt32 = 0x00000004 /* SDP2 Data Value */
let IXGBE_ESDP_SDP3: UInt32 = 0x00000008 /* SDP3 Data Value */
let IXGBE_ESDP_SDP4: UInt32 = 0x00000010 /* SDP4 Data Value */
let IXGBE_ESDP_SDP5: UInt32 = 0x00000020 /* SDP5 Data Value */
let IXGBE_ESDP_SDP6: UInt32 = 0x00000040 /* SDP6 Data Value */
let IXGBE_ESDP_SDP7: UInt32 = 0x00000080 /* SDP7 Data Value */
let IXGBE_ESDP_SDP0_DIR: UInt32 = 0x00000100 /* SDP0 IO direction */
let IXGBE_ESDP_SDP1_DIR: UInt32 = 0x00000200 /* SDP1 IO direction */
let IXGBE_ESDP_SDP2_DIR: UInt32 = 0x00000400 /* SDP1 IO direction */
let IXGBE_ESDP_SDP3_DIR: UInt32 = 0x00000800 /* SDP3 IO direction */
let IXGBE_ESDP_SDP4_DIR: UInt32 = 0x00001000 /* SDP4 IO direction */
let IXGBE_ESDP_SDP5_DIR: UInt32 = 0x00002000 /* SDP5 IO direction */
let IXGBE_ESDP_SDP6_DIR: UInt32 = 0x00004000 /* SDP6 IO direction */
let IXGBE_ESDP_SDP7_DIR: UInt32 = 0x00008000 /* SDP7 IO direction */
let IXGBE_ESDP_SDP0_NATIVE: UInt32 = 0x00010000 /* SDP0 IO mode */
let IXGBE_ESDP_SDP1_NATIVE: UInt32 = 0x00020000 /* SDP1 IO mode */
let IXGBE_LED_IVRT_BASE: UInt32 = 0x00000040
let IXGBE_LED_BLINK_BASE: UInt32 = 0x00000080
let IXGBE_LED_MODE_MASK_BASE: UInt32 = 0x0000000F
let IXGBE_X557_MAX_LED_INDEX: UInt32 = 3
let IXGBE_X557_LED_PROVISIONING: UInt32 = 0xC430
let IXGBE_LED_LINK_UP: UInt32 = 0x0
let IXGBE_LED_LINK_10G: UInt32 = 0x1
let IXGBE_LED_MAC: UInt32 = 0x2
let IXGBE_LED_FILTER: UInt32 = 0x3
let IXGBE_LED_LINK_ACTIVE: UInt32 = 0x4
let IXGBE_LED_LINK_1G: UInt32 = 0x5
let IXGBE_LED_ON: UInt32 = 0xE
let IXGBE_LED_OFF: UInt32 = 0xF
let IXGBE_AUTOC_KX4_KX_SUPP_MASK: UInt32 = 0xC0000000
let IXGBE_AUTOC_KX4_SUPP: UInt32 = 0x80000000
let IXGBE_AUTOC_KX_SUPP: UInt32 = 0x40000000
let IXGBE_AUTOC_PAUSE: UInt32 = 0x30000000
let IXGBE_AUTOC_ASM_PAUSE: UInt32 = 0x20000000
let IXGBE_AUTOC_SYM_PAUSE: UInt32 = 0x10000000
let IXGBE_AUTOC_RF: UInt32 = 0x08000000
let IXGBE_AUTOC_PD_TMR: UInt32 = 0x06000000
let IXGBE_AUTOC_AN_RX_LOOSE: UInt32 = 0x01000000
let IXGBE_AUTOC_AN_RX_DRIFT: UInt32 = 0x00800000
let IXGBE_AUTOC_AN_RX_ALIGN: UInt32 = 0x007C0000
let IXGBE_AUTOC_FECA: UInt32 = 0x00040000
let IXGBE_AUTOC_FECR: UInt32 = 0x00020000
let IXGBE_AUTOC_KR_SUPP: UInt32 = 0x00010000
let IXGBE_AUTOC_AN_RESTART: UInt32 = 0x00001000
let IXGBE_AUTOC_FLU: UInt32 = 0x00000001
let IXGBE_AUTOC_LMS_SHIFT: UInt32 = 13
let IXGBE_AUTOC_1G_PMA_PMD_MASK: UInt32 = 0x00000200
let IXGBE_AUTOC_1G_PMA_PMD_SHIFT: UInt32 = 9
let IXGBE_AUTOC_10G_PMA_PMD_MASK: UInt32 = 0x00000180
let IXGBE_AUTOC_10G_PMA_PMD_SHIFT: UInt32 = 7
let IXGBE_AUTOC2_UPPER_MASK: UInt32 = 0xFFFF0000
let IXGBE_AUTOC2_10G_SERIAL_PMA_PMD_MASK: UInt32 = 0x00030000
let IXGBE_AUTOC2_10G_SERIAL_PMA_PMD_SHIFT: UInt32 = 16
let IXGBE_AUTOC2_LINK_DISABLE_ON_D3_MASK: UInt32 = 0x50000000
let IXGBE_AUTOC2_LINK_DISABLE_MASK: UInt32 = 0x70000000
let IXGBE_MACC_FLU: UInt32 = 0x00000001
let IXGBE_MACC_FSV_10G: UInt32 = 0x00030000
let IXGBE_MACC_FS: UInt32 = 0x00040000
let IXGBE_MAC_RX2TX_LPBK: UInt32 = 0x00000002
let IXGBE_MMNGC_MNG_VETO: UInt32 = 0x00000001
let IXGBE_LINKS_KX_AN_COMP: UInt32 = 0x80000000
let IXGBE_LINKS_UP: UInt32 = 0x40000000
let IXGBE_LINKS_SPEED: UInt32 = 0x20000000
let IXGBE_LINKS_MODE: UInt32 = 0x18000000
let IXGBE_LINKS_RX_MODE: UInt32 = 0x06000000
let IXGBE_LINKS_TX_MODE: UInt32 = 0x01800000
let IXGBE_LINKS_XGXS_EN: UInt32 = 0x00400000
let IXGBE_LINKS_SGMII_EN: UInt32 = 0x02000000
let IXGBE_LINKS_PCS_1G_EN: UInt32 = 0x00200000
let IXGBE_LINKS_1G_AN_EN: UInt32 = 0x00100000
let IXGBE_LINKS_KX_AN_IDLE: UInt32 = 0x00080000
let IXGBE_LINKS_1G_SYNC: UInt32 = 0x00040000
let IXGBE_LINKS_10G_ALIGN: UInt32 = 0x00020000
let IXGBE_LINKS_10G_LANE_SYNC: UInt32 = 0x00017000
let IXGBE_LINKS_TL_FAULT: UInt32 = 0x00001000
let IXGBE_LINKS_SIGNAL: UInt32 = 0x00000F00
let IXGBE_LINKS_SPEED_NON_STD: UInt32 = 0x08000000
let IXGBE_LINKS_SPEED_82599: UInt32 = 0x30000000
let IXGBE_LINKS_SPEED_10G_82599: UInt32 = 0x30000000
let IXGBE_LINKS_SPEED_1G_82599: UInt32 = 0x20000000
let IXGBE_LINKS_SPEED_100_82599: UInt32 = 0x10000000
let IXGBE_LINKS_SPEED_10_X550EM_A: UInt32 = 0x00000000
let IXGBE_LINK_UP_TIME: UInt32 = 90 /* 9.0 Seconds */
let IXGBE_AUTO_NEG_TIME: UInt32 = 45 /* 4.5 Seconds */
let IXGBE_LINKS2_AN_SUPPORTED: UInt32 = 0x00000040
let IXGBE_PCS1GLSTA_LINK_OK: UInt32 = 1
let IXGBE_PCS1GLSTA_SYNK_OK: UInt32 = 0x10
let IXGBE_PCS1GLSTA_AN_COMPLETE: UInt32 = 0x10000
let IXGBE_PCS1GLSTA_AN_PAGE_RX: UInt32 = 0x20000
let IXGBE_PCS1GLSTA_AN_TIMED_OUT: UInt32 = 0x40000
let IXGBE_PCS1GLSTA_AN_REMOTE_FAULT: UInt32 = 0x80000
let IXGBE_PCS1GLSTA_AN_ERROR_RWS: UInt32 = 0x100000
let IXGBE_PCS1GANA_SYM_PAUSE: UInt32 = 0x80
let IXGBE_PCS1GANA_ASM_PAUSE: UInt32 = 0x100
let IXGBE_PCS1GLCTL_AN_1G_TIMEOUT_EN: UInt32 = 0x00040000 /* PCS 1G autoneg to en */
let IXGBE_PCS1GLCTL_FLV_LINK_UP: UInt32 = 1
let IXGBE_PCS1GLCTL_FORCE_LINK: UInt32 = 0x20
let IXGBE_PCS1GLCTL_LOW_LINK_LATCH: UInt32 = 0x40
let IXGBE_PCS1GLCTL_AN_ENABLE: UInt32 = 0x10000
let IXGBE_PCS1GLCTL_AN_RESTART: UInt32 = 0x20000
let IXGBE_ANLP1_PAUSE: UInt32 = 0x0C00
let IXGBE_ANLP1_SYM_PAUSE: UInt32 = 0x0400
let IXGBE_ANLP1_ASM_PAUSE: UInt32 = 0x0800
let IXGBE_ANLP1_AN_STATE_MASK: UInt32 = 0x000f0000
let IXGBE_SWSM_SMBI: UInt32 = 0x00000001 /* Driver Semaphore bit */
let IXGBE_SWSM_SWESMBI: UInt32 = 0x00000002 /* FW Semaphore bit */
let IXGBE_SWSM_WMNG: UInt32 = 0x00000004 /* Wake MNG Clock */
let IXGBE_SWFW_REGSMP: UInt32 = 0x80000000 /* Register Semaphore bit 31 */
let IXGBE_GSSR_EEP_SM: UInt32 = 0x0001
let IXGBE_GSSR_PHY0_SM: UInt32 = 0x0002
let IXGBE_GSSR_PHY1_SM: UInt32 = 0x0004
let IXGBE_GSSR_MAC_CSR_SM: UInt32 = 0x0008
let IXGBE_GSSR_FLASH_SM: UInt32 = 0x0010
let IXGBE_GSSR_NVM_UPDATE_SM: UInt32 = 0x0200
let IXGBE_GSSR_SW_MNG_SM: UInt32 = 0x0400
let IXGBE_GSSR_TOKEN_SM: UInt32 = 0x40000000 /* SW bit for shared access */
let IXGBE_GSSR_SHARED_I2C_SM: UInt32 = 0x1806 /* Wait for both phys and both I2Cs */
let IXGBE_GSSR_I2C_MASK: UInt32 = 0x1800
let IXGBE_GSSR_NVM_PHY_MASK: UInt32 = 0xF
let IXGBE_FWSTS_FWRI: UInt32 = 0x00000200 /* Firmware Reset Indication */
let IXGBE_EEC_SK: UInt32 = 0x00000001 /* EEPROM Clock */
let IXGBE_EEC_CS: UInt32 = 0x00000002 /* EEPROM Chip Select */
let IXGBE_EEC_DI: UInt32 = 0x00000004 /* EEPROM Data In */
let IXGBE_EEC_DO: UInt32 = 0x00000008 /* EEPROM Data Out */
let IXGBE_EEC_FWE_MASK: UInt32 = 0x00000030 /* FLASH Write Enable */
let IXGBE_EEC_FWE_DIS: UInt32 = 0x00000010 /* Disable FLASH writes */
let IXGBE_EEC_FWE_EN: UInt32 = 0x00000020 /* Enable FLASH writes */
let IXGBE_EEC_FWE_SHIFT: UInt32 = 4
let IXGBE_EEC_REQ: UInt32 = 0x00000040 /* EEPROM Access Request */
let IXGBE_EEC_GNT: UInt32 = 0x00000080 /* EEPROM Access Grant */
let IXGBE_EEC_PRES: UInt32 = 0x00000100 /* EEPROM Present */
let IXGBE_EEC_ARD: UInt32 = 0x00000200 /* EEPROM Auto Read Done */
let IXGBE_EEC_FLUP: UInt32 = 0x00800000 /* Flash update command */
let IXGBE_EEC_SEC1VAL: UInt32 = 0x02000000 /* Sector 1 Valid */
let IXGBE_EEC_FLUDONE: UInt32 = 0x04000000 /* Flash update done */
let IXGBE_EEC_ADDR_SIZE: UInt32 = 0x00000400
let IXGBE_EEC_SIZE: UInt32 = 0x00007800 /* EEPROM Size */
let IXGBE_EERD_MAX_ADDR: UInt32 = 0x00003FFF /* EERD alows 14 bits for addr. */
let IXGBE_EEC_SIZE_SHIFT: UInt32 = 11
let IXGBE_EEPROM_WORD_SIZE_SHIFT: UInt32 = 6
let IXGBE_EEPROM_OPCODE_BITS: UInt32 = 8
let IXGBE_FLA_LOCKED: UInt32 = 0x00000040
let IXGBE_PBANUM_LENGTH: UInt32 = 11
let IXGBE_PBANUM_PTR_GUARD: UInt32 = 0xFAFA
let IXGBE_EEPROM_CHECKSUM: UInt32 = 0x3F
let IXGBE_EEPROM_SUM: UInt32 = 0xBABA
let IXGBE_EEPROM_CTRL_4: UInt32 = 0x45
let IXGBE_EE_CTRL_4_INST_ID: UInt32 = 0x10
let IXGBE_EE_CTRL_4_INST_ID_SHIFT: UInt32 = 4
let IXGBE_PCIE_ANALOG_PTR: UInt32 = 0x03
let IXGBE_ATLAS0_CONFIG_PTR: UInt32 = 0x04
let IXGBE_PHY_PTR: UInt32 = 0x04
let IXGBE_ATLAS1_CONFIG_PTR: UInt32 = 0x05
let IXGBE_OPTION_ROM_PTR: UInt32 = 0x05
let IXGBE_PCIE_GENERAL_PTR: UInt32 = 0x06
let IXGBE_PCIE_CONFIG0_PTR: UInt32 = 0x07
let IXGBE_PCIE_CONFIG1_PTR: UInt32 = 0x08
let IXGBE_CORE0_PTR: UInt32 = 0x09
let IXGBE_CORE1_PTR: UInt32 = 0x0A
let IXGBE_MAC0_PTR: UInt32 = 0x0B
let IXGBE_MAC1_PTR: UInt32 = 0x0C
let IXGBE_CSR0_CONFIG_PTR: UInt32 = 0x0D
let IXGBE_CSR1_CONFIG_PTR: UInt32 = 0x0E
let IXGBE_PCIE_ANALOG_PTR_X550: UInt32 = 0x02
let IXGBE_SHADOW_RAM_SIZE_X550: UInt32 = 0x4000
let IXGBE_IXGBE_PCIE_GENERAL_SIZE: UInt32 = 0x24
let IXGBE_PCIE_CONFIG_SIZE: UInt32 = 0x08
let IXGBE_EEPROM_LAST_WORD: UInt32 = 0x41
let IXGBE_FW_PTR: UInt32 = 0x0F
let IXGBE_PBANUM0_PTR: UInt32 = 0x15
let IXGBE_PBANUM1_PTR: UInt32 = 0x16
let IXGBE_ALT_MAC_ADDR_PTR: UInt32 = 0x37
let IXGBE_FREE_SPACE_PTR: UInt32 = 0x3E
let IXGBE_ETS_CFG: UInt32 = 0x26
let IXGBE_ETS_LTHRES_DELTA_MASK: UInt32 = 0x07C0
let IXGBE_ETS_LTHRES_DELTA_SHIFT: UInt32 = 6
let IXGBE_ETS_TYPE_MASK: UInt32 = 0x0038
let IXGBE_ETS_TYPE_SHIFT: UInt32 = 3
let IXGBE_ETS_TYPE_EMC: UInt32 = 0x000
let IXGBE_ETS_NUM_SENSORS_MASK: UInt32 = 0x0007
let IXGBE_ETS_DATA_LOC_MASK: UInt32 = 0x3C00
let IXGBE_ETS_DATA_LOC_SHIFT: UInt32 = 10
let IXGBE_ETS_DATA_INDEX_MASK: UInt32 = 0x0300
let IXGBE_ETS_DATA_INDEX_SHIFT: UInt32 = 8
let IXGBE_ETS_DATA_HTHRESH_MASK: UInt32 = 0x00FF
let IXGBE_SAN_MAC_ADDR_PTR: UInt32 = 0x28
let IXGBE_DEVICE_CAPS: UInt32 = 0x2C
let IXGBE_82599_SERIAL_NUMBER_MAC_ADDR: UInt32 = 0x11
let IXGBE_X550_SERIAL_NUMBER_MAC_ADDR: UInt32 = 0x04
let IXGBE_PCIE_MSIX_82599_CAPS: UInt32 = 0x72
let IXGBE_MAX_MSIX_VECTORS_82599: UInt32 = 0x40
let IXGBE_PCIE_MSIX_82598_CAPS: UInt32 = 0x62
let IXGBE_MAX_MSIX_VECTORS_82598: UInt32 = 0x13
let IXGBE_PCIE_MSIX_TBL_SZ_MASK: UInt32 = 0x7FF
let IXGBE_ISCSI_BOOT_CAPS: UInt32 = 0x0033
let IXGBE_ISCSI_SETUP_PORT_0: UInt32 = 0x0030
let IXGBE_ISCSI_SETUP_PORT_1: UInt32 = 0x0034
let IXGBE_EEPROM_MAX_RETRY_SPI: UInt32 = 5000 /* Max wait 5ms for RDY signal */
let IXGBE_EEPROM_STATUS_RDY_SPI: UInt32 = 0x01
let IXGBE_EEPROM_READ_OPCODE_SPI: UInt32 = 0x03  /* EEPROM read opcode */
let IXGBE_EEPROM_WRITE_OPCODE_SPI: UInt32 = 0x02  /* EEPROM write opcode */
let IXGBE_EEPROM_A8_OPCODE_SPI: UInt32 = 0x08  /* opcode bit-3 = addr bit-8 */
let IXGBE_EEPROM_WREN_OPCODE_SPI: UInt32 = 0x06  /* EEPROM set Write Ena latch */
let IXGBE_EEPROM_WRDI_OPCODE_SPI: UInt32 = 0x04
let IXGBE_EEPROM_RDSR_OPCODE_SPI: UInt32 = 0x05  /* EEPROM read Status reg */
let IXGBE_EEPROM_WRSR_OPCODE_SPI: UInt32 = 0x01  /* EEPROM write Status reg */
let IXGBE_EEPROM_ERASE4K_OPCODE_SPI: UInt32 = 0x20  /* EEPROM ERASE 4KB */
let IXGBE_EEPROM_ERASE64K_OPCODE_SPI: UInt32 = 0xD8  /* EEPROM ERASE 64KB */
let IXGBE_EEPROM_ERASE256_OPCODE_SPI: UInt32 = 0xDB  /* EEPROM ERASE 256B */
let IXGBE_EEPROM_RW_REG_DATA: UInt32 = 16 /* data offset in EEPROM read reg */
let IXGBE_EEPROM_RW_REG_DONE: UInt32 = 2 /* Offset to READ done bit */
let IXGBE_EEPROM_RW_REG_START: UInt32 = 1 /* First bit to start operation */
let IXGBE_EEPROM_RW_ADDR_SHIFT: UInt32 = 2 /* Shift to the address bits */
let IXGBE_NVM_POLL_WRITE: UInt32 = 1 /* Flag for polling for wr complete */
let IXGBE_NVM_POLL_READ: UInt32 = 0 /* Flag for polling for rd complete */
let IXGBE_ETH_LENGTH_OF_ADDRESS: UInt32 = 6
let IXGBE_EEPROM_PAGE_SIZE_MAX: UInt32 = 128
let IXGBE_EEPROM_RD_BUFFER_MAX_COUNT: UInt32 = 256 /* words rd in burst */
let IXGBE_EEPROM_WR_BUFFER_MAX_COUNT: UInt32 = 256 /* words wr in burst */
let IXGBE_EEPROM_CTRL_2: UInt32 = 1 /* EEPROM CTRL word 2 */
let IXGBE_EEPROM_CCD_BIT: UInt32 = 2
let IXGBE_EEPROM_GRANT_ATTEMPTS: UInt32 = 1000 /* EEPROM attempts to gain grant */
let IXGBE_EERD_EEWR_ATTEMPTS: UInt32 = 100000
let IXGBE_FLUDONE_ATTEMPTS: UInt32 = 20000
let IXGBE_PCIE_CTRL2: UInt32 = 0x5   /* PCIe Control 2 Offset */
let IXGBE_PCIE_CTRL2_DUMMY_ENABLE: UInt32 = 0x8   /* Dummy Function Enable */
let IXGBE_PCIE_CTRL2_LAN_DISABLE: UInt32 = 0x2   /* LAN PCI Disable */
let IXGBE_PCIE_CTRL2_DISABLE_SELECT: UInt32 = 0x1   /* LAN Disable Select */
let IXGBE_SAN_MAC_ADDR_PORT0_OFFSET: UInt32 = 0x0
let IXGBE_SAN_MAC_ADDR_PORT1_OFFSET: UInt32 = 0x3
let IXGBE_DEVICE_CAPS_ALLOW_ANY_SFP: UInt32 = 0x1
let IXGBE_DEVICE_CAPS_FCOE_OFFLOADS: UInt32 = 0x2
let IXGBE_FW_LESM_PARAMETERS_PTR: UInt32 = 0x2
let IXGBE_FW_LESM_STATE_1: UInt32 = 0x1
let IXGBE_FW_LESM_STATE_ENABLED: UInt32 = 0x8000 /* LESM Enable bit */
let IXGBE_FW_PASSTHROUGH_PATCH_CONFIG_PTR: UInt32 = 0x4
let IXGBE_FW_PATCH_VERSION_4: UInt32 = 0x7
let IXGBE_FCOE_IBA_CAPS_BLK_PTR: UInt32 = 0x33 /* iSCSI/FCOE block */
let IXGBE_FCOE_IBA_CAPS_FCOE: UInt32 = 0x20 /* FCOE flags */
let IXGBE_ISCSI_FCOE_BLK_PTR: UInt32 = 0x17 /* iSCSI/FCOE block */
let IXGBE_ISCSI_FCOE_FLAGS_OFFSET: UInt32 = 0x0 /* FCOE flags */
let IXGBE_ISCSI_FCOE_FLAGS_ENABLE: UInt32 = 0x1 /* FCOE flags enable bit */
let IXGBE_ALT_SAN_MAC_ADDR_BLK_PTR: UInt32 = 0x27 /* Alt. SAN MAC block */
let IXGBE_ALT_SAN_MAC_ADDR_CAPS_OFFSET: UInt32 = 0x0 /* Alt SAN MAC capability */
let IXGBE_ALT_SAN_MAC_ADDR_PORT0_OFFSET: UInt32 = 0x1 /* Alt SAN MAC 0 offset */
let IXGBE_ALT_SAN_MAC_ADDR_PORT1_OFFSET: UInt32 = 0x4 /* Alt SAN MAC 1 offset */
let IXGBE_ALT_SAN_MAC_ADDR_WWNN_OFFSET: UInt32 = 0x7 /* Alt WWNN prefix offset */
let IXGBE_ALT_SAN_MAC_ADDR_WWPN_OFFSET: UInt32 = 0x8 /* Alt WWPN prefix offset */
let IXGBE_ALT_SAN_MAC_ADDR_CAPS_SANMAC: UInt32 = 0x0 /* Alt SAN MAC exists */
let IXGBE_ALT_SAN_MAC_ADDR_CAPS_ALTWWN: UInt32 = 0x1 /* Alt WWN base exists */
let IXGBE_X540_FW_PASSTHROUGH_PATCH_CONFIG_PTR: UInt32 = 0x4
let IXGBE_X540_FW_MODULE_MASK: UInt32 = 0x7FFF
let IXGBE_X540_FW_MODULE_LENGTH: UInt32 = 0x1000
let IXGBE_X540_FW_PATCH_VERSION_2: UInt32 = 0x5
let IXGBE_X540_FW_PATCH_VERSION_3: UInt32 = 0x6
let IXGBE_X540_FW_PATCH_VERSION_4: UInt32 = 0x7
let IXGBE_DEVICE_CAPS_WOL_PORT0_1: UInt32 = 0x4 /* WoL supported on ports 0 & 1 */
let IXGBE_DEVICE_CAPS_WOL_PORT0: UInt32 = 0x8 /* WoL supported on port 0 */
let IXGBE_DEVICE_CAPS_WOL_MASK: UInt32 = 0xC /* Mask for WoL capabilities */
let IXGBE_PCI_DEVICE_STATUS: UInt32 = 0xAA
let IXGBE_PCI_DEVICE_STATUS_TRANSACTION_PENDING: UInt32 = 0x0020
let IXGBE_PCI_LINK_STATUS: UInt32 = 0xB2
let IXGBE_PCI_DEVICE_CONTROL2: UInt32 = 0xC8
let IXGBE_PCI_LINK_WIDTH: UInt32 = 0x3F0
let IXGBE_PCI_LINK_WIDTH_1: UInt32 = 0x10
let IXGBE_PCI_LINK_WIDTH_2: UInt32 = 0x20
let IXGBE_PCI_LINK_WIDTH_4: UInt32 = 0x40
let IXGBE_PCI_LINK_WIDTH_8: UInt32 = 0x80
let IXGBE_PCI_LINK_SPEED: UInt32 = 0xF
let IXGBE_PCI_LINK_SPEED_2500: UInt32 = 0x1
let IXGBE_PCI_LINK_SPEED_5000: UInt32 = 0x2
let IXGBE_PCI_LINK_SPEED_8000: UInt32 = 0x3
let IXGBE_PCI_HEADER_TYPE_REGISTER: UInt32 = 0x0E
let IXGBE_PCI_HEADER_TYPE_MULTIFUNC: UInt32 = 0x80
let IXGBE_PCI_DEVICE_CONTROL2_16ms: UInt32 = 0x0005
let IXGBE_PCIDEVCTRL2_TIMEO_MASK: UInt32 = 0xf
let IXGBE_PCIDEVCTRL2_16_32ms_def: UInt32 = 0x0
let IXGBE_PCIDEVCTRL2_50_100us: UInt32 = 0x1
let IXGBE_PCIDEVCTRL2_1_2ms: UInt32 = 0x2
let IXGBE_PCIDEVCTRL2_16_32ms: UInt32 = 0x5
let IXGBE_PCIDEVCTRL2_65_130ms: UInt32 = 0x6
let IXGBE_PCIDEVCTRL2_260_520ms: UInt32 = 0x9
let IXGBE_PCIDEVCTRL2_1_2s: UInt32 = 0xa
let IXGBE_PCIDEVCTRL2_4_8s: UInt32 = 0xd
let IXGBE_PCIDEVCTRL2_17_34s: UInt32 = 0xe
let IXGBE_PCI_MASTER_DISABLE_TIMEOUT: UInt32 = 800
let IXGBE_RAH_VIND_MASK: UInt32 = 0x003C0000
let IXGBE_RAH_VIND_SHIFT: UInt32 = 18
let IXGBE_RAH_AV: UInt32 = 0x80000000
let IXGBE_CLEAR_VMDQ_ALL: UInt32 = 0xFFFFFFFF
let IXGBE_RFCTL_ISCSI_DIS: UInt32 = 0x00000001
let IXGBE_RFCTL_ISCSI_DWC_MASK: UInt32 = 0x0000003E
let IXGBE_RFCTL_ISCSI_DWC_SHIFT: UInt32 = 1
let IXGBE_RFCTL_RSC_DIS: UInt32 = 0x00000020
let IXGBE_RFCTL_NFSW_DIS: UInt32 = 0x00000040
let IXGBE_RFCTL_NFSR_DIS: UInt32 = 0x00000080
let IXGBE_RFCTL_NFS_VER_MASK: UInt32 = 0x00000300
let IXGBE_RFCTL_NFS_VER_SHIFT: UInt32 = 8
let IXGBE_RFCTL_NFS_VER_2: UInt32 = 0
let IXGBE_RFCTL_NFS_VER_3: UInt32 = 1
let IXGBE_RFCTL_NFS_VER_4: UInt32 = 2
let IXGBE_RFCTL_IPV6_DIS: UInt32 = 0x00000400
let IXGBE_RFCTL_IPV6_XSUM_DIS: UInt32 = 0x00000800
let IXGBE_RFCTL_IPFRSP_DIS: UInt32 = 0x00004000
let IXGBE_RFCTL_IPV6_EX_DIS: UInt32 = 0x00010000
let IXGBE_RFCTL_NEW_IPV6_EXT_DIS: UInt32 = 0x00020000
let IXGBE_TXDCTL_ENABLE: UInt32 = 0x02000000 /* Ena specific Tx Queue */
let IXGBE_TXDCTL_SWFLSH: UInt32 = 0x04000000 /* Tx Desc. wr-bk flushing */
let IXGBE_TXDCTL_WTHRESH_SHIFT: UInt32 = 16 /* shift to WTHRESH bits */
let IXGBE_TX_PAD_ENABLE: UInt32 = 0x00000400
let IXGBE_JUMBO_FRAME_ENABLE: UInt32 = 0x00000004  /* Allow jumbo frames */
let IXGBE_MAX_FRAME_SZ: UInt32 = 0x40040000
let IXGBE_TDWBAL_HEAD_WB_ENABLE: UInt32 = 0x1 /* Tx head write-back enable */
let IXGBE_TDWBAL_SEQNUM_WB_ENABLE: UInt32 = 0x2 /* Tx seq# write-back enable */
let IXGBE_RXCTRL_RXEN: UInt32 = 0x00000001 /* Enable Receiver */
let IXGBE_RXCTRL_DMBYPS: UInt32 = 0x00000002 /* Desc Monitor Bypass */
let IXGBE_RXDCTL_ENABLE: UInt32 = 0x02000000 /* Ena specific Rx Queue */
let IXGBE_RXDCTL_SWFLSH: UInt32 = 0x04000000 /* Rx Desc wr-bk flushing */
let IXGBE_RXDCTL_RLPMLMASK: UInt32 = 0x00003FFF /* X540 supported only */
let IXGBE_RXDCTL_RLPML_EN: UInt32 = 0x00008000
let IXGBE_RXDCTL_VME: UInt32 = 0x40000000 /* VLAN mode enable */
let IXGBE_TSAUXC_EN_CLK: UInt32 = 0x00000004
let IXGBE_TSAUXC_SYNCLK: UInt32 = 0x00000008
let IXGBE_TSAUXC_SDP0_INT: UInt32 = 0x00000040
let IXGBE_TSAUXC_EN_TT0: UInt32 = 0x00000001
let IXGBE_TSAUXC_EN_TT1: UInt32 = 0x00000002
let IXGBE_TSAUXC_ST0: UInt32 = 0x00000010
let IXGBE_TSAUXC_DISABLE_SYSTIME: UInt32 = 0x80000000
let IXGBE_TSSDP_TS_SDP0_SEL_MASK: UInt32 = 0x000000C0
let IXGBE_TSSDP_TS_SDP0_CLK0: UInt32 = 0x00000080
let IXGBE_TSSDP_TS_SDP0_EN: UInt32 = 0x00000100
let IXGBE_TSYNCTXCTL_VALID: UInt32 = 0x00000001 /* Tx timestamp valid */
let IXGBE_TSYNCTXCTL_ENABLED: UInt32 = 0x00000010 /* Tx timestamping enabled */
let IXGBE_TSYNCRXCTL_VALID: UInt32 = 0x00000001 /* Rx timestamp valid */
let IXGBE_TSYNCRXCTL_TYPE_MASK: UInt32 = 0x0000000E /* Rx type mask */
let IXGBE_TSYNCRXCTL_TYPE_L2_V2: UInt32 = 0x00
let IXGBE_TSYNCRXCTL_TYPE_L4_V1: UInt32 = 0x02
let IXGBE_TSYNCRXCTL_TYPE_L2_L4_V2: UInt32 = 0x04
let IXGBE_TSYNCRXCTL_TYPE_ALL: UInt32 = 0x08
let IXGBE_TSYNCRXCTL_TYPE_EVENT_V2: UInt32 = 0x0A
let IXGBE_TSYNCRXCTL_ENABLED: UInt32 = 0x00000010 /* Rx Timestamping enabled */
let IXGBE_TSYNCRXCTL_TSIP_UT_EN: UInt32 = 0x00800000 /* Rx Timestamp in Packet */
let IXGBE_TSYNCRXCTL_TSIP_UP_MASK: UInt32 = 0xFF000000 /* Rx Timestamp UP Mask */
let IXGBE_TSIM_SYS_WRAP: UInt32 = 0x00000001
let IXGBE_TSIM_TXTS: UInt32 = 0x00000002
let IXGBE_TSIM_TADJ: UInt32 = 0x00000080
let IXGBE_TSICR_SYS_WRAP: UInt32 = IXGBE_TSIM_SYS_WRAP
let IXGBE_TSICR_TXTS: UInt32 = IXGBE_TSIM_TXTS
let IXGBE_TSICR_TADJ: UInt32 = IXGBE_TSIM_TADJ
let IXGBE_RXMTRL_V1_CTRLT_MASK: UInt32 = 0x000000FF
let IXGBE_RXMTRL_V1_SYNC_MSG: UInt32 = 0x00
let IXGBE_RXMTRL_V1_DELAY_REQ_MSG: UInt32 = 0x01
let IXGBE_RXMTRL_V1_FOLLOWUP_MSG: UInt32 = 0x02
let IXGBE_RXMTRL_V1_DELAY_RESP_MSG: UInt32 = 0x03
let IXGBE_RXMTRL_V1_MGMT_MSG: UInt32 = 0x04
let IXGBE_RXMTRL_V2_MSGID_MASK: UInt32 = 0x0000FF00
let IXGBE_RXMTRL_V2_SYNC_MSG: UInt32 = 0x0000
let IXGBE_RXMTRL_V2_DELAY_REQ_MSG: UInt32 = 0x0100
let IXGBE_RXMTRL_V2_PDELAY_REQ_MSG: UInt32 = 0x0200
let IXGBE_RXMTRL_V2_PDELAY_RESP_MSG: UInt32 = 0x0300
let IXGBE_RXMTRL_V2_FOLLOWUP_MSG: UInt32 = 0x0800
let IXGBE_RXMTRL_V2_DELAY_RESP_MSG: UInt32 = 0x0900
let IXGBE_RXMTRL_V2_PDELAY_FOLLOWUP_MSG: UInt32 = 0x0A00
let IXGBE_RXMTRL_V2_ANNOUNCE_MSG: UInt32 = 0x0B00
let IXGBE_RXMTRL_V2_SIGNALLING_MSG: UInt32 = 0x0C00
let IXGBE_RXMTRL_V2_MGMT_MSG: UInt32 = 0x0D00
let IXGBE_FCTRL_SBP: UInt32 = 0x00000002 /* Store Bad Packet */
let IXGBE_FCTRL_MPE: UInt32 = 0x00000100 /* Multicast Promiscuous Ena*/
let IXGBE_FCTRL_UPE: UInt32 = 0x00000200 /* Unicast Promiscuous Ena */
let IXGBE_FCTRL_BAM: UInt32 = 0x00000400 /* Broadcast Accept Mode */
let IXGBE_FCTRL_PMCF: UInt32 = 0x00001000 /* Pass MAC Control Frames */
let IXGBE_FCTRL_DPF: UInt32 = 0x00002000 /* Discard Pause Frame */
let IXGBE_FCTRL_RPFCE: UInt32 = 0x00004000
let IXGBE_FCTRL_RFCE: UInt32 = 0x00008000 /* Receive Flow Control Ena */
let IXGBE_MFLCN_PMCF: UInt32 = 0x00000001 /* Pass MAC Control Frames */
let IXGBE_MFLCN_DPF: UInt32 = 0x00000002 /* Discard Pause Frame */
let IXGBE_MFLCN_RPFCE: UInt32 = 0x00000004 /* Receive Priority FC Enable */
let IXGBE_MFLCN_RFCE: UInt32 = 0x00000008 /* Receive FC Enable */
let IXGBE_MFLCN_RPFCE_MASK: UInt32 = 0x00000FF4 /* Rx Priority FC bitmap mask */
let IXGBE_MFLCN_RPFCE_SHIFT: UInt32 = 4 /* Rx Priority FC bitmap shift */
let IXGBE_MRQC_RSSEN: UInt32 = 0x00000001  /* RSS Enable */
let IXGBE_MRQC_MRQE_MASK: UInt32 = 0xF /* Bits 3:0 */
let IXGBE_MRQC_RT8TCEN: UInt32 = 0x00000002 /* 8 TC no RSS */
let IXGBE_MRQC_RT4TCEN: UInt32 = 0x00000003 /* 4 TC no RSS */
let IXGBE_MRQC_RTRSS8TCEN: UInt32 = 0x00000004 /* 8 TC w/ RSS */
let IXGBE_MRQC_RTRSS4TCEN: UInt32 = 0x00000005 /* 4 TC w/ RSS */
let IXGBE_MRQC_VMDQEN: UInt32 = 0x00000008 /* VMDq2 64 pools no RSS */
let IXGBE_MRQC_VMDQRSS32EN: UInt32 = 0x0000000A /* VMDq2 32 pools w/ RSS */
let IXGBE_MRQC_VMDQRSS64EN: UInt32 = 0x0000000B /* VMDq2 64 pools w/ RSS */
let IXGBE_MRQC_VMDQRT8TCEN: UInt32 = 0x0000000C /* VMDq2/RT 16 pool 8 TC */
let IXGBE_MRQC_VMDQRT4TCEN: UInt32 = 0x0000000D /* VMDq2/RT 32 pool 4 TC */
let IXGBE_MRQC_L3L4TXSWEN: UInt32 = 0x00008000 /* Enable L3/L4 Tx switch */
let IXGBE_MRQC_RSS_FIELD_MASK: UInt32 = 0xFFFF0000
let IXGBE_MRQC_RSS_FIELD_IPV4_TCP: UInt32 = 0x00010000
let IXGBE_MRQC_RSS_FIELD_IPV4: UInt32 = 0x00020000
let IXGBE_MRQC_RSS_FIELD_IPV6_EX_TCP: UInt32 = 0x00040000
let IXGBE_MRQC_RSS_FIELD_IPV6_EX: UInt32 = 0x00080000
let IXGBE_MRQC_RSS_FIELD_IPV6: UInt32 = 0x00100000
let IXGBE_MRQC_RSS_FIELD_IPV6_TCP: UInt32 = 0x00200000
let IXGBE_MRQC_RSS_FIELD_IPV4_UDP: UInt32 = 0x00400000
let IXGBE_MRQC_RSS_FIELD_IPV6_UDP: UInt32 = 0x00800000
let IXGBE_MRQC_RSS_FIELD_IPV6_EX_UDP: UInt32 = 0x01000000
let IXGBE_MRQC_MULTIPLE_RSS: UInt32 = 0x00002000
let IXGBE_QDE_ENABLE: UInt32 = 0x00000001
let IXGBE_QDE_HIDE_VLAN: UInt32 = 0x00000002
let IXGBE_QDE_IDX_MASK: UInt32 = 0x00007F00
let IXGBE_QDE_IDX_SHIFT: UInt32 = 8
let IXGBE_QDE_WRITE: UInt32 = 0x00010000
let IXGBE_QDE_READ: UInt32 = 0x00020000
let IXGBE_TXD_POPTS_IXSM: UInt32 = 0x01 /* Insert IP checksum */
let IXGBE_TXD_POPTS_TXSM: UInt32 = 0x02 /* Insert TCP/UDP checksum */
let IXGBE_TXD_CMD_EOP: UInt32 = 0x01000000 /* End of Packet */
let IXGBE_TXD_CMD_IFCS: UInt32 = 0x02000000 /* Insert FCS (Ethernet CRC) */
let IXGBE_TXD_CMD_IC: UInt32 = 0x04000000 /* Insert Checksum */
let IXGBE_TXD_CMD_RS: UInt32 = 0x08000000 /* Report Status */
let IXGBE_TXD_CMD_DEXT: UInt32 = 0x20000000 /* Desc extension (0 = legacy) */
let IXGBE_TXD_CMD_VLE: UInt32 = 0x40000000 /* Add VLAN tag */
let IXGBE_TXD_STAT_DD: UInt32 = 0x00000001 /* Descriptor Done */
let IXGBE_RXDADV_IPSEC_STATUS_SECP: UInt32 = 0x00020000
let IXGBE_RXDADV_IPSEC_ERROR_INVALID_PROTOCOL: UInt32 = 0x08000000
let IXGBE_RXDADV_IPSEC_ERROR_INVALID_LENGTH: UInt32 = 0x10000000
let IXGBE_RXDADV_IPSEC_ERROR_AUTH_FAILED: UInt32 = 0x18000000
let IXGBE_RXDADV_IPSEC_ERROR_BIT_MASK: UInt32 = 0x18000000
let IXGBE_MTQC_RT_ENA: UInt32 = 0x1 /* DCB Enable */
let IXGBE_MTQC_VT_ENA: UInt32 = 0x2 /* VMDQ2 Enable */
let IXGBE_MTQC_64Q_1PB: UInt32 = 0x0 /* 64 queues 1 pack buffer */
let IXGBE_MTQC_32VF: UInt32 = 0x8 /* 4 TX Queues per pool w/32VF's */
let IXGBE_MTQC_64VF: UInt32 = 0x4 /* 2 TX Queues per pool w/64VF's */
let IXGBE_MTQC_4TC_4TQ: UInt32 = 0x8 /* 4 TC if RT_ENA and VT_ENA */
let IXGBE_MTQC_8TC_8TQ: UInt32 = 0xC /* 8 TC if RT_ENA or 8 TQ if VT_ENA */
let IXGBE_RXD_STAT_DD: UInt32 = 0x01 /* Descriptor Done */
let IXGBE_RXD_STAT_EOP: UInt32 = 0x02 /* End of Packet */
let IXGBE_RXD_STAT_FLM: UInt32 = 0x04 /* FDir Match */
let IXGBE_RXD_STAT_VP: UInt32 = 0x08 /* IEEE VLAN Packet */
let IXGBE_RXDADV_NEXTP_MASK: UInt32 = 0x000FFFF0 /* Next Descriptor Index */
let IXGBE_RXDADV_NEXTP_SHIFT: UInt32 = 0x00000004
let IXGBE_RXD_STAT_UDPCS: UInt32 = 0x10 /* UDP xsum calculated */
let IXGBE_RXD_STAT_L4CS: UInt32 = 0x20 /* L4 xsum calculated */
let IXGBE_RXD_STAT_IPCS: UInt32 = 0x40 /* IP xsum calculated */
let IXGBE_RXD_STAT_PIF: UInt32 = 0x80 /* passed in-exact filter */
let IXGBE_RXD_STAT_CRCV: UInt32 = 0x100 /* Speculative CRC Valid */
let IXGBE_RXD_STAT_OUTERIPCS: UInt32 = 0x100 /* Cloud IP xsum calculated */
let IXGBE_RXD_STAT_VEXT: UInt32 = 0x200 /* 1st VLAN found */
let IXGBE_RXD_STAT_UDPV: UInt32 = 0x400 /* Valid UDP checksum */
let IXGBE_RXD_STAT_DYNINT: UInt32 = 0x800 /* Pkt caused INT via DYNINT */
let IXGBE_RXD_STAT_LLINT: UInt32 = 0x800 /* Pkt caused Low Latency Interrupt */
let IXGBE_RXD_STAT_TSIP: UInt32 = 0x08000 /* Time Stamp in packet buffer */
let IXGBE_RXD_STAT_TS: UInt32 = 0x10000 /* Time Stamp */
let IXGBE_RXD_STAT_SECP: UInt32 = 0x20000 /* Security Processing */
let IXGBE_RXD_STAT_LB: UInt32 = 0x40000 /* Loopback Status */
let IXGBE_RXD_STAT_ACK: UInt32 = 0x8000 /* ACK Packet indication */
let IXGBE_RXD_ERR_CE: UInt32 = 0x01 /* CRC Error */
let IXGBE_RXD_ERR_LE: UInt32 = 0x02 /* Length Error */
let IXGBE_RXD_ERR_PE: UInt32 = 0x08 /* Packet Error */
let IXGBE_RXD_ERR_OSE: UInt32 = 0x10 /* Oversize Error */
let IXGBE_RXD_ERR_USE: UInt32 = 0x20 /* Undersize Error */
let IXGBE_RXD_ERR_TCPE: UInt32 = 0x40 /* TCP/UDP Checksum Error */
let IXGBE_RXD_ERR_IPE: UInt32 = 0x80 /* IP Checksum Error */
let IXGBE_RXDADV_ERR_MASK: UInt32 = 0xfff00000 /* RDESC.ERRORS mask */
let IXGBE_RXDADV_ERR_SHIFT: UInt32 = 20 /* RDESC.ERRORS shift */
let IXGBE_RXDADV_ERR_OUTERIPER: UInt32 = 0x04000000 /* CRC IP Header error */
let IXGBE_RXDADV_ERR_RXE: UInt32 = 0x20000000 /* Any MAC Error */
let IXGBE_RXDADV_ERR_FCEOFE: UInt32 = 0x80000000 /* FCEOFe/IPE */
let IXGBE_RXDADV_ERR_FCERR: UInt32 = 0x00700000 /* FCERR/FDIRERR */
let IXGBE_RXDADV_ERR_FDIR_LEN: UInt32 = 0x00100000 /* FDIR Length error */
let IXGBE_RXDADV_ERR_FDIR_DROP: UInt32 = 0x00200000 /* FDIR Drop error */
let IXGBE_RXDADV_ERR_FDIR_COLL: UInt32 = 0x00400000 /* FDIR Collision error */
let IXGBE_RXDADV_ERR_HBO: UInt32 = 0x00800000 /*Header Buffer Overflow */
let IXGBE_RXDADV_ERR_CE: UInt32 = 0x01000000 /* CRC Error */
let IXGBE_RXDADV_ERR_LE: UInt32 = 0x02000000 /* Length Error */
let IXGBE_RXDADV_ERR_PE: UInt32 = 0x08000000 /* Packet Error */
let IXGBE_RXDADV_ERR_OSE: UInt32 = 0x10000000 /* Oversize Error */
let IXGBE_RXDADV_ERR_USE: UInt32 = 0x20000000 /* Undersize Error */
let IXGBE_RXDADV_ERR_TCPE: UInt32 = 0x40000000 /* TCP/UDP Checksum Error */
let IXGBE_RXDADV_ERR_IPE: UInt32 = 0x80000000 /* IP Checksum Error */
let IXGBE_RXD_VLAN_ID_MASK: UInt32 = 0x0FFF  /* VLAN ID is in lower 12 bits */
let IXGBE_RXD_PRI_MASK: UInt32 = 0xE000  /* Priority is in upper 3 bits */
let IXGBE_RXD_PRI_SHIFT: UInt32 = 13
let IXGBE_RXD_CFI_MASK: UInt32 = 0x1000  /* CFI is bit 12 */
let IXGBE_RXD_CFI_SHIFT: UInt32 = 12
let IXGBE_RXDADV_STAT_DD: UInt32 = IXGBE_RXD_STAT_DD  /* Done */
let IXGBE_RXDADV_STAT_EOP: UInt32 = IXGBE_RXD_STAT_EOP /* End of Packet */
let IXGBE_RXDADV_STAT_FLM: UInt32 = IXGBE_RXD_STAT_FLM /* FDir Match */
let IXGBE_RXDADV_STAT_VP: UInt32 = IXGBE_RXD_STAT_VP  /* IEEE VLAN Pkt */
let IXGBE_RXDADV_STAT_MASK: UInt32 = 0x000fffff /* Stat/NEXTP: bit 0-19 */
let IXGBE_RXDADV_STAT_FCEOFS: UInt32 = 0x00000040 /* FCoE EOF/SOF Stat */
let IXGBE_RXDADV_STAT_FCSTAT: UInt32 = 0x00000030 /* FCoE Pkt Stat */
let IXGBE_RXDADV_STAT_FCSTAT_NOMTCH: UInt32 = 0x00000000 /* 00: No Ctxt Match */
let IXGBE_RXDADV_STAT_FCSTAT_NODDP: UInt32 = 0x00000010 /* 01: Ctxt w/o DDP */
let IXGBE_RXDADV_STAT_FCSTAT_FCPRSP: UInt32 = 0x00000020 /* 10: Recv. FCP_RSP */
let IXGBE_RXDADV_STAT_FCSTAT_DDP: UInt32 = 0x00000030 /* 11: Ctxt w/ DDP */
let IXGBE_RXDADV_STAT_TS: UInt32 = 0x00010000 /* IEEE1588 Time Stamp */
let IXGBE_RXDADV_STAT_TSIP: UInt32 = 0x00008000 /* Time Stamp in packet buffer */
let IXGBE_PSRTYPE_TCPHDR: UInt32 = 0x00000010
let IXGBE_PSRTYPE_UDPHDR: UInt32 = 0x00000020
let IXGBE_PSRTYPE_IPV4HDR: UInt32 = 0x00000100
let IXGBE_PSRTYPE_IPV6HDR: UInt32 = 0x00000200
let IXGBE_PSRTYPE_L2HDR: UInt32 = 0x00001000
let IXGBE_SRRCTL_BSIZEPKT_SHIFT: UInt32 = 10 /* so many KBs */
let IXGBE_SRRCTL_BSIZEHDRSIZE_SHIFT: UInt32 = 2
let IXGBE_SRRCTL_RDMTS_SHIFT: UInt32 = 22
let IXGBE_SRRCTL_RDMTS_MASK: UInt32 = 0x01C00000
let IXGBE_SRRCTL_DROP_EN: UInt32 = 0x10000000
let IXGBE_SRRCTL_BSIZEPKT_MASK: UInt32 = 0x0000007F
let IXGBE_SRRCTL_BSIZEHDR_MASK: UInt32 = 0x00003F00
let IXGBE_SRRCTL_DESCTYPE_LEGACY: UInt32 = 0x00000000
let IXGBE_SRRCTL_DESCTYPE_ADV_ONEBUF: UInt32 = 0x02000000
let IXGBE_SRRCTL_DESCTYPE_HDR_SPLIT: UInt32 = 0x04000000
let IXGBE_SRRCTL_DESCTYPE_HDR_REPLICATION_LARGE_PKT: UInt32 = 0x08000000
let IXGBE_SRRCTL_DESCTYPE_HDR_SPLIT_ALWAYS: UInt32 = 0x0A000000
let IXGBE_SRRCTL_DESCTYPE_MASK: UInt32 = 0x0E000000
let IXGBE_RXDPS_HDRSTAT_HDRSP: UInt32 = 0x00008000
let IXGBE_RXDPS_HDRSTAT_HDRLEN_MASK: UInt32 = 0x000003FF
let IXGBE_RXDADV_RSSTYPE_MASK: UInt32 = 0x0000000F
let IXGBE_RXDADV_PKTTYPE_MASK: UInt32 = 0x0000FFF0
let IXGBE_RXDADV_PKTTYPE_MASK_EX: UInt32 = 0x0001FFF0
let IXGBE_RXDADV_HDRBUFLEN_MASK: UInt32 = 0x00007FE0
let IXGBE_RXDADV_RSCCNT_MASK: UInt32 = 0x001E0000
let IXGBE_RXDADV_RSCCNT_SHIFT: UInt32 = 17
let IXGBE_RXDADV_HDRBUFLEN_SHIFT: UInt32 = 5
let IXGBE_RXDADV_SPLITHEADER_EN: UInt32 = 0x00001000
let IXGBE_RXDADV_SPH: UInt32 = 0x8000
let IXGBE_RXDADV_RSSTYPE_NONE: UInt32 = 0x00000000
let IXGBE_RXDADV_RSSTYPE_IPV4_TCP: UInt32 = 0x00000001
let IXGBE_RXDADV_RSSTYPE_IPV4: UInt32 = 0x00000002
let IXGBE_RXDADV_RSSTYPE_IPV6_TCP: UInt32 = 0x00000003
let IXGBE_RXDADV_RSSTYPE_IPV6_EX: UInt32 = 0x00000004
let IXGBE_RXDADV_RSSTYPE_IPV6: UInt32 = 0x00000005
let IXGBE_RXDADV_RSSTYPE_IPV6_TCP_EX: UInt32 = 0x00000006
let IXGBE_RXDADV_RSSTYPE_IPV4_UDP: UInt32 = 0x00000007
let IXGBE_RXDADV_RSSTYPE_IPV6_UDP: UInt32 = 0x00000008
let IXGBE_RXDADV_RSSTYPE_IPV6_UDP_EX: UInt32 = 0x00000009
let IXGBE_RXDADV_PKTTYPE_NONE: UInt32 = 0x00000000
let IXGBE_RXDADV_PKTTYPE_IPV4: UInt32 = 0x00000010 /* IPv4 hdr present */
let IXGBE_RXDADV_PKTTYPE_IPV4_EX: UInt32 = 0x00000020 /* IPv4 hdr + extensions */
let IXGBE_RXDADV_PKTTYPE_IPV6: UInt32 = 0x00000040 /* IPv6 hdr present */
let IXGBE_RXDADV_PKTTYPE_IPV6_EX: UInt32 = 0x00000080 /* IPv6 hdr + extensions */
let IXGBE_RXDADV_PKTTYPE_TCP: UInt32 = 0x00000100 /* TCP hdr present */
let IXGBE_RXDADV_PKTTYPE_UDP: UInt32 = 0x00000200 /* UDP hdr present */
let IXGBE_RXDADV_PKTTYPE_SCTP: UInt32 = 0x00000400 /* SCTP hdr present */
let IXGBE_RXDADV_PKTTYPE_NFS: UInt32 = 0x00000800 /* NFS hdr present */
let IXGBE_RXDADV_PKTTYPE_GENEVE: UInt32 = 0x00000800 /* GENEVE hdr present */
let IXGBE_RXDADV_PKTTYPE_VXLAN: UInt32 = 0x00000800 /* VXLAN hdr present */
let IXGBE_RXDADV_PKTTYPE_TUNNEL: UInt32 = 0x00010000 /* Tunnel type */
let IXGBE_RXDADV_PKTTYPE_IPSEC_ESP: UInt32 = 0x00001000 /* IPSec ESP */
let IXGBE_RXDADV_PKTTYPE_IPSEC_AH: UInt32 = 0x00002000 /* IPSec AH */
let IXGBE_RXDADV_PKTTYPE_LINKSEC: UInt32 = 0x00004000 /* LinkSec Encap */
let IXGBE_RXDADV_PKTTYPE_ETQF: UInt32 = 0x00008000 /* PKTTYPE is ETQF index */
let IXGBE_RXDADV_PKTTYPE_ETQF_MASK: UInt32 = 0x00000070 /* ETQF has 8 indices */
let IXGBE_RXDADV_PKTTYPE_ETQF_SHIFT: UInt32 = 4 /* Right-shift 4 bits */
let IXGBE_RXDADV_LNKSEC_STATUS_SECP: UInt32 = 0x00020000
let IXGBE_RXDADV_LNKSEC_ERROR_NO_SA_MATCH: UInt32 = 0x08000000
let IXGBE_RXDADV_LNKSEC_ERROR_REPLAY_ERROR: UInt32 = 0x10000000
let IXGBE_RXDADV_LNKSEC_ERROR_BIT_MASK: UInt32 = 0x18000000
let IXGBE_RXDADV_LNKSEC_ERROR_BAD_SIG: UInt32 = 0x18000000
let IXGBE_RXDADV_ERR_FRAME_ERR_MASK_82599: UInt32 = IXGBE_RXDADV_ERR_RXE
let IXGBE_MCSTCTRL_MFE: UInt32 = 0x4
let IXGBE_REQ_TX_DESCRIPTOR_MULTIPLE: UInt32 = 8
let IXGBE_REQ_RX_DESCRIPTOR_MULTIPLE: UInt32 = 8
let IXGBE_REQ_TX_BUFFER_GRANULARITY: UInt32 = 1024
let IXGBE_RX_DESC_SPECIAL_VLAN_MASK: UInt32 = 0x0FFF /* VLAN ID in lower 12 bits */
let IXGBE_RX_DESC_SPECIAL_PRI_MASK: UInt32 = 0xE000 /* Priority in upper 3 bits */
let IXGBE_RX_DESC_SPECIAL_PRI_SHIFT: UInt32 = 0x000D /* Priority in upper 3 of 16 */
let IXGBE_TX_DESC_SPECIAL_PRI_SHIFT: UInt32 = IXGBE_RX_DESC_SPECIAL_PRI_SHIFT
let IXGBE_FDIRCTRL_PBALLOC_64K: UInt32 = 0x00000001
let IXGBE_FDIRCTRL_PBALLOC_128K: UInt32 = 0x00000002
let IXGBE_FDIRCTRL_PBALLOC_256K: UInt32 = 0x00000003
let IXGBE_FDIRCTRL_INIT_DONE: UInt32 = 0x00000008
let IXGBE_FDIRCTRL_PERFECT_MATCH: UInt32 = 0x00000010
let IXGBE_FDIRCTRL_REPORT_STATUS: UInt32 = 0x00000020
let IXGBE_FDIRCTRL_REPORT_STATUS_ALWAYS: UInt32 = 0x00000080
let IXGBE_FDIRCTRL_DROP_Q_SHIFT: UInt32 = 8
let IXGBE_FDIRCTRL_DROP_Q_MASK: UInt32 = 0x00007F00
let IXGBE_FDIRCTRL_FLEX_SHIFT: UInt32 = 16
let IXGBE_FDIRCTRL_DROP_NO_MATCH: UInt32 = 0x00008000
let IXGBE_FDIRCTRL_FILTERMODE_SHIFT: UInt32 = 21
let IXGBE_FDIRCTRL_FILTERMODE_MACVLAN: UInt32 = 0x0001 /* bit 23:21, 001b */
let IXGBE_FDIRCTRL_FILTERMODE_CLOUD: UInt32 = 0x0002 /* bit 23:21, 010b */
let IXGBE_FDIRCTRL_SEARCHLIM: UInt32 = 0x00800000
let IXGBE_FDIRCTRL_FILTERMODE_MASK: UInt32 = 0x00E00000
let IXGBE_FDIRCTRL_MAX_LENGTH_SHIFT: UInt32 = 24
let IXGBE_FDIRCTRL_FULL_THRESH_MASK: UInt32 = 0xF0000000
let IXGBE_FDIRCTRL_FULL_THRESH_SHIFT: UInt32 = 28
let IXGBE_FDIRTCPM_DPORTM_SHIFT: UInt32 = 16
let IXGBE_FDIRUDPM_DPORTM_SHIFT: UInt32 = 16
let IXGBE_FDIRIP6M_DIPM_SHIFT: UInt32 = 16
let IXGBE_FDIRM_VLANID: UInt32 = 0x00000001
let IXGBE_FDIRM_VLANP: UInt32 = 0x00000002
let IXGBE_FDIRM_POOL: UInt32 = 0x00000004
let IXGBE_FDIRM_L4P: UInt32 = 0x00000008
let IXGBE_FDIRM_FLEX: UInt32 = 0x00000010
let IXGBE_FDIRM_DIPv6: UInt32 = 0x00000020
let IXGBE_FDIRM_L3P: UInt32 = 0x00000040
let IXGBE_FDIRIP6M_INNER_MAC: UInt32 = 0x03F0 /* bit 9:4 */
let IXGBE_FDIRIP6M_TUNNEL_TYPE: UInt32 = 0x0800 /* bit 11 */
let IXGBE_FDIRIP6M_TNI_VNI: UInt32 = 0xF000 /* bit 15:12 */
let IXGBE_FDIRIP6M_TNI_VNI_24: UInt32 = 0x1000 /* bit 12 */
let IXGBE_FDIRIP6M_ALWAYS_MASK: UInt32 = 0x040F /* bit 10, 3:0 */
let IXGBE_FDIRFREE_FREE_MASK: UInt32 = 0xFFFF
let IXGBE_FDIRFREE_FREE_SHIFT: UInt32 = 0
let IXGBE_FDIRFREE_COLL_MASK: UInt32 = 0x7FFF0000
let IXGBE_FDIRFREE_COLL_SHIFT: UInt32 = 16
let IXGBE_FDIRLEN_MAXLEN_MASK: UInt32 = 0x3F
let IXGBE_FDIRLEN_MAXLEN_SHIFT: UInt32 = 0
let IXGBE_FDIRLEN_MAXHASH_MASK: UInt32 = 0x7FFF0000
let IXGBE_FDIRLEN_MAXHASH_SHIFT: UInt32 = 16
let IXGBE_FDIRUSTAT_ADD_MASK: UInt32 = 0xFFFF
let IXGBE_FDIRUSTAT_ADD_SHIFT: UInt32 = 0
let IXGBE_FDIRUSTAT_REMOVE_MASK: UInt32 = 0xFFFF0000
let IXGBE_FDIRUSTAT_REMOVE_SHIFT: UInt32 = 16
let IXGBE_FDIRFSTAT_FADD_MASK: UInt32 = 0x00FF
let IXGBE_FDIRFSTAT_FADD_SHIFT: UInt32 = 0
let IXGBE_FDIRFSTAT_FREMOVE_MASK: UInt32 = 0xFF00
let IXGBE_FDIRFSTAT_FREMOVE_SHIFT: UInt32 = 8
let IXGBE_FDIRPORT_DESTINATION_SHIFT: UInt32 = 16
let IXGBE_FDIRVLAN_FLEX_SHIFT: UInt32 = 16
let IXGBE_FDIRHASH_BUCKET_VALID_SHIFT: UInt32 = 15
let IXGBE_FDIRHASH_SIG_SW_INDEX_SHIFT: UInt32 = 16
let IXGBE_FDIRCMD_CMD_MASK: UInt32 = 0x00000003
let IXGBE_FDIRCMD_CMD_ADD_FLOW: UInt32 = 0x00000001
let IXGBE_FDIRCMD_CMD_REMOVE_FLOW: UInt32 = 0x00000002
let IXGBE_FDIRCMD_CMD_QUERY_REM_FILT: UInt32 = 0x00000003
let IXGBE_FDIRCMD_FILTER_VALID: UInt32 = 0x00000004
let IXGBE_FDIRCMD_FILTER_UPDATE: UInt32 = 0x00000008
let IXGBE_FDIRCMD_IPv6DMATCH: UInt32 = 0x00000010
let IXGBE_FDIRCMD_L4TYPE_UDP: UInt32 = 0x00000020
let IXGBE_FDIRCMD_L4TYPE_TCP: UInt32 = 0x00000040
let IXGBE_FDIRCMD_L4TYPE_SCTP: UInt32 = 0x00000060
let IXGBE_FDIRCMD_IPV6: UInt32 = 0x00000080
let IXGBE_FDIRCMD_CLEARHT: UInt32 = 0x00000100
let IXGBE_FDIRCMD_DROP: UInt32 = 0x00000200
let IXGBE_FDIRCMD_INT: UInt32 = 0x00000400
let IXGBE_FDIRCMD_LAST: UInt32 = 0x00000800
let IXGBE_FDIRCMD_COLLISION: UInt32 = 0x00001000
let IXGBE_FDIRCMD_QUEUE_EN: UInt32 = 0x00008000
let IXGBE_FDIRCMD_FLOW_TYPE_SHIFT: UInt32 = 5
let IXGBE_FDIRCMD_RX_QUEUE_SHIFT: UInt32 = 16
let IXGBE_FDIRCMD_TUNNEL_FILTER_SHIFT: UInt32 = 23
let IXGBE_FDIRCMD_VT_POOL_SHIFT: UInt32 = 24
let IXGBE_FDIR_INIT_DONE_POLL: UInt32 = 10
let IXGBE_FDIRCMD_CMD_POLL: UInt32 = 10
let IXGBE_FDIRCMD_TUNNEL_FILTER: UInt32 = 0x00800000
let IXGBE_FDIR_DROP_QUEUE: UInt32 = 127
let IXGBE_HI_MAX_BLOCK_BYTE_LENGTH: UInt32 = 1792 /* Num of bytes in range */
let IXGBE_HI_MAX_BLOCK_DWORD_LENGTH: UInt32 = 448 /* Num of dwords in range */
let IXGBE_HI_COMMAND_TIMEOUT: UInt32 = 500 /* Process HI command limit */
let IXGBE_HI_FLASH_ERASE_TIMEOUT: UInt32 = 1000 /* Process Erase command limit */
let IXGBE_HI_FLASH_UPDATE_TIMEOUT: UInt32 = 5000 /* Process Update command limit */
let IXGBE_HI_FLASH_APPLY_TIMEOUT: UInt32 = 0 /* Process Apply command limit */
let IXGBE_HI_PHY_MGMT_REQ_TIMEOUT: UInt32 = 2000 /* Wait up to 2 seconds */
let IXGBE_ADVTXD_DTALEN_MASK: UInt32 = 0x0000FFFF /* Data buf length(bytes) */
let IXGBE_ADVTXD_MAC_LINKSEC: UInt32 = 0x00040000 /* Insert LinkSec */
let IXGBE_ADVTXD_MAC_TSTAMP: UInt32 = 0x00080000 /* IEEE1588 time stamp */
let IXGBE_ADVTXD_IPSEC_SA_INDEX_MASK: UInt32 = 0x000003FF /* IPSec SA index */
let IXGBE_ADVTXD_IPSEC_ESP_LEN_MASK: UInt32 = 0x000001FF /* IPSec ESP length */
let IXGBE_ADVTXD_DTYP_MASK: UInt32 = 0x00F00000 /* DTYP mask */
let IXGBE_ADVTXD_DTYP_CTXT: UInt32 = 0x00200000 /* Adv Context Desc */
let IXGBE_ADVTXD_DTYP_DATA: UInt32 = 0x00300000 /* Adv Data Descriptor */
let IXGBE_ADVTXD_DCMD_EOP: UInt32 = IXGBE_TXD_CMD_EOP  /* End of Packet */
let IXGBE_ADVTXD_DCMD_IFCS: UInt32 = IXGBE_TXD_CMD_IFCS /* Insert FCS */
let IXGBE_ADVTXD_DCMD_RS: UInt32 = IXGBE_TXD_CMD_RS /* Report Status */
let IXGBE_ADVTXD_DCMD_DDTYP_ISCSI: UInt32 = 0x10000000 /* DDP hdr type or iSCSI */
let IXGBE_ADVTXD_DCMD_DEXT: UInt32 = IXGBE_TXD_CMD_DEXT /* Desc ext 1=Adv */
let IXGBE_ADVTXD_DCMD_VLE: UInt32 = IXGBE_TXD_CMD_VLE  /* VLAN pkt enable */
let IXGBE_ADVTXD_DCMD_TSE: UInt32 = 0x80000000 /* TCP Seg enable */
let IXGBE_ADVTXD_STAT_DD: UInt32 = IXGBE_TXD_STAT_DD  /* Descriptor Done */
let IXGBE_ADVTXD_STAT_SN_CRC: UInt32 = 0x00000002 /* NXTSEQ/SEED pres in WB */
let IXGBE_ADVTXD_STAT_RSV: UInt32 = 0x0000000C /* STA Reserved */
let IXGBE_ADVTXD_IDX_SHIFT: UInt32 = 4 /* Adv desc Index shift */
let IXGBE_ADVTXD_CC: UInt32 = 0x00000080 /* Check Context */
let IXGBE_ADVTXD_POPTS_SHIFT: UInt32 = 8  /* Adv desc POPTS shift */
let IXGBE_ADVTXD_POPTS_ISCO_1ST: UInt32 = 0x00000000 /* 1st TSO of iSCSI PDU */
let IXGBE_ADVTXD_POPTS_ISCO_MDL: UInt32 = 0x00000800 /* Middle TSO of iSCSI PDU */
let IXGBE_ADVTXD_POPTS_ISCO_LAST: UInt32 = 0x00001000 /* Last TSO of iSCSI PDU */
let IXGBE_ADVTXD_POPTS_ISCO_FULL: UInt32 = 0x00001800
let IXGBE_ADVTXD_POPTS_RSV: UInt32 = 0x00002000 /* POPTS Reserved */
let IXGBE_ADVTXD_PAYLEN_SHIFT: UInt32 = 14 /* Adv desc PAYLEN shift */
let IXGBE_ADVTXD_MACLEN_SHIFT: UInt32 = 9  /* Adv ctxt desc mac len shift */
let IXGBE_ADVTXD_VLAN_SHIFT: UInt32 = 16  /* Adv ctxt vlan tag shift */
let IXGBE_ADVTXD_TUCMD_IPV4: UInt32 = 0x00000400 /* IP Packet Type: 1=IPv4 */
let IXGBE_ADVTXD_TUCMD_IPV6: UInt32 = 0x00000000 /* IP Packet Type: 0=IPv6 */
let IXGBE_ADVTXD_TUCMD_L4T_UDP: UInt32 = 0x00000000 /* L4 Packet TYPE of UDP */
let IXGBE_ADVTXD_TUCMD_L4T_TCP: UInt32 = 0x00000800 /* L4 Packet TYPE of TCP */
let IXGBE_ADVTXD_TUCMD_L4T_SCTP: UInt32 = 0x00001000 /* L4 Packet TYPE of SCTP */
let IXGBE_ADVTXD_TUCMD_L4T_RSV: UInt32 = 0x00001800 /* RSV L4 Packet TYPE */
let IXGBE_ADVTXD_TUCMD_MKRREQ: UInt32 = 0x00002000 /* req Markers and CRC */
let IXGBE_ADVTXD_POPTS_IPSEC: UInt32 = 0x00000400 /* IPSec offload request */
let IXGBE_ADVTXD_TUCMD_IPSEC_TYPE_ESP: UInt32 = 0x00002000 /* IPSec Type ESP */
let IXGBE_ADVTXD_TUCMD_IPSEC_ENCRYPT_EN: UInt32 = 0x00004000/* ESP Encrypt Enable */
let IXGBE_ADVTXT_TUCMD_FCOE: UInt32 = 0x00008000 /* FCoE Frame Type */
let IXGBE_ADVTXD_L4LEN_SHIFT: UInt32 = 8  /* Adv ctxt L4LEN shift */
let IXGBE_ADVTXD_MSS_SHIFT: UInt32 = 16  /* Adv ctxt MSS shift */
let IXGBE_ADVTXD_OUTER_IPLEN: UInt32 = 16 /* Adv ctxt OUTERIPLEN shift */
let IXGBE_ADVTXD_TUNNEL_LEN: UInt32 = 24 /* Adv ctxt TUNNELLEN shift */
let IXGBE_ADVTXD_TUNNEL_TYPE_SHIFT: UInt32 = 16 /* Adv Tx Desc Tunnel Type shift */
let IXGBE_ADVTXD_OUTERIPCS_SHIFT: UInt32 = 17 /* Adv Tx Desc OUTERIPCS Shift */
let IXGBE_ADVTXD_TUNNEL_TYPE_NVGRE: UInt32 = 1  /* Adv Tx Desc Tunnel Type NVGRE */
let IXGBE_ADVTXD_OUTERIPCS_SHIFT_X550EM_a: UInt32 = 26
let IXGBE_LINK_SPEED_UNKNOWN: UInt32 = 0
let IXGBE_LINK_SPEED_10_FULL: UInt32 = 0x0002
let IXGBE_LINK_SPEED_100_FULL: UInt32 = 0x0008
let IXGBE_LINK_SPEED_1GB_FULL: UInt32 = 0x0020
let IXGBE_LINK_SPEED_2_5GB_FULL: UInt32 = 0x0400
let IXGBE_LINK_SPEED_5GB_FULL: UInt32 = 0x0800
let IXGBE_LINK_SPEED_10GB_FULL: UInt32 = 0x0080
let IXGBE_PHYSICAL_LAYER_UNKNOWN: UInt32 = 0
let IXGBE_PHYSICAL_LAYER_10GBASE_T: UInt32 = 0x00001
let IXGBE_PHYSICAL_LAYER_1000BASE_T: UInt32 = 0x00002
let IXGBE_PHYSICAL_LAYER_100BASE_TX: UInt32 = 0x00004
let IXGBE_PHYSICAL_LAYER_SFP_PLUS_CU: UInt32 = 0x00008
let IXGBE_PHYSICAL_LAYER_10GBASE_LR: UInt32 = 0x00010
let IXGBE_PHYSICAL_LAYER_10GBASE_LRM: UInt32 = 0x00020
let IXGBE_PHYSICAL_LAYER_10GBASE_SR: UInt32 = 0x00040
let IXGBE_PHYSICAL_LAYER_10GBASE_KX4: UInt32 = 0x00080
let IXGBE_PHYSICAL_LAYER_10GBASE_CX4: UInt32 = 0x00100
let IXGBE_PHYSICAL_LAYER_1000BASE_KX: UInt32 = 0x00200
let IXGBE_PHYSICAL_LAYER_1000BASE_BX: UInt32 = 0x00400
let IXGBE_PHYSICAL_LAYER_10GBASE_KR: UInt32 = 0x00800
let IXGBE_PHYSICAL_LAYER_10GBASE_XAUI: UInt32 = 0x01000
let IXGBE_PHYSICAL_LAYER_SFP_ACTIVE_DA: UInt32 = 0x02000
let IXGBE_PHYSICAL_LAYER_1000BASE_SX: UInt32 = 0x04000
let IXGBE_PHYSICAL_LAYER_10BASE_T: UInt32 = 0x08000
let IXGBE_PHYSICAL_LAYER_2500BASE_KX: UInt32 = 0x10000
let IXGBE_PFC_D: UInt32 = 672
let IXGBE_CABLE_DC: UInt32 = 5556 /* Delay Copper */
let IXGBE_CABLE_DO: UInt32 = 5000 /* Delay Optical */
let IXGBE_PHY_DC: UInt32 = 25600 /* Delay 10G BASET */
let IXGBE_MAC_DC: UInt32 = 8192  /* Delay Copper XAUI interface */
let IXGBE_PHY_D: UInt32 = 12800
let IXGBE_MAC_D: UInt32 = 4096
let IXGBE_HD: UInt32 = 6144
let IXGBE_PCI_DELAY: UInt32 = 10000
let IXGBE_ATR_BUCKET_HASH_KEY: UInt32 = 0x3DAD14E2
let IXGBE_ATR_SIGNATURE_HASH_KEY: UInt32 = 0x174D3614
let IXGBE_ATR_HASH_MASK: UInt32 = 0x7fff
let IXGBE_ATR_L4TYPE_MASK: UInt32 = 0x3
let IXGBE_ATR_L4TYPE_UDP: UInt32 = 0x1
let IXGBE_ATR_L4TYPE_TCP: UInt32 = 0x2
let IXGBE_ATR_L4TYPE_SCTP: UInt32 = 0x3
let IXGBE_ATR_L4TYPE_IPV6_MASK: UInt32 = 0x4
let IXGBE_ATR_L4TYPE_TUNNEL_MASK: UInt32 = 0x10
let IXGBE_SMARTSPEED_MAX_RETRIES: UInt32 = 3
let IXGBE_SB_IOSF_INDIRECT_CTRL: UInt32 = 0x00011144
let IXGBE_SB_IOSF_INDIRECT_DATA: UInt32 = 0x00011148
let IXGBE_SB_IOSF_CTRL_ADDR_SHIFT: UInt32 = 0
let IXGBE_SB_IOSF_CTRL_ADDR_MASK: UInt32 = 0xFF
let IXGBE_SB_IOSF_CTRL_RESP_STAT_SHIFT: UInt32 = 18
let IXGBE_SB_IOSF_CTRL_CMPL_ERR_SHIFT: UInt32 = 20
let IXGBE_SB_IOSF_CTRL_TARGET_SELECT_SHIFT: UInt32 = 28
let IXGBE_SB_IOSF_CTRL_TARGET_SELECT_MASK: UInt32 = 0x7
let IXGBE_SB_IOSF_CTRL_BUSY_SHIFT: UInt32 = 31
let IXGBE_SB_IOSF_TARGET_KR_PHY: UInt32 = 0
let IXGBE_NW_MNG_IF_SEL: UInt32 = 0x00011178
let IXGBE_NW_MNG_IF_SEL_MDIO_PHY_ADD_SHIFT: UInt32 = 3
